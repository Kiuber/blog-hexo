{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/BingSiteAuth.xml","path":"BingSiteAuth.xml","modified":1,"renderable":0},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next-5.1.3/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/favicon-16x16.png","path":"images/favicon-16x16.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/favicon-32x32.png","path":"images/favicon-32x32.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/BingSiteAuth.xml","hash":"0ab2593677f004e5a5b867e8ad381e34a36a1538","modified":1475672205119},{"_id":"source/CNAME","hash":"fb67f64808288a7f4dc1bf46dbb1002667f6927a","modified":1461310735537},{"_id":"themes/hexo-theme-next-5.1.3/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/README.cn.md","hash":"6d9177e7dad87e6129760e4b559bd3f7a15429d7","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/README.md","hash":"aba736f1b934f2b169035ccf94d2771a270ec21d","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/_config.yml","hash":"47dc344c74cff192e5b9daa711aae1cdc559f5dd","modified":1509450333826},{"_id":"themes/hexo-theme-next-5.1.3/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/package.json","hash":"2174d61cbc9fa276a82b02649426842f088825ab","modified":1506717744000},{"_id":"source/_discarded/Untitled.md","hash":"c831b3822378d35faf78771788580408cbff122e","modified":1509286307747},{"_id":"source/_posts/ShareMy.md","hash":"fe069d692297a441bbaa625427a8ecf1ed2a1524","modified":1496924429261},{"_id":"source/_posts/about-build-blog.md","hash":"27cc4de17afce0cdfa5a5453c7d7026edc0690b5","modified":1496924429276},{"_id":"source/_posts/aibizhi-source.md","hash":"3767ff87ff3e85fec95e7fbc94425719dbdeb408","modified":1496924429277},{"_id":"source/_posts/android-n-file-provider.md","hash":"9dac08cac9ba201397d2a98abf1465c82163e83e","modified":1509174389000},{"_id":"source/_posts/android-socket.md","hash":"3234a940460166127ec1d2a4b7c809ed25de6d13","modified":1496924429278},{"_id":"source/_posts/android-studio-adb-wifi.md","hash":"58be07d125dec3ee4ec90700181d9c96bb1c92d4","modified":1496924429280},{"_id":"source/_posts/android-studio-add-so.md","hash":"9d9ebadb7ca3986cc228729e337c902eef08da02","modified":1496924429282},{"_id":"source/_posts/android-study-TabLayout-ViewPager.md","hash":"63f4a35a9aaaaee6f6c39449572d6117e6294226","modified":1496924429283},{"_id":"source/_posts/awesome-android-tips.md","hash":"afbbba752aa23c6e9af3ca632c6278cd2ee791cc","modified":1496924429284},{"_id":"source/_posts/build-self-blog-knowledge.md","hash":"6cf4f8d409ac01e93a3077bd41586cb5dcaf74ae","modified":1496924429286},{"_id":"source/_posts/centos-desktop.md","hash":"125944c390bc57be1495bc82951049c42500287b","modified":1496924429285},{"_id":"source/_posts/centos7-mysql.md","hash":"80615ba28e8674310f1263ea79049318ba696b3a","modified":1496924429287},{"_id":"source/_posts/change-ubuntu-computer-name.md","hash":"96a46cb5cdca0acb7d5b2e52227b804d55300927","modified":1509431826216},{"_id":"source/_posts/computer-shortcut-key.md","hash":"68d6d1da0f1f46598efa8c0fd6fcab13e0331623","modified":1496924429292},{"_id":"source/_posts/countdown-mysql.md","hash":"dd0dfa86cbfcaaa34d6906ea5f04c842d0462b56","modified":1496924429288},{"_id":"source/_posts/csharp-sql.md","hash":"1371204f56cb55ddc3fc26f99943a0c1f97b8952","modified":1496924429290},{"_id":"source/_posts/float-windows.md","hash":"802c9fc6c03d07b488ab6406d46b3b220f6f28d3","modified":1496924429293},{"_id":"source/_posts/function-for-me.md","hash":"85b98da200cf64d7a87653d3074569882d40dd18","modified":1496924429294},{"_id":"source/_posts/gather-Third-party-service-sdk.md","hash":"db3f1b9d16f589cde972297ddb5e812bdf459217","modified":1496924429295},{"_id":"source/_posts/improve-android-parse-qrc.md","hash":"0d0587e8c835dcc45c7bae2ba6d1b9d9fb4614c0","modified":1499336431621},{"_id":"source/_posts/install-nodejs-on-ubuntu-by-nvm.md","hash":"0300dd6ec97d954dcbc621befb0d3d343f4a273f","modified":1509431898965},{"_id":"source/_posts/java-regex.md","hash":"db30cb745153a52eb13347073c3d855c8e41c930","modified":1496924429303},{"_id":"source/_posts/java-web-servlet.md","hash":"d0fc3ac25acf95c8d425199ce3ddb6dd82d40281","modified":1496924429304},{"_id":"source/_posts/linux-first-use-smb.md","hash":"13879f35552788c60f3f09620594e144341f1d2c","modified":1509179539366},{"_id":"source/_posts/md-code.md","hash":"0a15e1b173c1bc9a67c6c994970dd96be6392366","modified":1496924429306},{"_id":"source/_posts/often-excel.md","hash":"d8ceb7ee5cca2d75ae5869810d7e92536ceaad30","modified":1496924429307},{"_id":"source/_posts/some-hex-color.md","hash":"2620241cd6bd7f2fdae539e4938b570eb1b53ebe","modified":1496924429310},{"_id":"source/_posts/wechat-app-https.md","hash":"42d2366b9582eced3b1c0a7e940afb822b1d68bb","modified":1496924429311},{"_id":"source/_posts/wechat-app.md","hash":"bed1cb1939bcd51ccc2a31118a1c1944641e726f","modified":1496924429312},{"_id":"source/about/index.md","hash":"cf3a5aca6bfb92f7fb72b0be3ae182e68cb52a4d","modified":1509191475923},{"_id":"source/categories/index.md","hash":"8a84cfe6649b6354bb2073a8eef4b19b7607d03c","modified":1495416903350},{"_id":"source/tags/index.md","hash":"66ff59de41660d27bf7381d67ec879fa046852a4","modified":1491834593217},{"_id":"source/tools/index.md","hash":"ecb490ccb82ae1cf35de8c64b9e53233c07405aa","modified":1461467339953},{"_id":"themes/hexo-theme-next-5.1.3/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/en.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/zh-Hans.yml","hash":"f2106063a8f3936d400bf655e720265e0c868f6f","modified":1509190409202},{"_id":"themes/hexo-theme-next-5.1.3/languages/zh-hk.yml","hash":"2ef272bcb1f325480f59f1e2ab95584de3c6b8da","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/languages/zh-tw.yml","hash":"c53941a2eaac8e3a2f8dacc73ed555d3c6c5bd59","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_layout.swig","hash":"72a1a2612f7c14cc9af51c55c8dfac39d6c0a2bf","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_macro/post.swig","hash":"767e1d5503ecce85f577c8fb673a3503b65484ce","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_macro/sidebar.swig","hash":"9efc455894921a66bbc074055d3b39c8a34a48a4","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/comments.swig","hash":"0fbeb56e9c4d5193c6a181d45c4b1b7a44a0e027","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/apple-touch-icon.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/avatar.png","hash":"8d8cf5b3cb291a37d78d76c589a57c9bcfa03f2c","modified":1481527327011},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/favicon-16x16.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/favicon-32x32.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509181259850},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/comments/index.swig","hash":"576e716893153a855eaf6d136fad7cb6d4065e09","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/comments/valine.swig","hash":"9f4ed36c73e890909b8ebbe601fb60e13d048288","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_variables/Pisces.styl","hash":"ec79c23f1956bade7bcaa7189d97b7463b8f9f75","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_variables/base.styl","hash":"4df88b33f4bd31b872b5c842405267256024f75a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/utils.js","hash":"6b0eeeb9dda4a7c94c1c4f6fafd2c801da6e8f96","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Mist/_posts-expanded.styl","hash":"5e6c9f8a730b78c7ce5572d327c2a7311c3609b9","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Pisces/_layout.styl","hash":"7759fcd303a3f56800f52a1b1d9f06a998e87503","modified":1509182195692},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Pisces/_sidebar.styl","hash":"f3991aeca25d0814f5cea800b58f25d0222cd246","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-button.styl","hash":"f958da71d211f592ca64d0cf1328d801fffd3179","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/post/post.styl","hash":"fb0d3ae0f0c26393199de8f81fb3658d86fbbfaf","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1506717744000},{"_id":"themes/hexo-theme-next-5.1.3/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1506717744000}],"Category":[{"name":"Android","_id":"cj9fnigzy0004sv1f3c5aj6nt"},{"name":"猜猜这个分类","_id":"cj9fnih0m000bsv1fo9zjo2ke"},{"name":"抓包","_id":"cj9fnih0x000hsv1fc5sp7fzz"},{"name":"整理","_id":"cj9fnih1d000ssv1fy0evktm7"},{"name":"Hexo","_id":"cj9fnih1m0010sv1f49jmt3ty"},{"name":"Linux","_id":"cj9fnih1t0018sv1f7u0ghgq6"},{"name":"电脑","_id":"cj9fnih2j001qsv1fuz4wyl1j"},{"name":"CSharp","_id":"cj9fnih2t001xsv1fu6zxfnnj"},{"name":"JAVA","_id":"cj9fnih300026sv1fdowu8hdb"},{"name":"JAVA WEB","_id":"cj9fnih3g002dsv1f8hgauxh2"},{"name":"MarkDown","_id":"cj9fnih3o002jsv1feffdhglh"},{"name":"Excel","_id":"cj9fnih3r002psv1fm8j9i9tk"},{"name":"Wechat App","_id":"cj9fnih3t002tsv1fjnfpbb4s"}],"Data":[],"Page":[{"title":"关于我","date":"2016-04-22T08:40:36.000Z","_content":"\n### 我\n张庆宝，本人男，出生于上世纪九十年代，祖籍现籍山东。\n\n### 大事记\n* 2017年10月15日，山东微拼第二个大版本上线，同月累计用户达12K；\n* 2017年10月12日，[智讯教师端](http://zx-t.proj.kiuber.me)成功上线[小米应用市场](http://app.mi.com/details?id=me.kiuber.sdbi.zhixun.teacher)；\n* 2017年10月11日，[智讯学生端](http://zx-s.proj.kiuber.me)成功上线[小米应用市场](http://app.mi.com/details?id=me.kiuber.sdbi.zhixun.student)；\n* 2017年08月20日，[山东微拼](http://sdwp.proj.kiuber.me)开始开发第二个大版本，服务器端、数据库抛弃第三方服务商，全部架设到自己服务器；\n* 2017年08月15日，进入烟台海颐软件实习；\n* 2017年06月10日，用 RxJava 及优化代码重构[智讯学生端](http://zx-s.proj.kiuber.me)已开发完成的功能；\n* 2017年06月04日，[智讯教师端](http://zx-t.proj.kiuber.me) App 开始开发；\n* 2017年05月13日，[智讯学生端](http://zx-s.proj.kiuber.me) App 开始开发；\n* 2017年04月27日，烟台微拼小程序将不再维护，取而代之的是[山东微拼](http://sdwp.proj.kiuber.me)；\n* 2017年03月01日，微信小程序烟台微拼开始开发，同月24日上线第一个版本；\n* 2017年01月06日，腾讯云域名搞活动，低价入手 [kiuber.me](http://www.kiuber.me)；\n* 2016年12月15日，删除托管在 Coding 的博客内容；\n* 2016年12月03日，参加在济南浪潮举行的山东省第十四届齐鲁软件大赛颁奖典礼；\n* 2016年11月18日，参加山东省移动互联技术应用比赛，三等奖；\n* 2016年11月16日，参加山东省第十四届齐鲁软件大赛智能手机程序设计决赛，[一等奖](http://www.softqilu.com/new/attachments/file/2016-11/141550209.xlsx)；\n* 2016年10月15日，首次将博客架设在腾讯云服务器，可以通过 IP 访问；\n* 2016年10月05日，将博客托管在Coding，国内访问Coding、国外访问Github；\n* 2016年08月03日，暑假回到学校备赛齐鲁软件大赛，继续开发[爱点](http://commonweal.proj.kiuber.me) App ，9月19日将作品上交；\n* 2016年06月05日，[爱点](http://commonweal.proj.kiuber.me) App 开始开发；\n* 2016年04月，经过几天的折腾，终于将博客文件架设在 Github ，博客正式运作 :)；\n* 2016年04月18日，在阿里云购买~~`www.kiuber.top`~~这个域名，为搭建博客做准备。\n* 2016年04月03日，注册 [Github](http://github.com/Kiuber)；\n* 2016年03月23日，将第一个安卓 App ~~上架到小米应用市场~~；\n* 2015年高考，同年9月份进入山东商务职业学院学习，开启大学之路，专业：软件开发与项目管理。","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2016-04-22 16:40:36\n---\n\n### 我\n张庆宝，本人男，出生于上世纪九十年代，祖籍现籍山东。\n\n### 大事记\n* 2017年10月15日，山东微拼第二个大版本上线，同月累计用户达12K；\n* 2017年10月12日，[智讯教师端](http://zx-t.proj.kiuber.me)成功上线[小米应用市场](http://app.mi.com/details?id=me.kiuber.sdbi.zhixun.teacher)；\n* 2017年10月11日，[智讯学生端](http://zx-s.proj.kiuber.me)成功上线[小米应用市场](http://app.mi.com/details?id=me.kiuber.sdbi.zhixun.student)；\n* 2017年08月20日，[山东微拼](http://sdwp.proj.kiuber.me)开始开发第二个大版本，服务器端、数据库抛弃第三方服务商，全部架设到自己服务器；\n* 2017年08月15日，进入烟台海颐软件实习；\n* 2017年06月10日，用 RxJava 及优化代码重构[智讯学生端](http://zx-s.proj.kiuber.me)已开发完成的功能；\n* 2017年06月04日，[智讯教师端](http://zx-t.proj.kiuber.me) App 开始开发；\n* 2017年05月13日，[智讯学生端](http://zx-s.proj.kiuber.me) App 开始开发；\n* 2017年04月27日，烟台微拼小程序将不再维护，取而代之的是[山东微拼](http://sdwp.proj.kiuber.me)；\n* 2017年03月01日，微信小程序烟台微拼开始开发，同月24日上线第一个版本；\n* 2017年01月06日，腾讯云域名搞活动，低价入手 [kiuber.me](http://www.kiuber.me)；\n* 2016年12月15日，删除托管在 Coding 的博客内容；\n* 2016年12月03日，参加在济南浪潮举行的山东省第十四届齐鲁软件大赛颁奖典礼；\n* 2016年11月18日，参加山东省移动互联技术应用比赛，三等奖；\n* 2016年11月16日，参加山东省第十四届齐鲁软件大赛智能手机程序设计决赛，[一等奖](http://www.softqilu.com/new/attachments/file/2016-11/141550209.xlsx)；\n* 2016年10月15日，首次将博客架设在腾讯云服务器，可以通过 IP 访问；\n* 2016年10月05日，将博客托管在Coding，国内访问Coding、国外访问Github；\n* 2016年08月03日，暑假回到学校备赛齐鲁软件大赛，继续开发[爱点](http://commonweal.proj.kiuber.me) App ，9月19日将作品上交；\n* 2016年06月05日，[爱点](http://commonweal.proj.kiuber.me) App 开始开发；\n* 2016年04月，经过几天的折腾，终于将博客文件架设在 Github ，博客正式运作 :)；\n* 2016年04月18日，在阿里云购买~~`www.kiuber.top`~~这个域名，为搭建博客做准备。\n* 2016年04月03日，注册 [Github](http://github.com/Kiuber)；\n* 2016年03月23日，将第一个安卓 App ~~上架到小米应用市场~~；\n* 2015年高考，同年9月份进入山东商务职业学院学习，开启大学之路，专业：软件开发与项目管理。","updated":"2017-10-28T11:51:15.923Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj9fnigzj0001sv1flaif03k1","content":"<h3 id=\"我\"><a href=\"#我\" class=\"headerlink\" title=\"我\"></a>我</h3><p>张庆宝，本人男，出生于上世纪九十年代，祖籍现籍山东。</p>\n<h3 id=\"大事记\"><a href=\"#大事记\" class=\"headerlink\" title=\"大事记\"></a>大事记</h3><ul>\n<li>2017年10月15日，山东微拼第二个大版本上线，同月累计用户达12K；</li>\n<li>2017年10月12日，<a href=\"http://zx-t.proj.kiuber.me\" target=\"_blank\" rel=\"external\">智讯教师端</a>成功上线<a href=\"http://app.mi.com/details?id=me.kiuber.sdbi.zhixun.teacher\" target=\"_blank\" rel=\"external\">小米应用市场</a>；</li>\n<li>2017年10月11日，<a href=\"http://zx-s.proj.kiuber.me\" target=\"_blank\" rel=\"external\">智讯学生端</a>成功上线<a href=\"http://app.mi.com/details?id=me.kiuber.sdbi.zhixun.student\" target=\"_blank\" rel=\"external\">小米应用市场</a>；</li>\n<li>2017年08月20日，<a href=\"http://sdwp.proj.kiuber.me\" target=\"_blank\" rel=\"external\">山东微拼</a>开始开发第二个大版本，服务器端、数据库抛弃第三方服务商，全部架设到自己服务器；</li>\n<li>2017年08月15日，进入烟台海颐软件实习；</li>\n<li>2017年06月10日，用 RxJava 及优化代码重构<a href=\"http://zx-s.proj.kiuber.me\" target=\"_blank\" rel=\"external\">智讯学生端</a>已开发完成的功能；</li>\n<li>2017年06月04日，<a href=\"http://zx-t.proj.kiuber.me\" target=\"_blank\" rel=\"external\">智讯教师端</a> App 开始开发；</li>\n<li>2017年05月13日，<a href=\"http://zx-s.proj.kiuber.me\" target=\"_blank\" rel=\"external\">智讯学生端</a> App 开始开发；</li>\n<li>2017年04月27日，烟台微拼小程序将不再维护，取而代之的是<a href=\"http://sdwp.proj.kiuber.me\" target=\"_blank\" rel=\"external\">山东微拼</a>；</li>\n<li>2017年03月01日，微信小程序烟台微拼开始开发，同月24日上线第一个版本；</li>\n<li>2017年01月06日，腾讯云域名搞活动，低价入手 <a href=\"http://www.kiuber.me\" target=\"_blank\" rel=\"external\">kiuber.me</a>；</li>\n<li>2016年12月15日，删除托管在 Coding 的博客内容；</li>\n<li>2016年12月03日，参加在济南浪潮举行的山东省第十四届齐鲁软件大赛颁奖典礼；</li>\n<li>2016年11月18日，参加山东省移动互联技术应用比赛，三等奖；</li>\n<li>2016年11月16日，参加山东省第十四届齐鲁软件大赛智能手机程序设计决赛，<a href=\"http://www.softqilu.com/new/attachments/file/2016-11/141550209.xlsx\" target=\"_blank\" rel=\"external\">一等奖</a>；</li>\n<li>2016年10月15日，首次将博客架设在腾讯云服务器，可以通过 IP 访问；</li>\n<li>2016年10月05日，将博客托管在Coding，国内访问Coding、国外访问Github；</li>\n<li>2016年08月03日，暑假回到学校备赛齐鲁软件大赛，继续开发<a href=\"http://commonweal.proj.kiuber.me\" target=\"_blank\" rel=\"external\">爱点</a> App ，9月19日将作品上交；</li>\n<li>2016年06月05日，<a href=\"http://commonweal.proj.kiuber.me\" target=\"_blank\" rel=\"external\">爱点</a> App 开始开发；</li>\n<li>2016年04月，经过几天的折腾，终于将博客文件架设在 Github ，博客正式运作 :)；</li>\n<li>2016年04月18日，在阿里云购买<del><code>www.kiuber.top</code></del>这个域名，为搭建博客做准备。</li>\n<li>2016年04月03日，注册 <a href=\"http://github.com/Kiuber\" target=\"_blank\" rel=\"external\">Github</a>；</li>\n<li>2016年03月23日，将第一个安卓 App <del>上架到小米应用市场</del>；</li>\n<li>2015年高考，同年9月份进入山东商务职业学院学习，开启大学之路，专业：软件开发与项目管理。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"我\"><a href=\"#我\" class=\"headerlink\" title=\"我\"></a>我</h3><p>张庆宝，本人男，出生于上世纪九十年代，祖籍现籍山东。</p>\n<h3 id=\"大事记\"><a href=\"#大事记\" class=\"headerlink\" title=\"大事记\"></a>大事记</h3><ul>\n<li>2017年10月15日，山东微拼第二个大版本上线，同月累计用户达12K；</li>\n<li>2017年10月12日，<a href=\"http://zx-t.proj.kiuber.me\" target=\"_blank\" rel=\"external\">智讯教师端</a>成功上线<a href=\"http://app.mi.com/details?id=me.kiuber.sdbi.zhixun.teacher\" target=\"_blank\" rel=\"external\">小米应用市场</a>；</li>\n<li>2017年10月11日，<a href=\"http://zx-s.proj.kiuber.me\" target=\"_blank\" rel=\"external\">智讯学生端</a>成功上线<a href=\"http://app.mi.com/details?id=me.kiuber.sdbi.zhixun.student\" target=\"_blank\" rel=\"external\">小米应用市场</a>；</li>\n<li>2017年08月20日，<a href=\"http://sdwp.proj.kiuber.me\" target=\"_blank\" rel=\"external\">山东微拼</a>开始开发第二个大版本，服务器端、数据库抛弃第三方服务商，全部架设到自己服务器；</li>\n<li>2017年08月15日，进入烟台海颐软件实习；</li>\n<li>2017年06月10日，用 RxJava 及优化代码重构<a href=\"http://zx-s.proj.kiuber.me\" target=\"_blank\" rel=\"external\">智讯学生端</a>已开发完成的功能；</li>\n<li>2017年06月04日，<a href=\"http://zx-t.proj.kiuber.me\" target=\"_blank\" rel=\"external\">智讯教师端</a> App 开始开发；</li>\n<li>2017年05月13日，<a href=\"http://zx-s.proj.kiuber.me\" target=\"_blank\" rel=\"external\">智讯学生端</a> App 开始开发；</li>\n<li>2017年04月27日，烟台微拼小程序将不再维护，取而代之的是<a href=\"http://sdwp.proj.kiuber.me\" target=\"_blank\" rel=\"external\">山东微拼</a>；</li>\n<li>2017年03月01日，微信小程序烟台微拼开始开发，同月24日上线第一个版本；</li>\n<li>2017年01月06日，腾讯云域名搞活动，低价入手 <a href=\"http://www.kiuber.me\" target=\"_blank\" rel=\"external\">kiuber.me</a>；</li>\n<li>2016年12月15日，删除托管在 Coding 的博客内容；</li>\n<li>2016年12月03日，参加在济南浪潮举行的山东省第十四届齐鲁软件大赛颁奖典礼；</li>\n<li>2016年11月18日，参加山东省移动互联技术应用比赛，三等奖；</li>\n<li>2016年11月16日，参加山东省第十四届齐鲁软件大赛智能手机程序设计决赛，<a href=\"http://www.softqilu.com/new/attachments/file/2016-11/141550209.xlsx\" target=\"_blank\" rel=\"external\">一等奖</a>；</li>\n<li>2016年10月15日，首次将博客架设在腾讯云服务器，可以通过 IP 访问；</li>\n<li>2016年10月05日，将博客托管在Coding，国内访问Coding、国外访问Github；</li>\n<li>2016年08月03日，暑假回到学校备赛齐鲁软件大赛，继续开发<a href=\"http://commonweal.proj.kiuber.me\" target=\"_blank\" rel=\"external\">爱点</a> App ，9月19日将作品上交；</li>\n<li>2016年06月05日，<a href=\"http://commonweal.proj.kiuber.me\" target=\"_blank\" rel=\"external\">爱点</a> App 开始开发；</li>\n<li>2016年04月，经过几天的折腾，终于将博客文件架设在 Github ，博客正式运作 :)；</li>\n<li>2016年04月18日，在阿里云购买<del><code>www.kiuber.top</code></del>这个域名，为搭建博客做准备。</li>\n<li>2016年04月03日，注册 <a href=\"http://github.com/Kiuber\" target=\"_blank\" rel=\"external\">Github</a>；</li>\n<li>2016年03月23日，将第一个安卓 App <del>上架到小米应用市场</del>；</li>\n<li>2015年高考，同年9月份进入山东商务职业学院学习，开启大学之路，专业：软件开发与项目管理。</li>\n</ul>\n"},{"title":"categories","date":"2017-05-22T01:28:45.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-05-22 09:28:45\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-05-22T01:35:03.350Z","path":"categories/index.html","layout":"page","_id":"cj9fnigzs0003sv1flkg48ydo","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-04-10T14:29:26.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-04-10 22:29:26\ntype: \"tags\"\n---\n","updated":"2017-04-10T14:29:53.217Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj9fnih0b0007sv1fxmf5mc8w","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"工具","date":"2016-04-23T01:32:53.000Z","_content":"\n## 编程&学习\n### C/C++\n[Standard C 语言标准函数库速查 ](http://ganquan.info/standard-c/)\n[Linux C Functions](http://net.pku.edu.cn/~yhf/linux_c/)\n[cplusplus](http://www.cplusplus.com/reference/)\n\n### Structures and Algorithms\n[VisuAlgo - 数据结构和算法动态可视化 (Chinese)](http://visualgo.net/)\n[Data Structure Visualizations](http://www.cs.usfca.edu/~galles/visualization/Algorithms.html)\n\n### Web\n[tool.oschina](http://tool.oschina.net/)\n[Bootcss](http://www.bootcss.com/)\n[前端开发资源导航](http://www.css88.com/)\n\n### Linux\n[explainshell](http://explainshell.com/)\n\n## 搜索工具&杂\n[爱挖盘](http://www.iwapan.com/)\n[百度网盘搜索](http://so.baiduyun.me/)\n[搜索图标](http://findicons.com/)\n[种子搜索](http://torrentz.eu/)\n[多维搜索](http://s.f2do.com/)\n[Youtube downloader](http://www.clipconverter.cc/)\n[伪射手字幕](http://sub.makedie.me/)\n[谷粉搜搜-谷歌替代品](http://www.gfsoso.net/)\n[BD-FILM](http://www.bd-film.com/)\n\n## 办公工具\n[Free PDF to Word Online - Convert PDF to Word for Free](http://www.free-pdftoword.com/)\n[RGB颜色查询对照表](http://www.114la.com/other/rgb.htm)\n[Slides – Create and share presentations online](http://slides.com/)\n[免费在线文件转换器](http://www.convertfiles.com/)\n[Draw Anywhere-flow chart在线绘图](http://www.drawanywhere.com/)\n[Lovely Charts | Diagram software在线绘图](http://www.lovelycharts.com/)\n[CNKI翻译助手](http://dict.cnki.net/)\n\n## 图文并茂\n[千千秀字](http://www.qqxiuzi.cn/daohang.htm)\n[艺术字在线转换器_微微Logo](http://www.yszvv.com/)\n[ICO图标在线转换](http://www.img2ico.net/)\n[图床 - Qchan](http://tuchuang.org/)\n[绘画 - 油彩画](http://gallerix.asia/)\n[图片版表情制作器](http://www.doubean.com/face/ListWithImage.aspx)\n\n## 趣味站点\n[Silk–Interactive Generative Art](http://weavesilk.com/)\n[Haniboi—小人儿举牌](http://www.haniboi.com/)\n[产生随机姓名](http://zh-cn.fakenamegenerator.com/)\n\n## 其他博主的工具链接\n[我很好奇 个人常用一些PC软件（windows系统）](http://chitanda.me/2016/01/07/use-common-software-in-PC/)","source":"tools/index.md","raw":"---\ntitle: 工具\ndate: 2016-04-23 09:32:53\n---\n\n## 编程&学习\n### C/C++\n[Standard C 语言标准函数库速查 ](http://ganquan.info/standard-c/)\n[Linux C Functions](http://net.pku.edu.cn/~yhf/linux_c/)\n[cplusplus](http://www.cplusplus.com/reference/)\n\n### Structures and Algorithms\n[VisuAlgo - 数据结构和算法动态可视化 (Chinese)](http://visualgo.net/)\n[Data Structure Visualizations](http://www.cs.usfca.edu/~galles/visualization/Algorithms.html)\n\n### Web\n[tool.oschina](http://tool.oschina.net/)\n[Bootcss](http://www.bootcss.com/)\n[前端开发资源导航](http://www.css88.com/)\n\n### Linux\n[explainshell](http://explainshell.com/)\n\n## 搜索工具&杂\n[爱挖盘](http://www.iwapan.com/)\n[百度网盘搜索](http://so.baiduyun.me/)\n[搜索图标](http://findicons.com/)\n[种子搜索](http://torrentz.eu/)\n[多维搜索](http://s.f2do.com/)\n[Youtube downloader](http://www.clipconverter.cc/)\n[伪射手字幕](http://sub.makedie.me/)\n[谷粉搜搜-谷歌替代品](http://www.gfsoso.net/)\n[BD-FILM](http://www.bd-film.com/)\n\n## 办公工具\n[Free PDF to Word Online - Convert PDF to Word for Free](http://www.free-pdftoword.com/)\n[RGB颜色查询对照表](http://www.114la.com/other/rgb.htm)\n[Slides – Create and share presentations online](http://slides.com/)\n[免费在线文件转换器](http://www.convertfiles.com/)\n[Draw Anywhere-flow chart在线绘图](http://www.drawanywhere.com/)\n[Lovely Charts | Diagram software在线绘图](http://www.lovelycharts.com/)\n[CNKI翻译助手](http://dict.cnki.net/)\n\n## 图文并茂\n[千千秀字](http://www.qqxiuzi.cn/daohang.htm)\n[艺术字在线转换器_微微Logo](http://www.yszvv.com/)\n[ICO图标在线转换](http://www.img2ico.net/)\n[图床 - Qchan](http://tuchuang.org/)\n[绘画 - 油彩画](http://gallerix.asia/)\n[图片版表情制作器](http://www.doubean.com/face/ListWithImage.aspx)\n\n## 趣味站点\n[Silk–Interactive Generative Art](http://weavesilk.com/)\n[Haniboi—小人儿举牌](http://www.haniboi.com/)\n[产生随机姓名](http://zh-cn.fakenamegenerator.com/)\n\n## 其他博主的工具链接\n[我很好奇 个人常用一些PC软件（windows系统）](http://chitanda.me/2016/01/07/use-common-software-in-PC/)","updated":"2016-04-24T03:08:59.953Z","path":"tools/index.html","comments":1,"layout":"page","_id":"cj9fnih0j0009sv1f14hzdvyh","content":"<h2 id=\"编程-amp-学习\"><a href=\"#编程-amp-学习\" class=\"headerlink\" title=\"编程&amp;学习\"></a>编程&amp;学习</h2><h3 id=\"C-C\"><a href=\"#C-C\" class=\"headerlink\" title=\"C/C++\"></a>C/C++</h3><p><a href=\"http://ganquan.info/standard-c/\" target=\"_blank\" rel=\"external\">Standard C 语言标准函数库速查 </a><br><a href=\"http://net.pku.edu.cn/~yhf/linux_c/\" target=\"_blank\" rel=\"external\">Linux C Functions</a><br><a href=\"http://www.cplusplus.com/reference/\" target=\"_blank\" rel=\"external\">cplusplus</a></p>\n<h3 id=\"Structures-and-Algorithms\"><a href=\"#Structures-and-Algorithms\" class=\"headerlink\" title=\"Structures and Algorithms\"></a>Structures and Algorithms</h3><p><a href=\"http://visualgo.net/\" target=\"_blank\" rel=\"external\">VisuAlgo - 数据结构和算法动态可视化 (Chinese)</a><br><a href=\"http://www.cs.usfca.edu/~galles/visualization/Algorithms.html\" target=\"_blank\" rel=\"external\">Data Structure Visualizations</a></p>\n<h3 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h3><p><a href=\"http://tool.oschina.net/\" target=\"_blank\" rel=\"external\">tool.oschina</a><br><a href=\"http://www.bootcss.com/\" target=\"_blank\" rel=\"external\">Bootcss</a><br><a href=\"http://www.css88.com/\" target=\"_blank\" rel=\"external\">前端开发资源导航</a></p>\n<h3 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h3><p><a href=\"http://explainshell.com/\" target=\"_blank\" rel=\"external\">explainshell</a></p>\n<h2 id=\"搜索工具-amp-杂\"><a href=\"#搜索工具-amp-杂\" class=\"headerlink\" title=\"搜索工具&amp;杂\"></a>搜索工具&amp;杂</h2><p><a href=\"http://www.iwapan.com/\" target=\"_blank\" rel=\"external\">爱挖盘</a><br><a href=\"http://so.baiduyun.me/\" target=\"_blank\" rel=\"external\">百度网盘搜索</a><br><a href=\"http://findicons.com/\" target=\"_blank\" rel=\"external\">搜索图标</a><br><a href=\"http://torrentz.eu/\" target=\"_blank\" rel=\"external\">种子搜索</a><br><a href=\"http://s.f2do.com/\" target=\"_blank\" rel=\"external\">多维搜索</a><br><a href=\"http://www.clipconverter.cc/\" target=\"_blank\" rel=\"external\">Youtube downloader</a><br><a href=\"http://sub.makedie.me/\" target=\"_blank\" rel=\"external\">伪射手字幕</a><br><a href=\"http://www.gfsoso.net/\" target=\"_blank\" rel=\"external\">谷粉搜搜-谷歌替代品</a><br><a href=\"http://www.bd-film.com/\" target=\"_blank\" rel=\"external\">BD-FILM</a></p>\n<h2 id=\"办公工具\"><a href=\"#办公工具\" class=\"headerlink\" title=\"办公工具\"></a>办公工具</h2><p><a href=\"http://www.free-pdftoword.com/\" target=\"_blank\" rel=\"external\">Free PDF to Word Online - Convert PDF to Word for Free</a><br><a href=\"http://www.114la.com/other/rgb.htm\" target=\"_blank\" rel=\"external\">RGB颜色查询对照表</a><br><a href=\"http://slides.com/\" target=\"_blank\" rel=\"external\">Slides – Create and share presentations online</a><br><a href=\"http://www.convertfiles.com/\" target=\"_blank\" rel=\"external\">免费在线文件转换器</a><br><a href=\"http://www.drawanywhere.com/\" target=\"_blank\" rel=\"external\">Draw Anywhere-flow chart在线绘图</a><br><a href=\"http://www.lovelycharts.com/\" target=\"_blank\" rel=\"external\">Lovely Charts | Diagram software在线绘图</a><br><a href=\"http://dict.cnki.net/\" target=\"_blank\" rel=\"external\">CNKI翻译助手</a></p>\n<h2 id=\"图文并茂\"><a href=\"#图文并茂\" class=\"headerlink\" title=\"图文并茂\"></a>图文并茂</h2><p><a href=\"http://www.qqxiuzi.cn/daohang.htm\" target=\"_blank\" rel=\"external\">千千秀字</a><br><a href=\"http://www.yszvv.com/\" target=\"_blank\" rel=\"external\">艺术字在线转换器_微微Logo</a><br><a href=\"http://www.img2ico.net/\" target=\"_blank\" rel=\"external\">ICO图标在线转换</a><br><a href=\"http://tuchuang.org/\" target=\"_blank\" rel=\"external\">图床 - Qchan</a><br><a href=\"http://gallerix.asia/\" target=\"_blank\" rel=\"external\">绘画 - 油彩画</a><br><a href=\"http://www.doubean.com/face/ListWithImage.aspx\" target=\"_blank\" rel=\"external\">图片版表情制作器</a></p>\n<h2 id=\"趣味站点\"><a href=\"#趣味站点\" class=\"headerlink\" title=\"趣味站点\"></a>趣味站点</h2><p><a href=\"http://weavesilk.com/\" target=\"_blank\" rel=\"external\">Silk–Interactive Generative Art</a><br><a href=\"http://www.haniboi.com/\" target=\"_blank\" rel=\"external\">Haniboi—小人儿举牌</a><br><a href=\"http://zh-cn.fakenamegenerator.com/\" target=\"_blank\" rel=\"external\">产生随机姓名</a></p>\n<h2 id=\"其他博主的工具链接\"><a href=\"#其他博主的工具链接\" class=\"headerlink\" title=\"其他博主的工具链接\"></a>其他博主的工具链接</h2><p><a href=\"http://chitanda.me/2016/01/07/use-common-software-in-PC/\" target=\"_blank\" rel=\"external\">我很好奇 个人常用一些PC软件（windows系统）</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"编程-amp-学习\"><a href=\"#编程-amp-学习\" class=\"headerlink\" title=\"编程&amp;学习\"></a>编程&amp;学习</h2><h3 id=\"C-C\"><a href=\"#C-C\" class=\"headerlink\" title=\"C/C++\"></a>C/C++</h3><p><a href=\"http://ganquan.info/standard-c/\" target=\"_blank\" rel=\"external\">Standard C 语言标准函数库速查 </a><br><a href=\"http://net.pku.edu.cn/~yhf/linux_c/\" target=\"_blank\" rel=\"external\">Linux C Functions</a><br><a href=\"http://www.cplusplus.com/reference/\" target=\"_blank\" rel=\"external\">cplusplus</a></p>\n<h3 id=\"Structures-and-Algorithms\"><a href=\"#Structures-and-Algorithms\" class=\"headerlink\" title=\"Structures and Algorithms\"></a>Structures and Algorithms</h3><p><a href=\"http://visualgo.net/\" target=\"_blank\" rel=\"external\">VisuAlgo - 数据结构和算法动态可视化 (Chinese)</a><br><a href=\"http://www.cs.usfca.edu/~galles/visualization/Algorithms.html\" target=\"_blank\" rel=\"external\">Data Structure Visualizations</a></p>\n<h3 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h3><p><a href=\"http://tool.oschina.net/\" target=\"_blank\" rel=\"external\">tool.oschina</a><br><a href=\"http://www.bootcss.com/\" target=\"_blank\" rel=\"external\">Bootcss</a><br><a href=\"http://www.css88.com/\" target=\"_blank\" rel=\"external\">前端开发资源导航</a></p>\n<h3 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h3><p><a href=\"http://explainshell.com/\" target=\"_blank\" rel=\"external\">explainshell</a></p>\n<h2 id=\"搜索工具-amp-杂\"><a href=\"#搜索工具-amp-杂\" class=\"headerlink\" title=\"搜索工具&amp;杂\"></a>搜索工具&amp;杂</h2><p><a href=\"http://www.iwapan.com/\" target=\"_blank\" rel=\"external\">爱挖盘</a><br><a href=\"http://so.baiduyun.me/\" target=\"_blank\" rel=\"external\">百度网盘搜索</a><br><a href=\"http://findicons.com/\" target=\"_blank\" rel=\"external\">搜索图标</a><br><a href=\"http://torrentz.eu/\" target=\"_blank\" rel=\"external\">种子搜索</a><br><a href=\"http://s.f2do.com/\" target=\"_blank\" rel=\"external\">多维搜索</a><br><a href=\"http://www.clipconverter.cc/\" target=\"_blank\" rel=\"external\">Youtube downloader</a><br><a href=\"http://sub.makedie.me/\" target=\"_blank\" rel=\"external\">伪射手字幕</a><br><a href=\"http://www.gfsoso.net/\" target=\"_blank\" rel=\"external\">谷粉搜搜-谷歌替代品</a><br><a href=\"http://www.bd-film.com/\" target=\"_blank\" rel=\"external\">BD-FILM</a></p>\n<h2 id=\"办公工具\"><a href=\"#办公工具\" class=\"headerlink\" title=\"办公工具\"></a>办公工具</h2><p><a href=\"http://www.free-pdftoword.com/\" target=\"_blank\" rel=\"external\">Free PDF to Word Online - Convert PDF to Word for Free</a><br><a href=\"http://www.114la.com/other/rgb.htm\" target=\"_blank\" rel=\"external\">RGB颜色查询对照表</a><br><a href=\"http://slides.com/\" target=\"_blank\" rel=\"external\">Slides – Create and share presentations online</a><br><a href=\"http://www.convertfiles.com/\" target=\"_blank\" rel=\"external\">免费在线文件转换器</a><br><a href=\"http://www.drawanywhere.com/\" target=\"_blank\" rel=\"external\">Draw Anywhere-flow chart在线绘图</a><br><a href=\"http://www.lovelycharts.com/\" target=\"_blank\" rel=\"external\">Lovely Charts | Diagram software在线绘图</a><br><a href=\"http://dict.cnki.net/\" target=\"_blank\" rel=\"external\">CNKI翻译助手</a></p>\n<h2 id=\"图文并茂\"><a href=\"#图文并茂\" class=\"headerlink\" title=\"图文并茂\"></a>图文并茂</h2><p><a href=\"http://www.qqxiuzi.cn/daohang.htm\" target=\"_blank\" rel=\"external\">千千秀字</a><br><a href=\"http://www.yszvv.com/\" target=\"_blank\" rel=\"external\">艺术字在线转换器_微微Logo</a><br><a href=\"http://www.img2ico.net/\" target=\"_blank\" rel=\"external\">ICO图标在线转换</a><br><a href=\"http://tuchuang.org/\" target=\"_blank\" rel=\"external\">图床 - Qchan</a><br><a href=\"http://gallerix.asia/\" target=\"_blank\" rel=\"external\">绘画 - 油彩画</a><br><a href=\"http://www.doubean.com/face/ListWithImage.aspx\" target=\"_blank\" rel=\"external\">图片版表情制作器</a></p>\n<h2 id=\"趣味站点\"><a href=\"#趣味站点\" class=\"headerlink\" title=\"趣味站点\"></a>趣味站点</h2><p><a href=\"http://weavesilk.com/\" target=\"_blank\" rel=\"external\">Silk–Interactive Generative Art</a><br><a href=\"http://www.haniboi.com/\" target=\"_blank\" rel=\"external\">Haniboi—小人儿举牌</a><br><a href=\"http://zh-cn.fakenamegenerator.com/\" target=\"_blank\" rel=\"external\">产生随机姓名</a></p>\n<h2 id=\"其他博主的工具链接\"><a href=\"#其他博主的工具链接\" class=\"headerlink\" title=\"其他博主的工具链接\"></a>其他博主的工具链接</h2><p><a href=\"http://chitanda.me/2016/01/07/use-common-software-in-PC/\" target=\"_blank\" rel=\"external\">我很好奇 个人常用一些PC软件（windows系统）</a></p>\n"}],"Post":[{"title":"ShareMy","abbrlink":"2c806692","date":"2016-04-23T10:07:07.000Z","_content":"\n{% cq %}ShareMy 独自开发的第一个被应用商店审核通过的Application{% endcq %}\n\n<!--more-->\n## 功能及介绍\n\n### 功能\n分享自己文件，别人可以通过这个Application下载~\n### 介绍\n记得那是一个夜黑风高的晚上，我走在乡间的小路上，额，扯远了。做这个App是在大一上学期寒假快要结束的时候想到的，开学之后用课余时间开发的，当时是用的Eclipse，最近我也在学习用Android Studio，AS确实是比Eclipse好用，大概用了半个月时间，开发结束。无聊的时候，自己数了数大概2900行代码。然后我抱着试试的态度去小米应用商店上传审核，其实我的小米开发者平台在高中的时候已经审核通过了，之前也有传一些自己做的Application，但是都失败了，毕竟那些是用“我的应用iApp”做的。上传了之后，过了几天就忘了小米应用商店审核的事情，怪我，可能是因为我属鼠的~某一晚，我刚回到宿舍，小米应用商店给我发了一个邮件~就是审核通过了！瞬间爆炸，完成...。\n其实这个Application还有很多缺点，毕竟是我第一个独立完成的，最后的时候就有点累了，就没写完所有功能。而且代码命名方面存在一些缺点，而且把很多功能写到一个类里面了，这样后期维护也不好维护，等我抽个时间把代码修改修改，再写完其他功能，然后提交更新。\n\n### 截图\n![1](http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%285%29.jpg)![2](http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%284%29.jpg)![3](http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%281%29.jpg)\n![4](http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%282%29.jpg)![5](http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%283%29.jpg)\n\n### 应用下载链接\n\n[小米应用商店](http://app.mi.com/detail/289957)\n[Fir.im内测网站下载](http://fir.im/ShareMy)","source":"_posts/ShareMy.md","raw":"---\ntitle: ShareMy\ntags:\n  - ShareMy\ncategories: Android\nabbrlink: 2c806692\ndate: 2016-04-23 18:07:07\n---\n\n{% cq %}ShareMy 独自开发的第一个被应用商店审核通过的Application{% endcq %}\n\n<!--more-->\n## 功能及介绍\n\n### 功能\n分享自己文件，别人可以通过这个Application下载~\n### 介绍\n记得那是一个夜黑风高的晚上，我走在乡间的小路上，额，扯远了。做这个App是在大一上学期寒假快要结束的时候想到的，开学之后用课余时间开发的，当时是用的Eclipse，最近我也在学习用Android Studio，AS确实是比Eclipse好用，大概用了半个月时间，开发结束。无聊的时候，自己数了数大概2900行代码。然后我抱着试试的态度去小米应用商店上传审核，其实我的小米开发者平台在高中的时候已经审核通过了，之前也有传一些自己做的Application，但是都失败了，毕竟那些是用“我的应用iApp”做的。上传了之后，过了几天就忘了小米应用商店审核的事情，怪我，可能是因为我属鼠的~某一晚，我刚回到宿舍，小米应用商店给我发了一个邮件~就是审核通过了！瞬间爆炸，完成...。\n其实这个Application还有很多缺点，毕竟是我第一个独立完成的，最后的时候就有点累了，就没写完所有功能。而且代码命名方面存在一些缺点，而且把很多功能写到一个类里面了，这样后期维护也不好维护，等我抽个时间把代码修改修改，再写完其他功能，然后提交更新。\n\n### 截图\n![1](http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%285%29.jpg)![2](http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%284%29.jpg)![3](http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%281%29.jpg)\n![4](http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%282%29.jpg)![5](http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%283%29.jpg)\n\n### 应用下载链接\n\n[小米应用商店](http://app.mi.com/detail/289957)\n[Fir.im内测网站下载](http://fir.im/ShareMy)","slug":"ShareMy","published":1,"updated":"2017-06-08T12:20:29.261Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnigz60000sv1fhcauz1a7","content":"<blockquote class=\"blockquote-center\"><p>ShareMy 独自开发的第一个被应用商店审核通过的Application</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"功能及介绍\"><a href=\"#功能及介绍\" class=\"headerlink\" title=\"功能及介绍\"></a>功能及介绍</h2><h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><p>分享自己文件，别人可以通过这个Application下载~</p>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>记得那是一个夜黑风高的晚上，我走在乡间的小路上，额，扯远了。做这个App是在大一上学期寒假快要结束的时候想到的，开学之后用课余时间开发的，当时是用的Eclipse，最近我也在学习用Android Studio，AS确实是比Eclipse好用，大概用了半个月时间，开发结束。无聊的时候，自己数了数大概2900行代码。然后我抱着试试的态度去小米应用商店上传审核，其实我的小米开发者平台在高中的时候已经审核通过了，之前也有传一些自己做的Application，但是都失败了，毕竟那些是用“我的应用iApp”做的。上传了之后，过了几天就忘了小米应用商店审核的事情，怪我，可能是因为我属鼠的~某一晚，我刚回到宿舍，小米应用商店给我发了一个邮件~就是审核通过了！瞬间爆炸，完成…。<br>其实这个Application还有很多缺点，毕竟是我第一个独立完成的，最后的时候就有点累了，就没写完所有功能。而且代码命名方面存在一些缺点，而且把很多功能写到一个类里面了，这样后期维护也不好维护，等我抽个时间把代码修改修改，再写完其他功能，然后提交更新。</p>\n<h3 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h3><p><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%285%29.jpg\" alt=\"1\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%284%29.jpg\" alt=\"2\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%281%29.jpg\" alt=\"3\"><br><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%282%29.jpg\" alt=\"4\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%283%29.jpg\" alt=\"5\"></p>\n<h3 id=\"应用下载链接\"><a href=\"#应用下载链接\" class=\"headerlink\" title=\"应用下载链接\"></a>应用下载链接</h3><p><a href=\"http://app.mi.com/detail/289957\" target=\"_blank\" rel=\"external\">小米应用商店</a><br><a href=\"http://fir.im/ShareMy\" target=\"_blank\" rel=\"external\">Fir.im内测网站下载</a></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>ShareMy 独自开发的第一个被应用商店审核通过的Application</p>\n</blockquote>","more":"<h2 id=\"功能及介绍\"><a href=\"#功能及介绍\" class=\"headerlink\" title=\"功能及介绍\"></a>功能及介绍</h2><h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><p>分享自己文件，别人可以通过这个Application下载~</p>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>记得那是一个夜黑风高的晚上，我走在乡间的小路上，额，扯远了。做这个App是在大一上学期寒假快要结束的时候想到的，开学之后用课余时间开发的，当时是用的Eclipse，最近我也在学习用Android Studio，AS确实是比Eclipse好用，大概用了半个月时间，开发结束。无聊的时候，自己数了数大概2900行代码。然后我抱着试试的态度去小米应用商店上传审核，其实我的小米开发者平台在高中的时候已经审核通过了，之前也有传一些自己做的Application，但是都失败了，毕竟那些是用“我的应用iApp”做的。上传了之后，过了几天就忘了小米应用商店审核的事情，怪我，可能是因为我属鼠的~某一晚，我刚回到宿舍，小米应用商店给我发了一个邮件~就是审核通过了！瞬间爆炸，完成…。<br>其实这个Application还有很多缺点，毕竟是我第一个独立完成的，最后的时候就有点累了，就没写完所有功能。而且代码命名方面存在一些缺点，而且把很多功能写到一个类里面了，这样后期维护也不好维护，等我抽个时间把代码修改修改，再写完其他功能，然后提交更新。</p>\n<h3 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h3><p><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%285%29.jpg\" alt=\"1\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%284%29.jpg\" alt=\"2\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%281%29.jpg\" alt=\"3\"><br><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%282%29.jpg\" alt=\"4\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/sharemy/ShareMy%20%283%29.jpg\" alt=\"5\"></p>\n<h3 id=\"应用下载链接\"><a href=\"#应用下载链接\" class=\"headerlink\" title=\"应用下载链接\"></a>应用下载链接</h3><p><a href=\"http://app.mi.com/detail/289957\" target=\"_blank\" rel=\"external\">小米应用商店</a><br><a href=\"http://fir.im/ShareMy\" target=\"_blank\" rel=\"external\">Fir.im内测网站下载</a></p>"},{"title":"关于搭建自己博客的事情","abbrlink":"2f9ac683","date":"2016-04-22T08:57:53.000Z","_content":"\n{% cq %}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/shangri_la-003.jpg 600 200 %}{% endcq %}\n\n<!--more-->\n### 前言\n2016年4月18日在[万网](https://www.aliyun.com/)购买`http://www.kiuber.top/`域名，博客是用的[Yelee](https://github.com/MOxFIVE/hexo-theme-yelee)主题，个人比较喜欢的主题还有Next。\n\n\n高中的时候就want to搭建一个属于自己的博客，但是限于那时的终端类型时间知识等，完成不了。\n现在既有终端，又有时间，知识不敢说多厉害，基础的懂个差不多吧，革命尚未成功，同志仍需努力啊。个人不喜欢CSDN等博客，就拿CSDN博客来说吧，页面广告太多，用户体验差。\n\n\n### 目的\n\n记录学习，记录生活，记录感想。\n\n\n### 感谢\n\n[hexo-theme-yelee](https://github.com/MOxFIVE/hexo-theme-yelee)\n[GitHub](https://github.com/)\n[七牛云存储](http://www.qiniu.com/)\n[Hexo](https://hexo.io/)\n\n### 写在结束\n\n我觉得高中自己也努力了，但是程度还不够吧，没考上本科，高中没大有什么后悔的事情，不过有一点很后悔的事情就是没有把语文好好学学，所以我打算在大学三年中，编程之外的空尽量多看些文学作品，加油吧，坚持吧，少年。\n","source":"_posts/about-build-blog.md","raw":"---\ntitle: 关于搭建自己博客的事情\ntags:\n  - 博客\ncategories: 猜猜这个分类\nabbrlink: 2f9ac683\ndate: 2016-04-22 16:57:53\n---\n\n{% cq %}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/shangri_la-003.jpg 600 200 %}{% endcq %}\n\n<!--more-->\n### 前言\n2016年4月18日在[万网](https://www.aliyun.com/)购买`http://www.kiuber.top/`域名，博客是用的[Yelee](https://github.com/MOxFIVE/hexo-theme-yelee)主题，个人比较喜欢的主题还有Next。\n\n\n高中的时候就want to搭建一个属于自己的博客，但是限于那时的终端类型时间知识等，完成不了。\n现在既有终端，又有时间，知识不敢说多厉害，基础的懂个差不多吧，革命尚未成功，同志仍需努力啊。个人不喜欢CSDN等博客，就拿CSDN博客来说吧，页面广告太多，用户体验差。\n\n\n### 目的\n\n记录学习，记录生活，记录感想。\n\n\n### 感谢\n\n[hexo-theme-yelee](https://github.com/MOxFIVE/hexo-theme-yelee)\n[GitHub](https://github.com/)\n[七牛云存储](http://www.qiniu.com/)\n[Hexo](https://hexo.io/)\n\n### 写在结束\n\n我觉得高中自己也努力了，但是程度还不够吧，没考上本科，高中没大有什么后悔的事情，不过有一点很后悔的事情就是没有把语文好好学学，所以我打算在大学三年中，编程之外的空尽量多看些文学作品，加油吧，坚持吧，少年。\n","slug":"about-build-blog","published":1,"updated":"2017-06-08T12:20:29.276Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnigzn0002sv1fexx73vtc","content":"<blockquote class=\"blockquote-center\"><p><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/shangri_la-003.jpg\" width=\"600\" height=\"200\"></p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>2016年4月18日在<a href=\"https://www.aliyun.com/\" target=\"_blank\" rel=\"external\">万网</a>购买<code>http://www.kiuber.top/</code>域名，博客是用的<a href=\"https://github.com/MOxFIVE/hexo-theme-yelee\" target=\"_blank\" rel=\"external\">Yelee</a>主题，个人比较喜欢的主题还有Next。</p>\n<p>高中的时候就want to搭建一个属于自己的博客，但是限于那时的终端类型时间知识等，完成不了。<br>现在既有终端，又有时间，知识不敢说多厉害，基础的懂个差不多吧，革命尚未成功，同志仍需努力啊。个人不喜欢CSDN等博客，就拿CSDN博客来说吧，页面广告太多，用户体验差。</p>\n<h3 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h3><p>记录学习，记录生活，记录感想。</p>\n<h3 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h3><p><a href=\"https://github.com/MOxFIVE/hexo-theme-yelee\" target=\"_blank\" rel=\"external\">hexo-theme-yelee</a><br><a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">GitHub</a><br><a href=\"http://www.qiniu.com/\" target=\"_blank\" rel=\"external\">七牛云存储</a><br><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a></p>\n<h3 id=\"写在结束\"><a href=\"#写在结束\" class=\"headerlink\" title=\"写在结束\"></a>写在结束</h3><p>我觉得高中自己也努力了，但是程度还不够吧，没考上本科，高中没大有什么后悔的事情，不过有一点很后悔的事情就是没有把语文好好学学，所以我打算在大学三年中，编程之外的空尽量多看些文学作品，加油吧，坚持吧，少年。</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/shangri_la-003.jpg\" width=\"600\" height=\"200\"></p>\n</blockquote>","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>2016年4月18日在<a href=\"https://www.aliyun.com/\" target=\"_blank\" rel=\"external\">万网</a>购买<code>http://www.kiuber.top/</code>域名，博客是用的<a href=\"https://github.com/MOxFIVE/hexo-theme-yelee\" target=\"_blank\" rel=\"external\">Yelee</a>主题，个人比较喜欢的主题还有Next。</p>\n<p>高中的时候就want to搭建一个属于自己的博客，但是限于那时的终端类型时间知识等，完成不了。<br>现在既有终端，又有时间，知识不敢说多厉害，基础的懂个差不多吧，革命尚未成功，同志仍需努力啊。个人不喜欢CSDN等博客，就拿CSDN博客来说吧，页面广告太多，用户体验差。</p>\n<h3 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h3><p>记录学习，记录生活，记录感想。</p>\n<h3 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h3><p><a href=\"https://github.com/MOxFIVE/hexo-theme-yelee\" target=\"_blank\" rel=\"external\">hexo-theme-yelee</a><br><a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">GitHub</a><br><a href=\"http://www.qiniu.com/\" target=\"_blank\" rel=\"external\">七牛云存储</a><br><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a></p>\n<h3 id=\"写在结束\"><a href=\"#写在结束\" class=\"headerlink\" title=\"写在结束\"></a>写在结束</h3><p>我觉得高中自己也努力了，但是程度还不够吧，没考上本科，高中没大有什么后悔的事情，不过有一点很后悔的事情就是没有把语文好好学学，所以我打算在大学三年中，编程之外的空尽量多看些文学作品，加油吧，坚持吧，少年。</p>"},{"title":"扒拉扒拉爱壁纸的图片资源","abbrlink":"8586020f","date":"2016-12-18T01:27:10.000Z","_content":"\n{% cq %}是时候表演真正的技术了 =……={% endcq %}\n\n\n<!--more-->\n\n> 站点背景图是用的国外的unsplash，有的时候显示比较慢，所以想搞一个国内的。\n\n\n\n去网上搜了下高清壁纸的，基本都是国外的，对比了下觉得这个[](https://alpha.wallhaven.cc/)觉得还可以，主要是图片质量与访问速度还算可以接受，于是用php写了对应的正则，爬取图片直链，在服务器上试了试下载时间，不怎么稳定，有的时候下载时间大概在15s左右！我接受不了！贴下php代码（新手）。\n\n```php\n<?php\n\n$filename=\"https://alpha.wallhaven.cc/wallpaper/200000\";\n$subject=file_get_contents($filename);\n$pattern = '<img id=\"wallpaper\" src=\"(.*)\" alt=\".*\"/>';\n\nif (preg_match_all($pattern,$subject,$matches)) {\n\t$img_url = \"http:\".$matches[1][0];\n\techo $img_url;\n\t$data = file_get_contents($img_url);\n\tdate_default_timezone_set(\"UTC\");\n\t$time = date('Y-m-d H:i:s',time());\n\t$pic_num = strrpos($img_url, \"/\");\n\t$filename = \"wallhaven.cc\".$time.substr($img_url, $pic_num+1);\n\tfile_put_contents($filename, $data);\n}\n?>\n```\n\n\n\n最开始用爱壁纸的时候是高中，平时装系统也比较多，突然闲情雅致才会装个爱壁纸，不得不说爱壁纸里面图确实可以，图片质量与图片种类都还可以。\n\n\n\n高中的时候弄过电脑截包，记得还得安装这个安装那个的，比较麻烦，碰到这种情况，想实现一个功能在一个平台需要弄很多东西可以换个平台试试，我确实喜欢Linux安装软件姿势，大部分软件依赖都有，没有的自己加上依赖就可以（不过我还没试），像Centos直接`yum install xxx`就可以，很快速的打几个字母的事情，软件就安装好了。\n\n爱壁纸确实有Linux版的，不过高中的时候在手机上用过一个很好用的截包软件，想不起来叫什么名字了，网盘肯定也有，不过找的话肯定是有难度。然后去谷歌了下，很简单就找了[Packet Capture](http://www.coolapk.com/apk/app.greyshirts.sslcapture)下面也有汉化版的。\n\n\n\n下面开始干活，昨晚这个时候已经是晚上1点了，对象刚回到家不一会，截包的时候对象也在给我发消息，列表中的包刷刷的过 = . =，截取之后停止截包就不会刷新了。\n\n\n\n最终是要的高清图片直链，所以在停止截包之前我就下载了几张图片，一会分析的时候可以根据包的大小来确定下载是哪个包，当然也可以根据时间线确定。\n\n先来几张截包图（不经常上qq，传文件也比较麻烦，等买个树莓派搭建个常年开机的本地磁盘）\n\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-12-37-750_app.greyshirts.sslcapture.jpg 200 600%}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-13-34-538_app.greyshirts.sslcapture.jpg 200 600%}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-13-50-079_app.greyshirts.sslcapture.jpg 200 600 %}\n\n从第一张图上可以根据包的大小或者时间来确定刚才下载图片的操作。\n\n从二、三张图片上可以看到包的详情，将GET后的链接放到HOST上组起来就是新的网址，也可以看到响应头中的Content_Type确定哪种是我们需要的。刚才组起来的新网址就是我需要的，可以猜到第一长串数字是图片对应的编号，第二三长串就是图片的宽高。\n\n\n\n至此爱壁纸的图片直链就搞到手了。截取到的包分析分析也挺有意思的，也可以看到CDN是用的哪家的，看看大公司他们对CDN的选取，对应CDN的ip是多少等等。","source":"_posts/aibizhi-source.md","raw":"---\ntitle: 扒拉扒拉爱壁纸的图片资源\ntags:\n  - 爱壁纸\ncategories: 抓包\nabbrlink: 8586020f\ndate: 2016-12-18 09:27:10\n---\n\n{% cq %}是时候表演真正的技术了 =……={% endcq %}\n\n\n<!--more-->\n\n> 站点背景图是用的国外的unsplash，有的时候显示比较慢，所以想搞一个国内的。\n\n\n\n去网上搜了下高清壁纸的，基本都是国外的，对比了下觉得这个[](https://alpha.wallhaven.cc/)觉得还可以，主要是图片质量与访问速度还算可以接受，于是用php写了对应的正则，爬取图片直链，在服务器上试了试下载时间，不怎么稳定，有的时候下载时间大概在15s左右！我接受不了！贴下php代码（新手）。\n\n```php\n<?php\n\n$filename=\"https://alpha.wallhaven.cc/wallpaper/200000\";\n$subject=file_get_contents($filename);\n$pattern = '<img id=\"wallpaper\" src=\"(.*)\" alt=\".*\"/>';\n\nif (preg_match_all($pattern,$subject,$matches)) {\n\t$img_url = \"http:\".$matches[1][0];\n\techo $img_url;\n\t$data = file_get_contents($img_url);\n\tdate_default_timezone_set(\"UTC\");\n\t$time = date('Y-m-d H:i:s',time());\n\t$pic_num = strrpos($img_url, \"/\");\n\t$filename = \"wallhaven.cc\".$time.substr($img_url, $pic_num+1);\n\tfile_put_contents($filename, $data);\n}\n?>\n```\n\n\n\n最开始用爱壁纸的时候是高中，平时装系统也比较多，突然闲情雅致才会装个爱壁纸，不得不说爱壁纸里面图确实可以，图片质量与图片种类都还可以。\n\n\n\n高中的时候弄过电脑截包，记得还得安装这个安装那个的，比较麻烦，碰到这种情况，想实现一个功能在一个平台需要弄很多东西可以换个平台试试，我确实喜欢Linux安装软件姿势，大部分软件依赖都有，没有的自己加上依赖就可以（不过我还没试），像Centos直接`yum install xxx`就可以，很快速的打几个字母的事情，软件就安装好了。\n\n爱壁纸确实有Linux版的，不过高中的时候在手机上用过一个很好用的截包软件，想不起来叫什么名字了，网盘肯定也有，不过找的话肯定是有难度。然后去谷歌了下，很简单就找了[Packet Capture](http://www.coolapk.com/apk/app.greyshirts.sslcapture)下面也有汉化版的。\n\n\n\n下面开始干活，昨晚这个时候已经是晚上1点了，对象刚回到家不一会，截包的时候对象也在给我发消息，列表中的包刷刷的过 = . =，截取之后停止截包就不会刷新了。\n\n\n\n最终是要的高清图片直链，所以在停止截包之前我就下载了几张图片，一会分析的时候可以根据包的大小来确定下载是哪个包，当然也可以根据时间线确定。\n\n先来几张截包图（不经常上qq，传文件也比较麻烦，等买个树莓派搭建个常年开机的本地磁盘）\n\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-12-37-750_app.greyshirts.sslcapture.jpg 200 600%}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-13-34-538_app.greyshirts.sslcapture.jpg 200 600%}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-13-50-079_app.greyshirts.sslcapture.jpg 200 600 %}\n\n从第一张图上可以根据包的大小或者时间来确定刚才下载图片的操作。\n\n从二、三张图片上可以看到包的详情，将GET后的链接放到HOST上组起来就是新的网址，也可以看到响应头中的Content_Type确定哪种是我们需要的。刚才组起来的新网址就是我需要的，可以猜到第一长串数字是图片对应的编号，第二三长串就是图片的宽高。\n\n\n\n至此爱壁纸的图片直链就搞到手了。截取到的包分析分析也挺有意思的，也可以看到CDN是用的哪家的，看看大公司他们对CDN的选取，对应CDN的ip是多少等等。","slug":"aibizhi-source","published":1,"updated":"2017-06-08T12:20:29.277Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih090006sv1fj1ev74lc","content":"<blockquote class=\"blockquote-center\"><p>是时候表演真正的技术了 =……=</p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p>站点背景图是用的国外的unsplash，有的时候显示比较慢，所以想搞一个国内的。</p>\n</blockquote>\n<p>去网上搜了下高清壁纸的，基本都是国外的，对比了下觉得这个<a href=\"https://alpha.wallhaven.cc/\" target=\"_blank\" rel=\"external\"></a>觉得还可以，主要是图片质量与访问速度还算可以接受，于是用php写了对应的正则，爬取图片直链，在服务器上试了试下载时间，不怎么稳定，有的时候下载时间大概在15s左右！我接受不了！贴下php代码（新手）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"></div><div class=\"line\">$filename=<span class=\"string\">\"https://alpha.wallhaven.cc/wallpaper/200000\"</span>;</div><div class=\"line\">$subject=file_get_contents($filename);</div><div class=\"line\">$pattern = <span class=\"string\">'&lt;img id=\"wallpaper\" src=\"(.*)\" alt=\".*\"/&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (preg_match_all($pattern,$subject,$matches)) &#123;</div><div class=\"line\">\t$img_url = <span class=\"string\">\"http:\"</span>.$matches[<span class=\"number\">1</span>][<span class=\"number\">0</span>];</div><div class=\"line\">\t<span class=\"keyword\">echo</span> $img_url;</div><div class=\"line\">\t$data = file_get_contents($img_url);</div><div class=\"line\">\tdate_default_timezone_set(<span class=\"string\">\"UTC\"</span>);</div><div class=\"line\">\t$time = date(<span class=\"string\">'Y-m-d H:i:s'</span>,time());</div><div class=\"line\">\t$pic_num = strrpos($img_url, <span class=\"string\">\"/\"</span>);</div><div class=\"line\">\t$filename = <span class=\"string\">\"wallhaven.cc\"</span>.$time.substr($img_url, $pic_num+<span class=\"number\">1</span>);</div><div class=\"line\">\tfile_put_contents($filename, $data);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>最开始用爱壁纸的时候是高中，平时装系统也比较多，突然闲情雅致才会装个爱壁纸，不得不说爱壁纸里面图确实可以，图片质量与图片种类都还可以。</p>\n<p>高中的时候弄过电脑截包，记得还得安装这个安装那个的，比较麻烦，碰到这种情况，想实现一个功能在一个平台需要弄很多东西可以换个平台试试，我确实喜欢Linux安装软件姿势，大部分软件依赖都有，没有的自己加上依赖就可以（不过我还没试），像Centos直接<code>yum install xxx</code>就可以，很快速的打几个字母的事情，软件就安装好了。</p>\n<p>爱壁纸确实有Linux版的，不过高中的时候在手机上用过一个很好用的截包软件，想不起来叫什么名字了，网盘肯定也有，不过找的话肯定是有难度。然后去谷歌了下，很简单就找了<a href=\"http://www.coolapk.com/apk/app.greyshirts.sslcapture\" target=\"_blank\" rel=\"external\">Packet Capture</a>下面也有汉化版的。</p>\n<p>下面开始干活，昨晚这个时候已经是晚上1点了，对象刚回到家不一会，截包的时候对象也在给我发消息，列表中的包刷刷的过 = . =，截取之后停止截包就不会刷新了。</p>\n<p>最终是要的高清图片直链，所以在停止截包之前我就下载了几张图片，一会分析的时候可以根据包的大小来确定下载是哪个包，当然也可以根据时间线确定。</p>\n<p>先来几张截包图（不经常上qq，传文件也比较麻烦，等买个树莓派搭建个常年开机的本地磁盘）</p>\n<img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-12-37-750_app.greyshirts.sslcapture.jpg\" width=\"200\" height=\"600\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-13-34-538_app.greyshirts.sslcapture.jpg\" width=\"200\" height=\"600\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-13-50-079_app.greyshirts.sslcapture.jpg\" width=\"200\" height=\"600\">\n<p>从第一张图上可以根据包的大小或者时间来确定刚才下载图片的操作。</p>\n<p>从二、三张图片上可以看到包的详情，将GET后的链接放到HOST上组起来就是新的网址，也可以看到响应头中的Content_Type确定哪种是我们需要的。刚才组起来的新网址就是我需要的，可以猜到第一长串数字是图片对应的编号，第二三长串就是图片的宽高。</p>\n<p>至此爱壁纸的图片直链就搞到手了。截取到的包分析分析也挺有意思的，也可以看到CDN是用的哪家的，看看大公司他们对CDN的选取，对应CDN的ip是多少等等。</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>是时候表演真正的技术了 =……=</p>\n</blockquote>","more":"<blockquote>\n<p>站点背景图是用的国外的unsplash，有的时候显示比较慢，所以想搞一个国内的。</p>\n</blockquote>\n<p>去网上搜了下高清壁纸的，基本都是国外的，对比了下觉得这个<a href=\"https://alpha.wallhaven.cc/\" target=\"_blank\" rel=\"external\"></a>觉得还可以，主要是图片质量与访问速度还算可以接受，于是用php写了对应的正则，爬取图片直链，在服务器上试了试下载时间，不怎么稳定，有的时候下载时间大概在15s左右！我接受不了！贴下php代码（新手）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"></div><div class=\"line\">$filename=<span class=\"string\">\"https://alpha.wallhaven.cc/wallpaper/200000\"</span>;</div><div class=\"line\">$subject=file_get_contents($filename);</div><div class=\"line\">$pattern = <span class=\"string\">'&lt;img id=\"wallpaper\" src=\"(.*)\" alt=\".*\"/&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (preg_match_all($pattern,$subject,$matches)) &#123;</div><div class=\"line\">\t$img_url = <span class=\"string\">\"http:\"</span>.$matches[<span class=\"number\">1</span>][<span class=\"number\">0</span>];</div><div class=\"line\">\t<span class=\"keyword\">echo</span> $img_url;</div><div class=\"line\">\t$data = file_get_contents($img_url);</div><div class=\"line\">\tdate_default_timezone_set(<span class=\"string\">\"UTC\"</span>);</div><div class=\"line\">\t$time = date(<span class=\"string\">'Y-m-d H:i:s'</span>,time());</div><div class=\"line\">\t$pic_num = strrpos($img_url, <span class=\"string\">\"/\"</span>);</div><div class=\"line\">\t$filename = <span class=\"string\">\"wallhaven.cc\"</span>.$time.substr($img_url, $pic_num+<span class=\"number\">1</span>);</div><div class=\"line\">\tfile_put_contents($filename, $data);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>最开始用爱壁纸的时候是高中，平时装系统也比较多，突然闲情雅致才会装个爱壁纸，不得不说爱壁纸里面图确实可以，图片质量与图片种类都还可以。</p>\n<p>高中的时候弄过电脑截包，记得还得安装这个安装那个的，比较麻烦，碰到这种情况，想实现一个功能在一个平台需要弄很多东西可以换个平台试试，我确实喜欢Linux安装软件姿势，大部分软件依赖都有，没有的自己加上依赖就可以（不过我还没试），像Centos直接<code>yum install xxx</code>就可以，很快速的打几个字母的事情，软件就安装好了。</p>\n<p>爱壁纸确实有Linux版的，不过高中的时候在手机上用过一个很好用的截包软件，想不起来叫什么名字了，网盘肯定也有，不过找的话肯定是有难度。然后去谷歌了下，很简单就找了<a href=\"http://www.coolapk.com/apk/app.greyshirts.sslcapture\" target=\"_blank\" rel=\"external\">Packet Capture</a>下面也有汉化版的。</p>\n<p>下面开始干活，昨晚这个时候已经是晚上1点了，对象刚回到家不一会，截包的时候对象也在给我发消息，列表中的包刷刷的过 = . =，截取之后停止截包就不会刷新了。</p>\n<p>最终是要的高清图片直链，所以在停止截包之前我就下载了几张图片，一会分析的时候可以根据包的大小来确定下载是哪个包，当然也可以根据时间线确定。</p>\n<p>先来几张截包图（不经常上qq，传文件也比较麻烦，等买个树莓派搭建个常年开机的本地磁盘）</p>\n<img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-12-37-750_app.greyshirts.sslcapture.jpg\" width=\"200\" height=\"600\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-13-34-538_app.greyshirts.sslcapture.jpg\" width=\"200\" height=\"600\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-12-18-10-13-50-079_app.greyshirts.sslcapture.jpg\" width=\"200\" height=\"600\">\n<p>从第一张图上可以根据包的大小或者时间来确定刚才下载图片的操作。</p>\n<p>从二、三张图片上可以看到包的详情，将GET后的链接放到HOST上组起来就是新的网址，也可以看到响应头中的Content_Type确定哪种是我们需要的。刚才组起来的新网址就是我需要的，可以猜到第一长串数字是图片对应的编号，第二三长串就是图片的宽高。</p>\n<p>至此爱壁纸的图片直链就搞到手了。截取到的包分析分析也挺有意思的，也可以看到CDN是用的哪家的，看看大公司他们对CDN的选取，对应CDN的ip是多少等等。</p>"},{"title":"安卓7.0内容提供者变化","abbrlink":13409,"date":"2017-10-26T12:19:04.000Z","_content":"\n{% cq %}\nandroid.content.pm.ProviderInfo.loadXmlMetaData(android.content.pm.PackageManager, java.lang.String)' on a null object reference\n{% endcq %}\n\n<!-- more -->\n\n### 背景\n从 Android7.0 (N) 起，程序之间不允许通过 Intent 传文件(file://URI)，图片选取、裁剪类功能将受影响。\n\n7.0以前调用相机拍照\n``` java\nFile file = new File(Environment.getExternalStorageDirectory(), \"/temp/photos/\" + System.currentTimeMillis() + \".jpg\");\nif (!file.getParentFile().exists()) file.getParentFile().mkdirs();\nUri    imageUri = Uri.fromFile(file);\nIntent intent   = new Intent();\nintent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);\nintent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);\nstartActivityForResult(intent, 1127);\n```\n最近一个项目用到图片选择器，选择图片的时候显示相机，用的这个第三方库  [GalleryPick](https://github.com/YancyYe/GalleryPick/)  ，此库为了兼容7.0，需要配置 Provider ，如果没配置打开相机动作时就会报错，7.0以前及7.0错误如下\n- 7.0 以前\n![4.0](http://blog-1251260269.picsh.myqcloud.com/blog/android/error_n_file_uri_before_n.png)\n- 7.0\n![4.0](http://blog-1251260269.picsh.myqcloud.com/blog/android/error_n_file_uri_after_n.png)\n\n### 解决方法\n\n在清单文件配置内容提供者\n```xml\n <provider\n\tandroid:name=\"android.support.v4.content.FileProvider\"\n\tandroid:authorities=\"xxx.xxx.xxx.xxx\"\n\tandroid:exported=\"false\"\n\tandroid:grantUriPermissions=\"true\">\n\t<meta-data\n\t\tandroid:name=\"android.support.FILE_PROVIDER_PATHS\"\n\t\tandroid:resource=\"@xml/file_paths\" />\n</provider>\n```\n\nauthorities 值为在 GalleryConfig Builder 配置 provider 值。\n\n### 多个相同内容提供者\n\n关于存储方面的有很多功能，例如下载文件、访问图片、上传图片等，兼容安卓7.0的话就需要设置内容提供者，所以这个问题也是比较常见的。\n\n```gradle\nError:Execution failed for task ':app:processDebugManifest'.\n> Manifest merger failed with multiple errors, see logs\n```\n\n当集成多个相同内容提供者时，比如小米自动更新、 GalleryPick ， Android Studio 构建时会提示清单文件合并错误。\n\n小米自动更新 Provider authorities 是固定的，如下\n\nDownloadInstallManager.java\n\n```java\nUri installUri;\nif (Client.isLaterThanN()) {\n\tFile file = new File(apkFilePath);\n\tString authority = mContext.getPackageName() + \".selfupdate.fileprovider\";\n\tinstallUri = FileProvider.getUriForFile(mContext, authority, file);\n\tmContext.grantUriPermission(\"com.google.android.packageinstaller\",installUri,Intent.FLAG_GRANT_READ_URI_PERMISSION);\n} else {\n\tinstallUri = Uri.parse(\"file://\" + apkFilePath);\n}\n```\n\n当然可以搞出源码改为传参形式，但是不能每次升级小米自动更新 SDK 版本的时候都改一次吧，当然也可以继承 FileProvider ，在清单文件提供者 name 写继承的 类名。\n\n项目还集成了选择图片库，没办法先让它将就下也用小米自动更新的 authorities 吧，要不然就会造成上面清单文件冲突。\n\nresource 可以只配置图片选择库的 @xml/file_paths ，不过要与小米自动更新的文件名一样。\n\n当然也可以同时配置到一个文件里，如下\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <paths>\n        <!--XiaoMi Update Path-->\n        <paths>\n            <external-files-path\n                name=\"download\"\n                path=\"Download\"/>\n        </paths>\n        <!--GalleryPick Path-->\n        <external-path\n            name=\"external\"\n            path=\"\"/>\n        <files-path\n            name=\"files\"\n            path=\"\"/>\n        <cache-path\n            name=\"cache\"\n            path=\"\"/>\n    </paths>\n</resources>\n```\n\n\n\n\n","source":"_posts/android-n-file-provider.md","raw":"---\ntitle: 安卓7.0内容提供者变化\ntags:\n  - Provider\nabbrlink: 13409\ndate: 2017-10-26 20:19:04\ncategories: Android\n---\n\n{% cq %}\nandroid.content.pm.ProviderInfo.loadXmlMetaData(android.content.pm.PackageManager, java.lang.String)' on a null object reference\n{% endcq %}\n\n<!-- more -->\n\n### 背景\n从 Android7.0 (N) 起，程序之间不允许通过 Intent 传文件(file://URI)，图片选取、裁剪类功能将受影响。\n\n7.0以前调用相机拍照\n``` java\nFile file = new File(Environment.getExternalStorageDirectory(), \"/temp/photos/\" + System.currentTimeMillis() + \".jpg\");\nif (!file.getParentFile().exists()) file.getParentFile().mkdirs();\nUri    imageUri = Uri.fromFile(file);\nIntent intent   = new Intent();\nintent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);\nintent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);\nstartActivityForResult(intent, 1127);\n```\n最近一个项目用到图片选择器，选择图片的时候显示相机，用的这个第三方库  [GalleryPick](https://github.com/YancyYe/GalleryPick/)  ，此库为了兼容7.0，需要配置 Provider ，如果没配置打开相机动作时就会报错，7.0以前及7.0错误如下\n- 7.0 以前\n![4.0](http://blog-1251260269.picsh.myqcloud.com/blog/android/error_n_file_uri_before_n.png)\n- 7.0\n![4.0](http://blog-1251260269.picsh.myqcloud.com/blog/android/error_n_file_uri_after_n.png)\n\n### 解决方法\n\n在清单文件配置内容提供者\n```xml\n <provider\n\tandroid:name=\"android.support.v4.content.FileProvider\"\n\tandroid:authorities=\"xxx.xxx.xxx.xxx\"\n\tandroid:exported=\"false\"\n\tandroid:grantUriPermissions=\"true\">\n\t<meta-data\n\t\tandroid:name=\"android.support.FILE_PROVIDER_PATHS\"\n\t\tandroid:resource=\"@xml/file_paths\" />\n</provider>\n```\n\nauthorities 值为在 GalleryConfig Builder 配置 provider 值。\n\n### 多个相同内容提供者\n\n关于存储方面的有很多功能，例如下载文件、访问图片、上传图片等，兼容安卓7.0的话就需要设置内容提供者，所以这个问题也是比较常见的。\n\n```gradle\nError:Execution failed for task ':app:processDebugManifest'.\n> Manifest merger failed with multiple errors, see logs\n```\n\n当集成多个相同内容提供者时，比如小米自动更新、 GalleryPick ， Android Studio 构建时会提示清单文件合并错误。\n\n小米自动更新 Provider authorities 是固定的，如下\n\nDownloadInstallManager.java\n\n```java\nUri installUri;\nif (Client.isLaterThanN()) {\n\tFile file = new File(apkFilePath);\n\tString authority = mContext.getPackageName() + \".selfupdate.fileprovider\";\n\tinstallUri = FileProvider.getUriForFile(mContext, authority, file);\n\tmContext.grantUriPermission(\"com.google.android.packageinstaller\",installUri,Intent.FLAG_GRANT_READ_URI_PERMISSION);\n} else {\n\tinstallUri = Uri.parse(\"file://\" + apkFilePath);\n}\n```\n\n当然可以搞出源码改为传参形式，但是不能每次升级小米自动更新 SDK 版本的时候都改一次吧，当然也可以继承 FileProvider ，在清单文件提供者 name 写继承的 类名。\n\n项目还集成了选择图片库，没办法先让它将就下也用小米自动更新的 authorities 吧，要不然就会造成上面清单文件冲突。\n\nresource 可以只配置图片选择库的 @xml/file_paths ，不过要与小米自动更新的文件名一样。\n\n当然也可以同时配置到一个文件里，如下\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <paths>\n        <!--XiaoMi Update Path-->\n        <paths>\n            <external-files-path\n                name=\"download\"\n                path=\"Download\"/>\n        </paths>\n        <!--GalleryPick Path-->\n        <external-path\n            name=\"external\"\n            path=\"\"/>\n        <files-path\n            name=\"files\"\n            path=\"\"/>\n        <cache-path\n            name=\"cache\"\n            path=\"\"/>\n    </paths>\n</resources>\n```\n\n\n\n\n","slug":"android-n-file-provider","published":1,"updated":"2017-10-28T07:06:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih0d0008sv1fui8e3wer","content":"<blockquote class=\"blockquote-center\"><p>android.content.pm.ProviderInfo.loadXmlMetaData(android.content.pm.PackageManager, java.lang.String)’ on a null object reference</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>从 Android7.0 (N) 起，程序之间不允许通过 Intent 传文件(file://URI)，图片选取、裁剪类功能将受影响。</p>\n<p>7.0以前调用相机拍照<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">File file = <span class=\"keyword\">new</span> File(Environment.getExternalStorageDirectory(), <span class=\"string\">\"/temp/photos/\"</span> + System.currentTimeMillis() + <span class=\"string\">\".jpg\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!file.getParentFile().exists()) file.getParentFile().mkdirs();</div><div class=\"line\">Uri    imageUri = Uri.fromFile(file);</div><div class=\"line\">Intent intent   = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);</div><div class=\"line\">intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);</div><div class=\"line\">startActivityForResult(intent, <span class=\"number\">1127</span>);</div></pre></td></tr></table></figure></p>\n<p>最近一个项目用到图片选择器，选择图片的时候显示相机，用的这个第三方库  <a href=\"https://github.com/YancyYe/GalleryPick/\" target=\"_blank\" rel=\"external\">GalleryPick</a>  ，此库为了兼容7.0，需要配置 Provider ，如果没配置打开相机动作时就会报错，7.0以前及7.0错误如下</p>\n<ul>\n<li>7.0 以前<br><img src=\"http://blog-1251260269.picsh.myqcloud.com/blog/android/error_n_file_uri_before_n.png\" alt=\"4.0\"></li>\n<li>7.0<br><img src=\"http://blog-1251260269.picsh.myqcloud.com/blog/android/error_n_file_uri_after_n.png\" alt=\"4.0\"></li>\n</ul>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>在清单文件配置内容提供者<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">provider</span></span></div><div class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:name</span>=<span class=\"string\">\"android.support.v4.content.FileProvider\"</span></span></div><div class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:authorities</span>=<span class=\"string\">\"xxx.xxx.xxx.xxx\"</span></span></div><div class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:exported</span>=<span class=\"string\">\"false\"</span></span></div><div class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:grantUriPermissions</span>=<span class=\"string\">\"true\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">meta-data</span></span></div><div class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">android:name</span>=<span class=\"string\">\"android.support.FILE_PROVIDER_PATHS\"</span></span></div><div class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">android:resource</span>=<span class=\"string\">\"@xml/file_paths\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">provider</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>authorities 值为在 GalleryConfig Builder 配置 provider 值。</p>\n<h3 id=\"多个相同内容提供者\"><a href=\"#多个相同内容提供者\" class=\"headerlink\" title=\"多个相同内容提供者\"></a>多个相同内容提供者</h3><p>关于存储方面的有很多功能，例如下载文件、访问图片、上传图片等，兼容安卓7.0的话就需要设置内容提供者，所以这个问题也是比较常见的。</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Error:Execution failed <span class=\"keyword\">for</span> <span class=\"keyword\">task</span> <span class=\"string\">':app:processDebugManifest'</span>.</div><div class=\"line\">&gt; Manifest merger failed with multiple errors, see logs</div></pre></td></tr></table></figure>\n<p>当集成多个相同内容提供者时，比如小米自动更新、 GalleryPick ， Android Studio 构建时会提示清单文件合并错误。</p>\n<p>小米自动更新 Provider authorities 是固定的，如下</p>\n<p>DownloadInstallManager.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Uri installUri;</div><div class=\"line\"><span class=\"keyword\">if</span> (Client.isLaterThanN()) &#123;</div><div class=\"line\">\tFile file = <span class=\"keyword\">new</span> File(apkFilePath);</div><div class=\"line\">\tString authority = mContext.getPackageName() + <span class=\"string\">\".selfupdate.fileprovider\"</span>;</div><div class=\"line\">\tinstallUri = FileProvider.getUriForFile(mContext, authority, file);</div><div class=\"line\">\tmContext.grantUriPermission(<span class=\"string\">\"com.google.android.packageinstaller\"</span>,installUri,Intent.FLAG_GRANT_READ_URI_PERMISSION);</div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\tinstallUri = Uri.parse(<span class=\"string\">\"file://\"</span> + apkFilePath);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>当然可以搞出源码改为传参形式，但是不能每次升级小米自动更新 SDK 版本的时候都改一次吧，当然也可以继承 FileProvider ，在清单文件提供者 name 写继承的 类名。</p>\n<p>项目还集成了选择图片库，没办法先让它将就下也用小米自动更新的 authorities 吧，要不然就会造成上面清单文件冲突。</p>\n<p>resource 可以只配置图片选择库的 @xml/file_paths ，不过要与小米自动更新的文件名一样。</p>\n<p>当然也可以同时配置到一个文件里，如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">paths</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!--XiaoMi Update Path--&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">paths</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">external-files-path</span></span></div><div class=\"line\"><span class=\"tag\">                <span class=\"attr\">name</span>=<span class=\"string\">\"download\"</span></span></div><div class=\"line\"><span class=\"tag\">                <span class=\"attr\">path</span>=<span class=\"string\">\"Download\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">paths</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!--GalleryPick Path--&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">external-path</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">name</span>=<span class=\"string\">\"external\"</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">path</span>=<span class=\"string\">\"\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">files-path</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">name</span>=<span class=\"string\">\"files\"</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">path</span>=<span class=\"string\">\"\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">cache-path</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">name</span>=<span class=\"string\">\"cache\"</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">path</span>=<span class=\"string\">\"\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">paths</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>android.content.pm.ProviderInfo.loadXmlMetaData(android.content.pm.PackageManager, java.lang.String)’ on a null object reference</p>\n</blockquote>","more":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>从 Android7.0 (N) 起，程序之间不允许通过 Intent 传文件(file://URI)，图片选取、裁剪类功能将受影响。</p>\n<p>7.0以前调用相机拍照<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">File file = <span class=\"keyword\">new</span> File(Environment.getExternalStorageDirectory(), <span class=\"string\">\"/temp/photos/\"</span> + System.currentTimeMillis() + <span class=\"string\">\".jpg\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span> (!file.getParentFile().exists()) file.getParentFile().mkdirs();</div><div class=\"line\">Uri    imageUri = Uri.fromFile(file);</div><div class=\"line\">Intent intent   = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);</div><div class=\"line\">intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);</div><div class=\"line\">startActivityForResult(intent, <span class=\"number\">1127</span>);</div></pre></td></tr></table></figure></p>\n<p>最近一个项目用到图片选择器，选择图片的时候显示相机，用的这个第三方库  <a href=\"https://github.com/YancyYe/GalleryPick/\" target=\"_blank\" rel=\"external\">GalleryPick</a>  ，此库为了兼容7.0，需要配置 Provider ，如果没配置打开相机动作时就会报错，7.0以前及7.0错误如下</p>\n<ul>\n<li>7.0 以前<br><img src=\"http://blog-1251260269.picsh.myqcloud.com/blog/android/error_n_file_uri_before_n.png\" alt=\"4.0\"></li>\n<li>7.0<br><img src=\"http://blog-1251260269.picsh.myqcloud.com/blog/android/error_n_file_uri_after_n.png\" alt=\"4.0\"></li>\n</ul>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>在清单文件配置内容提供者<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">provider</span></span></div><div class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:name</span>=<span class=\"string\">\"android.support.v4.content.FileProvider\"</span></span></div><div class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:authorities</span>=<span class=\"string\">\"xxx.xxx.xxx.xxx\"</span></span></div><div class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:exported</span>=<span class=\"string\">\"false\"</span></span></div><div class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:grantUriPermissions</span>=<span class=\"string\">\"true\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">meta-data</span></span></div><div class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">android:name</span>=<span class=\"string\">\"android.support.FILE_PROVIDER_PATHS\"</span></span></div><div class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">android:resource</span>=<span class=\"string\">\"@xml/file_paths\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">provider</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>authorities 值为在 GalleryConfig Builder 配置 provider 值。</p>\n<h3 id=\"多个相同内容提供者\"><a href=\"#多个相同内容提供者\" class=\"headerlink\" title=\"多个相同内容提供者\"></a>多个相同内容提供者</h3><p>关于存储方面的有很多功能，例如下载文件、访问图片、上传图片等，兼容安卓7.0的话就需要设置内容提供者，所以这个问题也是比较常见的。</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Error:Execution failed <span class=\"keyword\">for</span> <span class=\"keyword\">task</span> <span class=\"string\">':app:processDebugManifest'</span>.</div><div class=\"line\">&gt; Manifest merger failed with multiple errors, see logs</div></pre></td></tr></table></figure>\n<p>当集成多个相同内容提供者时，比如小米自动更新、 GalleryPick ， Android Studio 构建时会提示清单文件合并错误。</p>\n<p>小米自动更新 Provider authorities 是固定的，如下</p>\n<p>DownloadInstallManager.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Uri installUri;</div><div class=\"line\"><span class=\"keyword\">if</span> (Client.isLaterThanN()) &#123;</div><div class=\"line\">\tFile file = <span class=\"keyword\">new</span> File(apkFilePath);</div><div class=\"line\">\tString authority = mContext.getPackageName() + <span class=\"string\">\".selfupdate.fileprovider\"</span>;</div><div class=\"line\">\tinstallUri = FileProvider.getUriForFile(mContext, authority, file);</div><div class=\"line\">\tmContext.grantUriPermission(<span class=\"string\">\"com.google.android.packageinstaller\"</span>,installUri,Intent.FLAG_GRANT_READ_URI_PERMISSION);</div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\tinstallUri = Uri.parse(<span class=\"string\">\"file://\"</span> + apkFilePath);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>当然可以搞出源码改为传参形式，但是不能每次升级小米自动更新 SDK 版本的时候都改一次吧，当然也可以继承 FileProvider ，在清单文件提供者 name 写继承的 类名。</p>\n<p>项目还集成了选择图片库，没办法先让它将就下也用小米自动更新的 authorities 吧，要不然就会造成上面清单文件冲突。</p>\n<p>resource 可以只配置图片选择库的 @xml/file_paths ，不过要与小米自动更新的文件名一样。</p>\n<p>当然也可以同时配置到一个文件里，如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">paths</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!--XiaoMi Update Path--&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">paths</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">external-files-path</span></span></div><div class=\"line\"><span class=\"tag\">                <span class=\"attr\">name</span>=<span class=\"string\">\"download\"</span></span></div><div class=\"line\"><span class=\"tag\">                <span class=\"attr\">path</span>=<span class=\"string\">\"Download\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">paths</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!--GalleryPick Path--&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">external-path</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">name</span>=<span class=\"string\">\"external\"</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">path</span>=<span class=\"string\">\"\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">files-path</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">name</span>=<span class=\"string\">\"files\"</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">path</span>=<span class=\"string\">\"\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">cache-path</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">name</span>=<span class=\"string\">\"cache\"</span></span></div><div class=\"line\"><span class=\"tag\">            <span class=\"attr\">path</span>=<span class=\"string\">\"\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">paths</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"安卓Socket编程","abbrlink":"269bd368","date":"2017-03-23T09:31:37.000Z","_content":"\n{% cq %}Socke基础{% endcq %}\n\n<!--more-->\n\n### Socket常识\n称为套接字，用于IP地址和端口。\n端口号取值范围0-256*256-1（0-1024位系统保留端口）我们通常使用1024-256*256-1端口号\nSocket分为两部分\n一是服务器部分，一直监听服务器某个端口。\n二是客户端部分，可以向服务器发送数据。\n\n### Socket分为通常分为TCP、UDP\nUDP协议\nUDP协议是一个不怎么靠谱的协议，把数据打成数据包，数据包包含通讯地址，数据包是否发送到指定服务器是不会被保证的，数据包发送的数据包比较小，速度相对于TCP快些。\n\nTCP协议\n客户端与服务器建立连接需要进行三次握手，建立连接之后服务器与客户端就能随意发送数据。\n\n客户端于服务器端要用同一种协议（UDP或TCP）。\n客户端向服务器发送数据为OutputStream\n客户端接受服务器发送的数据为InputStream\n\n#### 服务器端（ServerSocket）\n1.创建一个ServerSocket\n2.调用accept()用来接收客户端发送请求\n3.从接收到的socket对象得到客户端发送的数据\n\nAndroid Socket通信原理，注意地方：\n1、中间的管道连接是通过InputStream/OutputStream流实现的\n2、一旦管理建立起来可以进行通信\n3、关闭管道的同时意味着关闭Socket\n4、当对同一个Socket创建重复管道时会异常\n5、通信过程中顺序很重要：服务器端首先得到输入流，然后将输入流信息输出到其各个客户端；客户端先建立连接后先写入输出流，然后再获得输入流，不然会有EOFException的异常。\n\n### 基于TCP协议\n服务器端\n\n```\nServerSocket serverSocket = null;\n        try {\n            // 创建一个ServerSocket对象，并让这个socket监听4567端口\n            serverSocket = new ServerSocket(4567);\n            // 接受客户端所发送的请求（阻塞式） 返回值为从客户端发送得到的\n            Socket socket = serverSocket.accept();          \n            \n            // 读取客户端发送的InputStream\n            InputStream inputStream = socket.getInputStream();\n            byte[] buffer = new byte[1024];\n            int tmp = 0;\n            // 从ImputStream读取客户端发送的数据\n            while ((tmp = inputStream.read(buffer)) != -1) {\n                System.out.println(\"Client-->\" + new String(buffer, 0, tmp));\n                \n                InetAddress address = socket.getInetAddress();\n                String ip = address.getHostAddress();\n                OutputStream outputStream = socket.getOutputStream();\n                System.out.println(ip);\n                outputStream.write(ip.getBytes());\n                outputStream.flush();   \n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                serverSocket.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n```\n\n客户端与服务器建立连接\n\n```\n        try {\n                // 创建一个Socket对象 指定服务器ip地址和端口号\n                socket = new Socket(String.valueOf(params[0]), (Integer) params[1]);\n                // 从socket得到OutputStream\n                OutputStream outputStream = socket.getOutputStream();\n                outputStream.write(\"= = = = = = = = 建立连接= = = = = = = =\".getBytes());\n                outputStream.flush();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n            客户端发送数据到服务器\n            if (socket != null && !socket.isClosed() && socket.isConnected()) {\n                    new Thread() {\n                        @Override\n                        public void run() {\n                            try {\n                                OutputStream outputStream = socket.getOutputStream();\n                                String time = SocketActivity.this.format.format(new Date());\n                                String out = \"= = = = = = = = \" + time + \"= = = = = = = =\";\n                                outputStream.write(out.getBytes());\n                                outputStream.flush();\n\n                                InputStream inputStream = socket.getInputStream();\n                                byte[] bb = new byte[1024];\n                                int len = 0;\n                                while ((len = inputStream.read(bb)) != -1) {\n//                                    System.out.println(\"服务器返回的数据-->\" + new String(bb, 0, len));\n                                    Log.d(TAG, \"run: \" + \"服务器返回的数据-->\" + new String(bb, 0, len));\n                                }\n                            } catch (IOException e) {\n                                e.printStackTrace();\n                            }\n                        }\n                    }.start();\n                }\n\n```\n\n### 基于UDP服务器端\n\n```\n try {\n         // 创建一个DatagramSocket对象，并指定监听端口号\n         DatagramSocket socket = new DatagramSocket(4567);\n         byte[] data = new byte[1024];\n         // 创建一个空的DatagramPacket对象 用来接收客户端发送的数据包\n         DatagramPacket packet = new DatagramPacket(data, data.length);\n         // 使用receive方法接收客户端所发送的数据 同样是堵塞的方法 不会向下运行\n         socket.receive(packet);\n         System.out.println(new String(packet.getData()));\n         } catch (SocketException e) {\n         e.printStackTrace();\n         } catch (IOException e) {\n         e.printStackTrace();\n         }\n\n\n```\n\n\n客户端\n\n```\n           Date date = new Date();\n            String time = SocketActivity.this.format.format(date);\n            DatagramSocket socket = null;\n            try {\n                if (socket != null) {\n                    socket.close();\n                }\n                // 创建一个DatagramSocket对象\n                socket = new DatagramSocket(4567);\n                //创建一个InetAddree\n                InetAddress address = InetAddress.getByName((String) params[0]);\n                // 创建一个DatagramPacket对象，并指定服务器地址及端口号\n                DatagramPacket packet = new DatagramPacket(time.getBytes(), time.getBytes().length, address, 4567);\n                // 调用socket对象的send方法 发送数据到服务器\n                socket.send(packet);\n```","source":"_posts/android-socket.md","raw":"---\ntitle: 安卓Socket编程\ntags:\n  - Socket\ncategories: Android\nabbrlink: 269bd368\ndate: 2017-03-23 17:31:37\n---\n\n{% cq %}Socke基础{% endcq %}\n\n<!--more-->\n\n### Socket常识\n称为套接字，用于IP地址和端口。\n端口号取值范围0-256*256-1（0-1024位系统保留端口）我们通常使用1024-256*256-1端口号\nSocket分为两部分\n一是服务器部分，一直监听服务器某个端口。\n二是客户端部分，可以向服务器发送数据。\n\n### Socket分为通常分为TCP、UDP\nUDP协议\nUDP协议是一个不怎么靠谱的协议，把数据打成数据包，数据包包含通讯地址，数据包是否发送到指定服务器是不会被保证的，数据包发送的数据包比较小，速度相对于TCP快些。\n\nTCP协议\n客户端与服务器建立连接需要进行三次握手，建立连接之后服务器与客户端就能随意发送数据。\n\n客户端于服务器端要用同一种协议（UDP或TCP）。\n客户端向服务器发送数据为OutputStream\n客户端接受服务器发送的数据为InputStream\n\n#### 服务器端（ServerSocket）\n1.创建一个ServerSocket\n2.调用accept()用来接收客户端发送请求\n3.从接收到的socket对象得到客户端发送的数据\n\nAndroid Socket通信原理，注意地方：\n1、中间的管道连接是通过InputStream/OutputStream流实现的\n2、一旦管理建立起来可以进行通信\n3、关闭管道的同时意味着关闭Socket\n4、当对同一个Socket创建重复管道时会异常\n5、通信过程中顺序很重要：服务器端首先得到输入流，然后将输入流信息输出到其各个客户端；客户端先建立连接后先写入输出流，然后再获得输入流，不然会有EOFException的异常。\n\n### 基于TCP协议\n服务器端\n\n```\nServerSocket serverSocket = null;\n        try {\n            // 创建一个ServerSocket对象，并让这个socket监听4567端口\n            serverSocket = new ServerSocket(4567);\n            // 接受客户端所发送的请求（阻塞式） 返回值为从客户端发送得到的\n            Socket socket = serverSocket.accept();          \n            \n            // 读取客户端发送的InputStream\n            InputStream inputStream = socket.getInputStream();\n            byte[] buffer = new byte[1024];\n            int tmp = 0;\n            // 从ImputStream读取客户端发送的数据\n            while ((tmp = inputStream.read(buffer)) != -1) {\n                System.out.println(\"Client-->\" + new String(buffer, 0, tmp));\n                \n                InetAddress address = socket.getInetAddress();\n                String ip = address.getHostAddress();\n                OutputStream outputStream = socket.getOutputStream();\n                System.out.println(ip);\n                outputStream.write(ip.getBytes());\n                outputStream.flush();   \n            }\n            \n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                serverSocket.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n```\n\n客户端与服务器建立连接\n\n```\n        try {\n                // 创建一个Socket对象 指定服务器ip地址和端口号\n                socket = new Socket(String.valueOf(params[0]), (Integer) params[1]);\n                // 从socket得到OutputStream\n                OutputStream outputStream = socket.getOutputStream();\n                outputStream.write(\"= = = = = = = = 建立连接= = = = = = = =\".getBytes());\n                outputStream.flush();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n            客户端发送数据到服务器\n            if (socket != null && !socket.isClosed() && socket.isConnected()) {\n                    new Thread() {\n                        @Override\n                        public void run() {\n                            try {\n                                OutputStream outputStream = socket.getOutputStream();\n                                String time = SocketActivity.this.format.format(new Date());\n                                String out = \"= = = = = = = = \" + time + \"= = = = = = = =\";\n                                outputStream.write(out.getBytes());\n                                outputStream.flush();\n\n                                InputStream inputStream = socket.getInputStream();\n                                byte[] bb = new byte[1024];\n                                int len = 0;\n                                while ((len = inputStream.read(bb)) != -1) {\n//                                    System.out.println(\"服务器返回的数据-->\" + new String(bb, 0, len));\n                                    Log.d(TAG, \"run: \" + \"服务器返回的数据-->\" + new String(bb, 0, len));\n                                }\n                            } catch (IOException e) {\n                                e.printStackTrace();\n                            }\n                        }\n                    }.start();\n                }\n\n```\n\n### 基于UDP服务器端\n\n```\n try {\n         // 创建一个DatagramSocket对象，并指定监听端口号\n         DatagramSocket socket = new DatagramSocket(4567);\n         byte[] data = new byte[1024];\n         // 创建一个空的DatagramPacket对象 用来接收客户端发送的数据包\n         DatagramPacket packet = new DatagramPacket(data, data.length);\n         // 使用receive方法接收客户端所发送的数据 同样是堵塞的方法 不会向下运行\n         socket.receive(packet);\n         System.out.println(new String(packet.getData()));\n         } catch (SocketException e) {\n         e.printStackTrace();\n         } catch (IOException e) {\n         e.printStackTrace();\n         }\n\n\n```\n\n\n客户端\n\n```\n           Date date = new Date();\n            String time = SocketActivity.this.format.format(date);\n            DatagramSocket socket = null;\n            try {\n                if (socket != null) {\n                    socket.close();\n                }\n                // 创建一个DatagramSocket对象\n                socket = new DatagramSocket(4567);\n                //创建一个InetAddree\n                InetAddress address = InetAddress.getByName((String) params[0]);\n                // 创建一个DatagramPacket对象，并指定服务器地址及端口号\n                DatagramPacket packet = new DatagramPacket(time.getBytes(), time.getBytes().length, address, 4567);\n                // 调用socket对象的send方法 发送数据到服务器\n                socket.send(packet);\n```","slug":"android-socket","published":1,"updated":"2017-06-08T12:20:29.278Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih0k000asv1fno6q2uoc","content":"<blockquote class=\"blockquote-center\"><p>Socke基础</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"Socket常识\"><a href=\"#Socket常识\" class=\"headerlink\" title=\"Socket常识\"></a>Socket常识</h3><p>称为套接字，用于IP地址和端口。<br>端口号取值范围0-256<em>256-1（0-1024位系统保留端口）我们通常使用1024-256</em>256-1端口号<br>Socket分为两部分<br>一是服务器部分，一直监听服务器某个端口。<br>二是客户端部分，可以向服务器发送数据。</p>\n<h3 id=\"Socket分为通常分为TCP、UDP\"><a href=\"#Socket分为通常分为TCP、UDP\" class=\"headerlink\" title=\"Socket分为通常分为TCP、UDP\"></a>Socket分为通常分为TCP、UDP</h3><p>UDP协议<br>UDP协议是一个不怎么靠谱的协议，把数据打成数据包，数据包包含通讯地址，数据包是否发送到指定服务器是不会被保证的，数据包发送的数据包比较小，速度相对于TCP快些。</p>\n<p>TCP协议<br>客户端与服务器建立连接需要进行三次握手，建立连接之后服务器与客户端就能随意发送数据。</p>\n<p>客户端于服务器端要用同一种协议（UDP或TCP）。<br>客户端向服务器发送数据为OutputStream<br>客户端接受服务器发送的数据为InputStream</p>\n<h4 id=\"服务器端（ServerSocket）\"><a href=\"#服务器端（ServerSocket）\" class=\"headerlink\" title=\"服务器端（ServerSocket）\"></a>服务器端（ServerSocket）</h4><p>1.创建一个ServerSocket<br>2.调用accept()用来接收客户端发送请求<br>3.从接收到的socket对象得到客户端发送的数据</p>\n<p>Android Socket通信原理，注意地方：<br>1、中间的管道连接是通过InputStream/OutputStream流实现的<br>2、一旦管理建立起来可以进行通信<br>3、关闭管道的同时意味着关闭Socket<br>4、当对同一个Socket创建重复管道时会异常<br>5、通信过程中顺序很重要：服务器端首先得到输入流，然后将输入流信息输出到其各个客户端；客户端先建立连接后先写入输出流，然后再获得输入流，不然会有EOFException的异常。</p>\n<h3 id=\"基于TCP协议\"><a href=\"#基于TCP协议\" class=\"headerlink\" title=\"基于TCP协议\"></a>基于TCP协议</h3><p>服务器端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">ServerSocket serverSocket = null;</div><div class=\"line\">        try &#123;</div><div class=\"line\">            // 创建一个ServerSocket对象，并让这个socket监听4567端口</div><div class=\"line\">            serverSocket = new ServerSocket(4567);</div><div class=\"line\">            // 接受客户端所发送的请求（阻塞式） 返回值为从客户端发送得到的</div><div class=\"line\">            Socket socket = serverSocket.accept();          </div><div class=\"line\">            </div><div class=\"line\">            // 读取客户端发送的InputStream</div><div class=\"line\">            InputStream inputStream = socket.getInputStream();</div><div class=\"line\">            byte[] buffer = new byte[1024];</div><div class=\"line\">            int tmp = 0;</div><div class=\"line\">            // 从ImputStream读取客户端发送的数据</div><div class=\"line\">            while ((tmp = inputStream.read(buffer)) != -1) &#123;</div><div class=\"line\">                System.out.println(&quot;Client--&gt;&quot; + new String(buffer, 0, tmp));</div><div class=\"line\">                </div><div class=\"line\">                InetAddress address = socket.getInetAddress();</div><div class=\"line\">                String ip = address.getHostAddress();</div><div class=\"line\">                OutputStream outputStream = socket.getOutputStream();</div><div class=\"line\">                System.out.println(ip);</div><div class=\"line\">                outputStream.write(ip.getBytes());</div><div class=\"line\">                outputStream.flush();   </div><div class=\"line\">            &#125;</div><div class=\"line\">            </div><div class=\"line\">        &#125; catch (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; finally &#123;</div><div class=\"line\">            try &#123;</div><div class=\"line\">                serverSocket.close();</div><div class=\"line\">            &#125; catch (IOException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<p>客户端与服务器建立连接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">        try &#123;</div><div class=\"line\">                // 创建一个Socket对象 指定服务器ip地址和端口号</div><div class=\"line\">                socket = new Socket(String.valueOf(params[0]), (Integer) params[1]);</div><div class=\"line\">                // 从socket得到OutputStream</div><div class=\"line\">                OutputStream outputStream = socket.getOutputStream();</div><div class=\"line\">                outputStream.write(&quot;= = = = = = = = 建立连接= = = = = = = =&quot;.getBytes());</div><div class=\"line\">                outputStream.flush();</div><div class=\"line\">            &#125; catch (IOException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            客户端发送数据到服务器</div><div class=\"line\">            if (socket != null &amp;&amp; !socket.isClosed() &amp;&amp; socket.isConnected()) &#123;</div><div class=\"line\">                    new Thread() &#123;</div><div class=\"line\">                        @Override</div><div class=\"line\">                        public void run() &#123;</div><div class=\"line\">                            try &#123;</div><div class=\"line\">                                OutputStream outputStream = socket.getOutputStream();</div><div class=\"line\">                                String time = SocketActivity.this.format.format(new Date());</div><div class=\"line\">                                String out = &quot;= = = = = = = = &quot; + time + &quot;= = = = = = = =&quot;;</div><div class=\"line\">                                outputStream.write(out.getBytes());</div><div class=\"line\">                                outputStream.flush();</div><div class=\"line\"></div><div class=\"line\">                                InputStream inputStream = socket.getInputStream();</div><div class=\"line\">                                byte[] bb = new byte[1024];</div><div class=\"line\">                                int len = 0;</div><div class=\"line\">                                while ((len = inputStream.read(bb)) != -1) &#123;</div><div class=\"line\">//                                    System.out.println(&quot;服务器返回的数据--&gt;&quot; + new String(bb, 0, len));</div><div class=\"line\">                                    Log.d(TAG, &quot;run: &quot; + &quot;服务器返回的数据--&gt;&quot; + new String(bb, 0, len));</div><div class=\"line\">                                &#125;</div><div class=\"line\">                            &#125; catch (IOException e) &#123;</div><div class=\"line\">                                e.printStackTrace();</div><div class=\"line\">                            &#125;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;.start();</div><div class=\"line\">                &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"基于UDP服务器端\"><a href=\"#基于UDP服务器端\" class=\"headerlink\" title=\"基于UDP服务器端\"></a>基于UDP服务器端</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">try &#123;</div><div class=\"line\">        // 创建一个DatagramSocket对象，并指定监听端口号</div><div class=\"line\">        DatagramSocket socket = new DatagramSocket(4567);</div><div class=\"line\">        byte[] data = new byte[1024];</div><div class=\"line\">        // 创建一个空的DatagramPacket对象 用来接收客户端发送的数据包</div><div class=\"line\">        DatagramPacket packet = new DatagramPacket(data, data.length);</div><div class=\"line\">        // 使用receive方法接收客户端所发送的数据 同样是堵塞的方法 不会向下运行</div><div class=\"line\">        socket.receive(packet);</div><div class=\"line\">        System.out.println(new String(packet.getData()));</div><div class=\"line\">        &#125; catch (SocketException e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">        &#125; catch (IOException e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<p>客户端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">Date date = new Date();</div><div class=\"line\"> String time = SocketActivity.this.format.format(date);</div><div class=\"line\"> DatagramSocket socket = null;</div><div class=\"line\"> try &#123;</div><div class=\"line\">     if (socket != null) &#123;</div><div class=\"line\">         socket.close();</div><div class=\"line\">     &#125;</div><div class=\"line\">     // 创建一个DatagramSocket对象</div><div class=\"line\">     socket = new DatagramSocket(4567);</div><div class=\"line\">     //创建一个InetAddree</div><div class=\"line\">     InetAddress address = InetAddress.getByName((String) params[0]);</div><div class=\"line\">     // 创建一个DatagramPacket对象，并指定服务器地址及端口号</div><div class=\"line\">     DatagramPacket packet = new DatagramPacket(time.getBytes(), time.getBytes().length, address, 4567);</div><div class=\"line\">     // 调用socket对象的send方法 发送数据到服务器</div><div class=\"line\">     socket.send(packet);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>Socke基础</p>\n</blockquote>","more":"<h3 id=\"Socket常识\"><a href=\"#Socket常识\" class=\"headerlink\" title=\"Socket常识\"></a>Socket常识</h3><p>称为套接字，用于IP地址和端口。<br>端口号取值范围0-256<em>256-1（0-1024位系统保留端口）我们通常使用1024-256</em>256-1端口号<br>Socket分为两部分<br>一是服务器部分，一直监听服务器某个端口。<br>二是客户端部分，可以向服务器发送数据。</p>\n<h3 id=\"Socket分为通常分为TCP、UDP\"><a href=\"#Socket分为通常分为TCP、UDP\" class=\"headerlink\" title=\"Socket分为通常分为TCP、UDP\"></a>Socket分为通常分为TCP、UDP</h3><p>UDP协议<br>UDP协议是一个不怎么靠谱的协议，把数据打成数据包，数据包包含通讯地址，数据包是否发送到指定服务器是不会被保证的，数据包发送的数据包比较小，速度相对于TCP快些。</p>\n<p>TCP协议<br>客户端与服务器建立连接需要进行三次握手，建立连接之后服务器与客户端就能随意发送数据。</p>\n<p>客户端于服务器端要用同一种协议（UDP或TCP）。<br>客户端向服务器发送数据为OutputStream<br>客户端接受服务器发送的数据为InputStream</p>\n<h4 id=\"服务器端（ServerSocket）\"><a href=\"#服务器端（ServerSocket）\" class=\"headerlink\" title=\"服务器端（ServerSocket）\"></a>服务器端（ServerSocket）</h4><p>1.创建一个ServerSocket<br>2.调用accept()用来接收客户端发送请求<br>3.从接收到的socket对象得到客户端发送的数据</p>\n<p>Android Socket通信原理，注意地方：<br>1、中间的管道连接是通过InputStream/OutputStream流实现的<br>2、一旦管理建立起来可以进行通信<br>3、关闭管道的同时意味着关闭Socket<br>4、当对同一个Socket创建重复管道时会异常<br>5、通信过程中顺序很重要：服务器端首先得到输入流，然后将输入流信息输出到其各个客户端；客户端先建立连接后先写入输出流，然后再获得输入流，不然会有EOFException的异常。</p>\n<h3 id=\"基于TCP协议\"><a href=\"#基于TCP协议\" class=\"headerlink\" title=\"基于TCP协议\"></a>基于TCP协议</h3><p>服务器端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">ServerSocket serverSocket = null;</div><div class=\"line\">        try &#123;</div><div class=\"line\">            // 创建一个ServerSocket对象，并让这个socket监听4567端口</div><div class=\"line\">            serverSocket = new ServerSocket(4567);</div><div class=\"line\">            // 接受客户端所发送的请求（阻塞式） 返回值为从客户端发送得到的</div><div class=\"line\">            Socket socket = serverSocket.accept();          </div><div class=\"line\">            </div><div class=\"line\">            // 读取客户端发送的InputStream</div><div class=\"line\">            InputStream inputStream = socket.getInputStream();</div><div class=\"line\">            byte[] buffer = new byte[1024];</div><div class=\"line\">            int tmp = 0;</div><div class=\"line\">            // 从ImputStream读取客户端发送的数据</div><div class=\"line\">            while ((tmp = inputStream.read(buffer)) != -1) &#123;</div><div class=\"line\">                System.out.println(&quot;Client--&gt;&quot; + new String(buffer, 0, tmp));</div><div class=\"line\">                </div><div class=\"line\">                InetAddress address = socket.getInetAddress();</div><div class=\"line\">                String ip = address.getHostAddress();</div><div class=\"line\">                OutputStream outputStream = socket.getOutputStream();</div><div class=\"line\">                System.out.println(ip);</div><div class=\"line\">                outputStream.write(ip.getBytes());</div><div class=\"line\">                outputStream.flush();   </div><div class=\"line\">            &#125;</div><div class=\"line\">            </div><div class=\"line\">        &#125; catch (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; finally &#123;</div><div class=\"line\">            try &#123;</div><div class=\"line\">                serverSocket.close();</div><div class=\"line\">            &#125; catch (IOException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<p>客户端与服务器建立连接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">        try &#123;</div><div class=\"line\">                // 创建一个Socket对象 指定服务器ip地址和端口号</div><div class=\"line\">                socket = new Socket(String.valueOf(params[0]), (Integer) params[1]);</div><div class=\"line\">                // 从socket得到OutputStream</div><div class=\"line\">                OutputStream outputStream = socket.getOutputStream();</div><div class=\"line\">                outputStream.write(&quot;= = = = = = = = 建立连接= = = = = = = =&quot;.getBytes());</div><div class=\"line\">                outputStream.flush();</div><div class=\"line\">            &#125; catch (IOException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            客户端发送数据到服务器</div><div class=\"line\">            if (socket != null &amp;&amp; !socket.isClosed() &amp;&amp; socket.isConnected()) &#123;</div><div class=\"line\">                    new Thread() &#123;</div><div class=\"line\">                        @Override</div><div class=\"line\">                        public void run() &#123;</div><div class=\"line\">                            try &#123;</div><div class=\"line\">                                OutputStream outputStream = socket.getOutputStream();</div><div class=\"line\">                                String time = SocketActivity.this.format.format(new Date());</div><div class=\"line\">                                String out = &quot;= = = = = = = = &quot; + time + &quot;= = = = = = = =&quot;;</div><div class=\"line\">                                outputStream.write(out.getBytes());</div><div class=\"line\">                                outputStream.flush();</div><div class=\"line\"></div><div class=\"line\">                                InputStream inputStream = socket.getInputStream();</div><div class=\"line\">                                byte[] bb = new byte[1024];</div><div class=\"line\">                                int len = 0;</div><div class=\"line\">                                while ((len = inputStream.read(bb)) != -1) &#123;</div><div class=\"line\">//                                    System.out.println(&quot;服务器返回的数据--&gt;&quot; + new String(bb, 0, len));</div><div class=\"line\">                                    Log.d(TAG, &quot;run: &quot; + &quot;服务器返回的数据--&gt;&quot; + new String(bb, 0, len));</div><div class=\"line\">                                &#125;</div><div class=\"line\">                            &#125; catch (IOException e) &#123;</div><div class=\"line\">                                e.printStackTrace();</div><div class=\"line\">                            &#125;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;.start();</div><div class=\"line\">                &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"基于UDP服务器端\"><a href=\"#基于UDP服务器端\" class=\"headerlink\" title=\"基于UDP服务器端\"></a>基于UDP服务器端</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">try &#123;</div><div class=\"line\">        // 创建一个DatagramSocket对象，并指定监听端口号</div><div class=\"line\">        DatagramSocket socket = new DatagramSocket(4567);</div><div class=\"line\">        byte[] data = new byte[1024];</div><div class=\"line\">        // 创建一个空的DatagramPacket对象 用来接收客户端发送的数据包</div><div class=\"line\">        DatagramPacket packet = new DatagramPacket(data, data.length);</div><div class=\"line\">        // 使用receive方法接收客户端所发送的数据 同样是堵塞的方法 不会向下运行</div><div class=\"line\">        socket.receive(packet);</div><div class=\"line\">        System.out.println(new String(packet.getData()));</div><div class=\"line\">        &#125; catch (SocketException e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">        &#125; catch (IOException e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<p>客户端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">Date date = new Date();</div><div class=\"line\"> String time = SocketActivity.this.format.format(date);</div><div class=\"line\"> DatagramSocket socket = null;</div><div class=\"line\"> try &#123;</div><div class=\"line\">     if (socket != null) &#123;</div><div class=\"line\">         socket.close();</div><div class=\"line\">     &#125;</div><div class=\"line\">     // 创建一个DatagramSocket对象</div><div class=\"line\">     socket = new DatagramSocket(4567);</div><div class=\"line\">     //创建一个InetAddree</div><div class=\"line\">     InetAddress address = InetAddress.getByName((String) params[0]);</div><div class=\"line\">     // 创建一个DatagramPacket对象，并指定服务器地址及端口号</div><div class=\"line\">     DatagramPacket packet = new DatagramPacket(time.getBytes(), time.getBytes().length, address, 4567);</div><div class=\"line\">     // 调用socket对象的send方法 发送数据到服务器</div><div class=\"line\">     socket.send(packet);</div></pre></td></tr></table></figure>"},{"title":"Android Studio插件之ADB WIFI","abbrlink":"4c454898","date":"2016-06-11T04:12:44.000Z","_content":"\n{% cq %}甩掉数据线吧！前提手机需要Root{% endcq %}\n\n<!--more-->\n## 为Android Studio安装ADB WIFI插件\n### 下载并安装\nFile-->Settings-->Plugins-->搜索“ADB WIFI”-->Reset Android Studio\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E5%9B%BE%E7%89%8720160611135316.png 271 517 1 %}\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E6%88%AA%E5%9B%BE20160611135513.png 887 276 2 %}\n### 查看安装\nTools-->Android-->ADB WIFI\n## 为真机安装ADB WIFI并开启端口\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-06-11-13-55-45_com.youzi.adbwifi.png 450 800 3%}\n### 安卓版ADB WIFI下载\n[直接下载链接传送门](http://7xt9yd.com2.z0.glb.clouddn.com/apk/ADB%20WiFi_1.5.apk)\n## 连接（手机电脑必须在同一局域网）\n在Android Studio命令行输入手机ADB WIFI显示的IP地址，我手机的IP地址是192.168.31.231，所以输入`adb connect 192.168.31.231`\n连接成功会有`connected to 192.168.31.231:5555`提示\n再次输入`adb connect 192.168.31.231`会有`already connected to 192.168.31.231:5555`提示\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E5%9B%BE%E7%89%8720160611135817.png 614 342 4%}","source":"_posts/android-studio-adb-wifi.md","raw":"---\ntitle: Android Studio插件之ADB WIFI\ntags:\n  - ADB WIFI\n  - Android Studio\ncategories: Android\nabbrlink: 4c454898\ndate: 2016-06-11 12:12:44\n---\n\n{% cq %}甩掉数据线吧！前提手机需要Root{% endcq %}\n\n<!--more-->\n## 为Android Studio安装ADB WIFI插件\n### 下载并安装\nFile-->Settings-->Plugins-->搜索“ADB WIFI”-->Reset Android Studio\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E5%9B%BE%E7%89%8720160611135316.png 271 517 1 %}\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E6%88%AA%E5%9B%BE20160611135513.png 887 276 2 %}\n### 查看安装\nTools-->Android-->ADB WIFI\n## 为真机安装ADB WIFI并开启端口\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-06-11-13-55-45_com.youzi.adbwifi.png 450 800 3%}\n### 安卓版ADB WIFI下载\n[直接下载链接传送门](http://7xt9yd.com2.z0.glb.clouddn.com/apk/ADB%20WiFi_1.5.apk)\n## 连接（手机电脑必须在同一局域网）\n在Android Studio命令行输入手机ADB WIFI显示的IP地址，我手机的IP地址是192.168.31.231，所以输入`adb connect 192.168.31.231`\n连接成功会有`connected to 192.168.31.231:5555`提示\n再次输入`adb connect 192.168.31.231`会有`already connected to 192.168.31.231:5555`提示\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E5%9B%BE%E7%89%8720160611135817.png 614 342 4%}","slug":"android-studio-adb-wifi","published":1,"updated":"2017-06-08T12:20:29.280Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih0o000esv1fepi3of5l","content":"<blockquote class=\"blockquote-center\"><p>甩掉数据线吧！前提手机需要Root</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"为Android-Studio安装ADB-WIFI插件\"><a href=\"#为Android-Studio安装ADB-WIFI插件\" class=\"headerlink\" title=\"为Android Studio安装ADB WIFI插件\"></a>为Android Studio安装ADB WIFI插件</h2><h3 id=\"下载并安装\"><a href=\"#下载并安装\" class=\"headerlink\" title=\"下载并安装\"></a>下载并安装</h3><p>File–&gt;Settings–&gt;Plugins–&gt;搜索“ADB WIFI”–&gt;Reset Android Studio<br><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E5%9B%BE%E7%89%8720160611135316.png\" width=\"271\" height=\"517\" title=\"1\"><br><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E6%88%AA%E5%9B%BE20160611135513.png\" width=\"887\" height=\"276\" title=\"2\"></p>\n<h3 id=\"查看安装\"><a href=\"#查看安装\" class=\"headerlink\" title=\"查看安装\"></a>查看安装</h3><p>Tools–&gt;Android–&gt;ADB WIFI</p>\n<h2 id=\"为真机安装ADB-WIFI并开启端口\"><a href=\"#为真机安装ADB-WIFI并开启端口\" class=\"headerlink\" title=\"为真机安装ADB WIFI并开启端口\"></a>为真机安装ADB WIFI并开启端口</h2><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-06-11-13-55-45_com.youzi.adbwifi.png\" width=\"450\" height=\"800\" title=\"3\">\n<h3 id=\"安卓版ADB-WIFI下载\"><a href=\"#安卓版ADB-WIFI下载\" class=\"headerlink\" title=\"安卓版ADB WIFI下载\"></a>安卓版ADB WIFI下载</h3><p><a href=\"http://7xt9yd.com2.z0.glb.clouddn.com/apk/ADB%20WiFi_1.5.apk\" target=\"_blank\" rel=\"external\">直接下载链接传送门</a></p>\n<h2 id=\"连接（手机电脑必须在同一局域网）\"><a href=\"#连接（手机电脑必须在同一局域网）\" class=\"headerlink\" title=\"连接（手机电脑必须在同一局域网）\"></a>连接（手机电脑必须在同一局域网）</h2><p>在Android Studio命令行输入手机ADB WIFI显示的IP地址，我手机的IP地址是192.168.31.231，所以输入<code>adb connect 192.168.31.231</code><br>连接成功会有<code>connected to 192.168.31.231:5555</code>提示<br>再次输入<code>adb connect 192.168.31.231</code>会有<code>already connected to 192.168.31.231:5555</code>提示<br><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E5%9B%BE%E7%89%8720160611135817.png\" width=\"614\" height=\"342\" title=\"4\"></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>甩掉数据线吧！前提手机需要Root</p>\n</blockquote>","more":"<h2 id=\"为Android-Studio安装ADB-WIFI插件\"><a href=\"#为Android-Studio安装ADB-WIFI插件\" class=\"headerlink\" title=\"为Android Studio安装ADB WIFI插件\"></a>为Android Studio安装ADB WIFI插件</h2><h3 id=\"下载并安装\"><a href=\"#下载并安装\" class=\"headerlink\" title=\"下载并安装\"></a>下载并安装</h3><p>File–&gt;Settings–&gt;Plugins–&gt;搜索“ADB WIFI”–&gt;Reset Android Studio<br><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E5%9B%BE%E7%89%8720160611135316.png\" width=\"271\" height=\"517\" title=\"1\"><br><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E6%88%AA%E5%9B%BE20160611135513.png\" width=\"887\" height=\"276\" title=\"2\"></p>\n<h3 id=\"查看安装\"><a href=\"#查看安装\" class=\"headerlink\" title=\"查看安装\"></a>查看安装</h3><p>Tools–&gt;Android–&gt;ADB WIFI</p>\n<h2 id=\"为真机安装ADB-WIFI并开启端口\"><a href=\"#为真机安装ADB-WIFI并开启端口\" class=\"headerlink\" title=\"为真机安装ADB WIFI并开启端口\"></a>为真机安装ADB WIFI并开启端口</h2><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/Screenshot_2016-06-11-13-55-45_com.youzi.adbwifi.png\" width=\"450\" height=\"800\" title=\"3\">\n<h3 id=\"安卓版ADB-WIFI下载\"><a href=\"#安卓版ADB-WIFI下载\" class=\"headerlink\" title=\"安卓版ADB WIFI下载\"></a>安卓版ADB WIFI下载</h3><p><a href=\"http://7xt9yd.com2.z0.glb.clouddn.com/apk/ADB%20WiFi_1.5.apk\" target=\"_blank\" rel=\"external\">直接下载链接传送门</a></p>\n<h2 id=\"连接（手机电脑必须在同一局域网）\"><a href=\"#连接（手机电脑必须在同一局域网）\" class=\"headerlink\" title=\"连接（手机电脑必须在同一局域网）\"></a>连接（手机电脑必须在同一局域网）</h2><p>在Android Studio命令行输入手机ADB WIFI显示的IP地址，我手机的IP地址是192.168.31.231，所以输入<code>adb connect 192.168.31.231</code><br>连接成功会有<code>connected to 192.168.31.231:5555</code>提示<br>再次输入<code>adb connect 192.168.31.231</code>会有<code>already connected to 192.168.31.231:5555</code>提示<br><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/QQ%E5%9B%BE%E7%89%8720160611135817.png\" width=\"614\" height=\"342\" title=\"4\"></p>"},{"title":"Android Studio 添加so库引用","abbrlink":"b4825327","date":"2016-05-24T01:30:30.000Z","_content":"\n{% cq %}竟然是还得需要加so库引用。{% endcq %}\n\n<!--more-->\n最近打算更新[ShareMy](http://app.mi.com/detail/289957)，然后开源，开源肯定会让自己的代码更加规范、严谨。正在测试上传文件时，发现失败了，上传文件我是用的[Bmob SDK](http://www.bmob.cn/downloads)，去官网看了下发现SDK更新了，遂下载最新SDK–>解压–>导入SDK–>运行，结果发现就是有这样错误\n`\njava.lang.UnsatisfiedLinkError: Couldn't load bmob from loader dalvik.system.PathClassLoader[DexPathList[[zip file \"/data/app/top.kiuber.sharemy-1.apk\"],nativeLibraryDirectories=[/data/app-lib/top.kiuber.sharemy-1, /vendor/lib, /system/lib]]]: findLibrary returned null\n`\ngoogle了下，还是找不到答案，最后突然想到so库需要导入，然后google了下，一种跟简单的方法可以添加so库引用。\n\n* 在src–>main–>新建‘jniLibs’文件夹\n* 把so库文件夹及文件夹内文件一同复制到jniLibs文件夹内\n* 在MainActivity.java的onCreate方法中加入\n  `\n  // 库名, 注意没有前缀lib和后缀.so System.\n  String libName = \"bmob\"; \n  loadLibrary( libName );\n  `\n* 调试看下就没问题了。\n","source":"_posts/android-studio-add-so.md","raw":"---\ntitle: Android Studio 添加so库引用\ntags:\n  - .so\n  - Bmob\ncategories: Android\nabbrlink: b4825327\ndate: 2016-05-24 09:30:30\n---\n\n{% cq %}竟然是还得需要加so库引用。{% endcq %}\n\n<!--more-->\n最近打算更新[ShareMy](http://app.mi.com/detail/289957)，然后开源，开源肯定会让自己的代码更加规范、严谨。正在测试上传文件时，发现失败了，上传文件我是用的[Bmob SDK](http://www.bmob.cn/downloads)，去官网看了下发现SDK更新了，遂下载最新SDK–>解压–>导入SDK–>运行，结果发现就是有这样错误\n`\njava.lang.UnsatisfiedLinkError: Couldn't load bmob from loader dalvik.system.PathClassLoader[DexPathList[[zip file \"/data/app/top.kiuber.sharemy-1.apk\"],nativeLibraryDirectories=[/data/app-lib/top.kiuber.sharemy-1, /vendor/lib, /system/lib]]]: findLibrary returned null\n`\ngoogle了下，还是找不到答案，最后突然想到so库需要导入，然后google了下，一种跟简单的方法可以添加so库引用。\n\n* 在src–>main–>新建‘jniLibs’文件夹\n* 把so库文件夹及文件夹内文件一同复制到jniLibs文件夹内\n* 在MainActivity.java的onCreate方法中加入\n  `\n  // 库名, 注意没有前缀lib和后缀.so System.\n  String libName = \"bmob\"; \n  loadLibrary( libName );\n  `\n* 调试看下就没问题了。\n","slug":"android-studio-add-so","published":1,"updated":"2017-06-08T12:20:29.282Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih0u000fsv1fcghyywg1","content":"<blockquote class=\"blockquote-center\"><p>竟然是还得需要加so库引用。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>最近打算更新<a href=\"http://app.mi.com/detail/289957\" target=\"_blank\" rel=\"external\">ShareMy</a>，然后开源，开源肯定会让自己的代码更加规范、严谨。正在测试上传文件时，发现失败了，上传文件我是用的<a href=\"http://www.bmob.cn/downloads\" target=\"_blank\" rel=\"external\">Bmob SDK</a>，去官网看了下发现SDK更新了，遂下载最新SDK–&gt;解压–&gt;导入SDK–&gt;运行，结果发现就是有这样错误<br><code>java.lang.UnsatisfiedLinkError: Couldn&#39;t load bmob from loader dalvik.system.PathClassLoader[DexPathList[[zip file &quot;/data/app/top.kiuber.sharemy-1.apk&quot;],nativeLibraryDirectories=[/data/app-lib/top.kiuber.sharemy-1, /vendor/lib, /system/lib]]]: findLibrary returned null</code><br>google了下，还是找不到答案，最后突然想到so库需要导入，然后google了下，一种跟简单的方法可以添加so库引用。</p>\n<ul>\n<li>在src–&gt;main–&gt;新建‘jniLibs’文件夹</li>\n<li>把so库文件夹及文件夹内文件一同复制到jniLibs文件夹内</li>\n<li>在MainActivity.java的onCreate方法中加入<br><code>// 库名, 注意没有前缀lib和后缀.so System.\nString libName = &quot;bmob&quot;; \nloadLibrary( libName );</code></li>\n<li>调试看下就没问题了。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>竟然是还得需要加so库引用。</p>\n</blockquote>","more":"<p>最近打算更新<a href=\"http://app.mi.com/detail/289957\" target=\"_blank\" rel=\"external\">ShareMy</a>，然后开源，开源肯定会让自己的代码更加规范、严谨。正在测试上传文件时，发现失败了，上传文件我是用的<a href=\"http://www.bmob.cn/downloads\" target=\"_blank\" rel=\"external\">Bmob SDK</a>，去官网看了下发现SDK更新了，遂下载最新SDK–&gt;解压–&gt;导入SDK–&gt;运行，结果发现就是有这样错误<br><code>java.lang.UnsatisfiedLinkError: Couldn&#39;t load bmob from loader dalvik.system.PathClassLoader[DexPathList[[zip file &quot;/data/app/top.kiuber.sharemy-1.apk&quot;],nativeLibraryDirectories=[/data/app-lib/top.kiuber.sharemy-1, /vendor/lib, /system/lib]]]: findLibrary returned null</code><br>google了下，还是找不到答案，最后突然想到so库需要导入，然后google了下，一种跟简单的方法可以添加so库引用。</p>\n<ul>\n<li>在src–&gt;main–&gt;新建‘jniLibs’文件夹</li>\n<li>把so库文件夹及文件夹内文件一同复制到jniLibs文件夹内</li>\n<li>在MainActivity.java的onCreate方法中加入<br><code>// 库名, 注意没有前缀lib和后缀.so System.\nString libName = &quot;bmob&quot;; \nloadLibrary( libName );</code></li>\n<li>调试看下就没问题了。</li>\n</ul>"},{"title":"TabLayout+ViewPager实现选项卡滑动","abbrlink":"9a58e972","date":"2016-04-27T12:14:26.000Z","_content":"\n{% cq %}Google在2015的IO大会上，给我们带来了更加详细的`Material Design`设计规范，同时，给我们带来了全新的`Android Design Support Library`，在这个Support中，谷歌给我们提供了更加规范的MD设计风格的空间。最重要的是，`Android Design Support Library`的兼容性更广，直接可以向下兼容到`Android 2.2`。之前我也一直想做出一个选项卡实例，看到网上他们写的教程太难懂了，也可能是因为我没能力懂他们写的，所以我还是自己写一份这个吧，学习安卓的朋友也可以借鉴借鉴，废话就不多说了，上菜。{% endcq %}\n\n<!--more-->\n#### 第一步，当然是写layout文件\n```java\n<android.support.design.widget.TabLayout\n    android:id=\"@+id/tab_FindFragment_title\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"#87CEEB\"\n    app:tabIndicatorColor=\"#ffffff\"\n    app:tabSelectedTextColor=\"@android:color/darker_gray\"\n    app:tabTextColor=\"#ffffff\" />\n\n<android.support.v4.view.ViewPager\n    android:id=\"@+id/vp_FindFragment_pager\"\n   \tandroid:layout_width=\"fill_parent\"\n    android:layout_height=\"0dp\"\n    android:layout_weight=\"1\" />\n```\n其中`tabSelectedTextColor`是指Tab被选中的颜色，`tabTextColor`是指Tab未被选中的颜色，`tabIndicatorColor`是指指示器下标的颜色。\n#### 第二步，声明变量并找到控件对象。\n```java\nprivate TabLayout tab;\nprivate ViewPager viewPager;\n```\n```java\ntab = (TabLayout) findViewById(R.id.tab_FindFragment_title);\nviewPager = (ViewPager) findViewById(R.id.vp_FindFragment_pager);\n```\n#### 第三步，为viewPager设置适配器，并修改`getItem()`，`getCount()`方法的返回值,复写`getPageTitle()`方法。\n```java\nviewPager.setAdapter(new CustomAdapter(getSupportFragmentManager(), getApplicationContext()));\n```\n```java\nprivate class CustomAdapter extends FragmentPagerAdapter {\n        private String fragments[] = {\"Fragment1\", \"Fragment2\"};\n\n        public CustomAdapter(FragmentManager supportFragmentManager, Context applicationContext) {\n            super(supportFragmentManager);\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            switch (position) {\n                case 0:\n                    return new Fragment1();\n                case 1:\n                    return new Fragment2();\n                default:\n                    return null;\n            }\n        }\n\n        @Override\n        public int getCount() {\n            return fragments.length;\n        }\n\n        @Override\n        public CharSequence getPageTitle(int position) {\n            return fragments[position];\n        }\n    }\n```\n#### 第四步，新建Fragment1、fragment2类继承Fragment,新建f1、f2布局文件，并实现`onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)`方法。\n```java\npublic class Fragment1 extends Fragment {\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.f1, container, false);\n    }\n}\n```\n```java\npublic class Fragment2 extends Fragment {\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.f2, container, false);\n    }\n}\n```\n#### 第五步，为tab绑定viewPager，并为tab设置setOnTabSelectedListener。\n```\ntab.setupWithViewPager(viewPager);\n```\n```java\n tab.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\n            @Override\n            public void onTabSelected(TabLayout.Tab tab) {\n                viewPager.setCurrentItem(tab.getPosition());\n            }\n\n            @Override\n            public void onTabUnselected(TabLayout.Tab tab) {\n                viewPager.setCurrentItem(tab.getPosition());\n            }\n\n            @Override\n            public void onTabReselected(TabLayout.Tab tab) {\n                viewPager.setCurrentItem(tab.getPosition());\n            }\n        });\n```\n**注意**：\n1.一定要注意`tab.setupWithViewPager(viewPager);`写在`viewPager.setAdapter(new CustomAdapter(getSupportFragmentManager(),getApplicationContext()))`之后，否则会报错`viewPager do not set`。\n2.viewPager的width和height要设置合适，有时可能是显示了，但是由于设置宽度和高度的问题，可能会让你误以为设置错误。\n参考资料：[ViewPager with TabLayout in Android - Sliding Tabs](https://www.youtube.com/watch?v=-a2jJ92bmzw)","source":"_posts/android-study-TabLayout-ViewPager.md","raw":"---\ntitle: TabLayout+ViewPager实现选项卡滑动\ntags:\n  - 选项卡\ncategories: Android\nabbrlink: 9a58e972\ndate: 2016-04-27 20:14:26\n---\n\n{% cq %}Google在2015的IO大会上，给我们带来了更加详细的`Material Design`设计规范，同时，给我们带来了全新的`Android Design Support Library`，在这个Support中，谷歌给我们提供了更加规范的MD设计风格的空间。最重要的是，`Android Design Support Library`的兼容性更广，直接可以向下兼容到`Android 2.2`。之前我也一直想做出一个选项卡实例，看到网上他们写的教程太难懂了，也可能是因为我没能力懂他们写的，所以我还是自己写一份这个吧，学习安卓的朋友也可以借鉴借鉴，废话就不多说了，上菜。{% endcq %}\n\n<!--more-->\n#### 第一步，当然是写layout文件\n```java\n<android.support.design.widget.TabLayout\n    android:id=\"@+id/tab_FindFragment_title\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"#87CEEB\"\n    app:tabIndicatorColor=\"#ffffff\"\n    app:tabSelectedTextColor=\"@android:color/darker_gray\"\n    app:tabTextColor=\"#ffffff\" />\n\n<android.support.v4.view.ViewPager\n    android:id=\"@+id/vp_FindFragment_pager\"\n   \tandroid:layout_width=\"fill_parent\"\n    android:layout_height=\"0dp\"\n    android:layout_weight=\"1\" />\n```\n其中`tabSelectedTextColor`是指Tab被选中的颜色，`tabTextColor`是指Tab未被选中的颜色，`tabIndicatorColor`是指指示器下标的颜色。\n#### 第二步，声明变量并找到控件对象。\n```java\nprivate TabLayout tab;\nprivate ViewPager viewPager;\n```\n```java\ntab = (TabLayout) findViewById(R.id.tab_FindFragment_title);\nviewPager = (ViewPager) findViewById(R.id.vp_FindFragment_pager);\n```\n#### 第三步，为viewPager设置适配器，并修改`getItem()`，`getCount()`方法的返回值,复写`getPageTitle()`方法。\n```java\nviewPager.setAdapter(new CustomAdapter(getSupportFragmentManager(), getApplicationContext()));\n```\n```java\nprivate class CustomAdapter extends FragmentPagerAdapter {\n        private String fragments[] = {\"Fragment1\", \"Fragment2\"};\n\n        public CustomAdapter(FragmentManager supportFragmentManager, Context applicationContext) {\n            super(supportFragmentManager);\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            switch (position) {\n                case 0:\n                    return new Fragment1();\n                case 1:\n                    return new Fragment2();\n                default:\n                    return null;\n            }\n        }\n\n        @Override\n        public int getCount() {\n            return fragments.length;\n        }\n\n        @Override\n        public CharSequence getPageTitle(int position) {\n            return fragments[position];\n        }\n    }\n```\n#### 第四步，新建Fragment1、fragment2类继承Fragment,新建f1、f2布局文件，并实现`onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)`方法。\n```java\npublic class Fragment1 extends Fragment {\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.f1, container, false);\n    }\n}\n```\n```java\npublic class Fragment2 extends Fragment {\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.f2, container, false);\n    }\n}\n```\n#### 第五步，为tab绑定viewPager，并为tab设置setOnTabSelectedListener。\n```\ntab.setupWithViewPager(viewPager);\n```\n```java\n tab.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\n            @Override\n            public void onTabSelected(TabLayout.Tab tab) {\n                viewPager.setCurrentItem(tab.getPosition());\n            }\n\n            @Override\n            public void onTabUnselected(TabLayout.Tab tab) {\n                viewPager.setCurrentItem(tab.getPosition());\n            }\n\n            @Override\n            public void onTabReselected(TabLayout.Tab tab) {\n                viewPager.setCurrentItem(tab.getPosition());\n            }\n        });\n```\n**注意**：\n1.一定要注意`tab.setupWithViewPager(viewPager);`写在`viewPager.setAdapter(new CustomAdapter(getSupportFragmentManager(),getApplicationContext()))`之后，否则会报错`viewPager do not set`。\n2.viewPager的width和height要设置合适，有时可能是显示了，但是由于设置宽度和高度的问题，可能会让你误以为设置错误。\n参考资料：[ViewPager with TabLayout in Android - Sliding Tabs](https://www.youtube.com/watch?v=-a2jJ92bmzw)","slug":"android-study-TabLayout-ViewPager","published":1,"updated":"2017-06-08T12:20:29.283Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih0z000jsv1fq8d8rdlr","content":"<blockquote class=\"blockquote-center\"><p>Google在2015的IO大会上，给我们带来了更加详细的<code>Material Design</code>设计规范，同时，给我们带来了全新的<code>Android Design Support Library</code>，在这个Support中，谷歌给我们提供了更加规范的MD设计风格的空间。最重要的是，<code>Android Design Support Library</code>的兼容性更广，直接可以向下兼容到<code>Android 2.2</code>。之前我也一直想做出一个选项卡实例，看到网上他们写的教程太难懂了，也可能是因为我没能力懂他们写的，所以我还是自己写一份这个吧，学习安卓的朋友也可以借鉴借鉴，废话就不多说了，上菜。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h4 id=\"第一步，当然是写layout文件\"><a href=\"#第一步，当然是写layout文件\" class=\"headerlink\" title=\"第一步，当然是写layout文件\"></a>第一步，当然是写layout文件</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;android.support.design.widget.TabLayout</div><div class=\"line\">    android:id=<span class=\"string\">\"@+id/tab_FindFragment_title\"</span></div><div class=\"line\">    android:layout_width=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    android:layout_height=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    android:background=<span class=\"string\">\"#87CEEB\"</span></div><div class=\"line\">    app:tabIndicatorColor=<span class=\"string\">\"#ffffff\"</span></div><div class=\"line\">    app:tabSelectedTextColor=<span class=\"string\">\"@android:color/darker_gray\"</span></div><div class=\"line\">    app:tabTextColor=<span class=\"string\">\"#ffffff\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;android.support.v4.view.ViewPager</div><div class=\"line\">    android:id=<span class=\"string\">\"@+id/vp_FindFragment_pager\"</span></div><div class=\"line\">   \tandroid:layout_width=<span class=\"string\">\"fill_parent\"</span></div><div class=\"line\">    android:layout_height=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    android:layout_weight=<span class=\"string\">\"1\"</span> /&gt;</div></pre></td></tr></table></figure>\n<p>其中<code>tabSelectedTextColor</code>是指Tab被选中的颜色，<code>tabTextColor</code>是指Tab未被选中的颜色，<code>tabIndicatorColor</code>是指指示器下标的颜色。</p>\n<h4 id=\"第二步，声明变量并找到控件对象。\"><a href=\"#第二步，声明变量并找到控件对象。\" class=\"headerlink\" title=\"第二步，声明变量并找到控件对象。\"></a>第二步，声明变量并找到控件对象。</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> TabLayout tab;</div><div class=\"line\"><span class=\"keyword\">private</span> ViewPager viewPager;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tab = (TabLayout) findViewById(R.id.tab_FindFragment_title);</div><div class=\"line\">viewPager = (ViewPager) findViewById(R.id.vp_FindFragment_pager);</div></pre></td></tr></table></figure>\n<h4 id=\"第三步，为viewPager设置适配器，并修改getItem-，getCount-方法的返回值-复写getPageTitle-方法。\"><a href=\"#第三步，为viewPager设置适配器，并修改getItem-，getCount-方法的返回值-复写getPageTitle-方法。\" class=\"headerlink\" title=\"第三步，为viewPager设置适配器，并修改getItem()，getCount()方法的返回值,复写getPageTitle()方法。\"></a>第三步，为viewPager设置适配器，并修改<code>getItem()</code>，<code>getCount()</code>方法的返回值,复写<code>getPageTitle()</code>方法。</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">viewPager.setAdapter(<span class=\"keyword\">new</span> CustomAdapter(getSupportFragmentManager(), getApplicationContext()));</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">FragmentPagerAdapter</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> String fragments[] = &#123;<span class=\"string\">\"Fragment1\"</span>, <span class=\"string\">\"Fragment2\"</span>&#125;;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomAdapter</span><span class=\"params\">(FragmentManager supportFragmentManager, Context applicationContext)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">super</span>(supportFragmentManager);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Fragment <span class=\"title\">getItem</span><span class=\"params\">(<span class=\"keyword\">int</span> position)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">switch</span> (position) &#123;</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Fragment1();</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Fragment2();</div><div class=\"line\">                <span class=\"keyword\">default</span>:</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getCount</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> fragments.length;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> CharSequence <span class=\"title\">getPageTitle</span><span class=\"params\">(<span class=\"keyword\">int</span> position)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> fragments[position];</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h4 id=\"第四步，新建Fragment1、fragment2类继承Fragment-新建f1、f2布局文件，并实现onCreateView-LayoutInflater-inflater-Nullable-ViewGroup-container-Nullable-Bundle-savedInstanceState-方法。\"><a href=\"#第四步，新建Fragment1、fragment2类继承Fragment-新建f1、f2布局文件，并实现onCreateView-LayoutInflater-inflater-Nullable-ViewGroup-container-Nullable-Bundle-savedInstanceState-方法。\" class=\"headerlink\" title=\"第四步，新建Fragment1、fragment2类继承Fragment,新建f1、f2布局文件，并实现onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)方法。\"></a>第四步，新建Fragment1、fragment2类继承Fragment,新建f1、f2布局文件，并实现<code>onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</code>方法。</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fragment1</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fragment</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Nullable</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> inflater.inflate(R.layout.f1, container, <span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fragment2</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fragment</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Nullable</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> inflater.inflate(R.layout.f2, container, <span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"第五步，为tab绑定viewPager，并为tab设置setOnTabSelectedListener。\"><a href=\"#第五步，为tab绑定viewPager，并为tab设置setOnTabSelectedListener。\" class=\"headerlink\" title=\"第五步，为tab绑定viewPager，并为tab设置setOnTabSelectedListener。\"></a>第五步，为tab绑定viewPager，并为tab设置setOnTabSelectedListener。</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tab.setupWithViewPager(viewPager);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">tab.setOnTabSelectedListener(<span class=\"keyword\">new</span> TabLayout.OnTabSelectedListener() &#123;</div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onTabSelected</span><span class=\"params\">(TabLayout.Tab tab)</span> </span>&#123;</div><div class=\"line\">               viewPager.setCurrentItem(tab.getPosition());</div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onTabUnselected</span><span class=\"params\">(TabLayout.Tab tab)</span> </span>&#123;</div><div class=\"line\">               viewPager.setCurrentItem(tab.getPosition());</div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onTabReselected</span><span class=\"params\">(TabLayout.Tab tab)</span> </span>&#123;</div><div class=\"line\">               viewPager.setCurrentItem(tab.getPosition());</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;);</div></pre></td></tr></table></figure>\n<p><strong>注意</strong>：<br>1.一定要注意<code>tab.setupWithViewPager(viewPager);</code>写在<code>viewPager.setAdapter(new CustomAdapter(getSupportFragmentManager(),getApplicationContext()))</code>之后，否则会报错<code>viewPager do not set</code>。<br>2.viewPager的width和height要设置合适，有时可能是显示了，但是由于设置宽度和高度的问题，可能会让你误以为设置错误。<br>参考资料：<a href=\"https://www.youtube.com/watch?v=-a2jJ92bmzw\" target=\"_blank\" rel=\"external\">ViewPager with TabLayout in Android - Sliding Tabs</a></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>Google在2015的IO大会上，给我们带来了更加详细的<code>Material Design</code>设计规范，同时，给我们带来了全新的<code>Android Design Support Library</code>，在这个Support中，谷歌给我们提供了更加规范的MD设计风格的空间。最重要的是，<code>Android Design Support Library</code>的兼容性更广，直接可以向下兼容到<code>Android 2.2</code>。之前我也一直想做出一个选项卡实例，看到网上他们写的教程太难懂了，也可能是因为我没能力懂他们写的，所以我还是自己写一份这个吧，学习安卓的朋友也可以借鉴借鉴，废话就不多说了，上菜。</p>\n</blockquote>","more":"<h4 id=\"第一步，当然是写layout文件\"><a href=\"#第一步，当然是写layout文件\" class=\"headerlink\" title=\"第一步，当然是写layout文件\"></a>第一步，当然是写layout文件</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;android.support.design.widget.TabLayout</div><div class=\"line\">    android:id=<span class=\"string\">\"@+id/tab_FindFragment_title\"</span></div><div class=\"line\">    android:layout_width=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    android:layout_height=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    android:background=<span class=\"string\">\"#87CEEB\"</span></div><div class=\"line\">    app:tabIndicatorColor=<span class=\"string\">\"#ffffff\"</span></div><div class=\"line\">    app:tabSelectedTextColor=<span class=\"string\">\"@android:color/darker_gray\"</span></div><div class=\"line\">    app:tabTextColor=<span class=\"string\">\"#ffffff\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;android.support.v4.view.ViewPager</div><div class=\"line\">    android:id=<span class=\"string\">\"@+id/vp_FindFragment_pager\"</span></div><div class=\"line\">   \tandroid:layout_width=<span class=\"string\">\"fill_parent\"</span></div><div class=\"line\">    android:layout_height=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    android:layout_weight=<span class=\"string\">\"1\"</span> /&gt;</div></pre></td></tr></table></figure>\n<p>其中<code>tabSelectedTextColor</code>是指Tab被选中的颜色，<code>tabTextColor</code>是指Tab未被选中的颜色，<code>tabIndicatorColor</code>是指指示器下标的颜色。</p>\n<h4 id=\"第二步，声明变量并找到控件对象。\"><a href=\"#第二步，声明变量并找到控件对象。\" class=\"headerlink\" title=\"第二步，声明变量并找到控件对象。\"></a>第二步，声明变量并找到控件对象。</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> TabLayout tab;</div><div class=\"line\"><span class=\"keyword\">private</span> ViewPager viewPager;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tab = (TabLayout) findViewById(R.id.tab_FindFragment_title);</div><div class=\"line\">viewPager = (ViewPager) findViewById(R.id.vp_FindFragment_pager);</div></pre></td></tr></table></figure>\n<h4 id=\"第三步，为viewPager设置适配器，并修改getItem-，getCount-方法的返回值-复写getPageTitle-方法。\"><a href=\"#第三步，为viewPager设置适配器，并修改getItem-，getCount-方法的返回值-复写getPageTitle-方法。\" class=\"headerlink\" title=\"第三步，为viewPager设置适配器，并修改getItem()，getCount()方法的返回值,复写getPageTitle()方法。\"></a>第三步，为viewPager设置适配器，并修改<code>getItem()</code>，<code>getCount()</code>方法的返回值,复写<code>getPageTitle()</code>方法。</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">viewPager.setAdapter(<span class=\"keyword\">new</span> CustomAdapter(getSupportFragmentManager(), getApplicationContext()));</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">FragmentPagerAdapter</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> String fragments[] = &#123;<span class=\"string\">\"Fragment1\"</span>, <span class=\"string\">\"Fragment2\"</span>&#125;;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomAdapter</span><span class=\"params\">(FragmentManager supportFragmentManager, Context applicationContext)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">super</span>(supportFragmentManager);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Fragment <span class=\"title\">getItem</span><span class=\"params\">(<span class=\"keyword\">int</span> position)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">switch</span> (position) &#123;</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Fragment1();</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Fragment2();</div><div class=\"line\">                <span class=\"keyword\">default</span>:</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getCount</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> fragments.length;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> CharSequence <span class=\"title\">getPageTitle</span><span class=\"params\">(<span class=\"keyword\">int</span> position)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> fragments[position];</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h4 id=\"第四步，新建Fragment1、fragment2类继承Fragment-新建f1、f2布局文件，并实现onCreateView-LayoutInflater-inflater-Nullable-ViewGroup-container-Nullable-Bundle-savedInstanceState-方法。\"><a href=\"#第四步，新建Fragment1、fragment2类继承Fragment-新建f1、f2布局文件，并实现onCreateView-LayoutInflater-inflater-Nullable-ViewGroup-container-Nullable-Bundle-savedInstanceState-方法。\" class=\"headerlink\" title=\"第四步，新建Fragment1、fragment2类继承Fragment,新建f1、f2布局文件，并实现onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)方法。\"></a>第四步，新建Fragment1、fragment2类继承Fragment,新建f1、f2布局文件，并实现<code>onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</code>方法。</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fragment1</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fragment</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Nullable</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> inflater.inflate(R.layout.f1, container, <span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fragment2</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fragment</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Nullable</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> inflater.inflate(R.layout.f2, container, <span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"第五步，为tab绑定viewPager，并为tab设置setOnTabSelectedListener。\"><a href=\"#第五步，为tab绑定viewPager，并为tab设置setOnTabSelectedListener。\" class=\"headerlink\" title=\"第五步，为tab绑定viewPager，并为tab设置setOnTabSelectedListener。\"></a>第五步，为tab绑定viewPager，并为tab设置setOnTabSelectedListener。</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tab.setupWithViewPager(viewPager);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">tab.setOnTabSelectedListener(<span class=\"keyword\">new</span> TabLayout.OnTabSelectedListener() &#123;</div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onTabSelected</span><span class=\"params\">(TabLayout.Tab tab)</span> </span>&#123;</div><div class=\"line\">               viewPager.setCurrentItem(tab.getPosition());</div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onTabUnselected</span><span class=\"params\">(TabLayout.Tab tab)</span> </span>&#123;</div><div class=\"line\">               viewPager.setCurrentItem(tab.getPosition());</div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onTabReselected</span><span class=\"params\">(TabLayout.Tab tab)</span> </span>&#123;</div><div class=\"line\">               viewPager.setCurrentItem(tab.getPosition());</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;);</div></pre></td></tr></table></figure>\n<p><strong>注意</strong>：<br>1.一定要注意<code>tab.setupWithViewPager(viewPager);</code>写在<code>viewPager.setAdapter(new CustomAdapter(getSupportFragmentManager(),getApplicationContext()))</code>之后，否则会报错<code>viewPager do not set</code>。<br>2.viewPager的width和height要设置合适，有时可能是显示了，但是由于设置宽度和高度的问题，可能会让你误以为设置错误。<br>参考资料：<a href=\"https://www.youtube.com/watch?v=-a2jJ92bmzw\" target=\"_blank\" rel=\"external\">ViewPager with TabLayout in Android - Sliding Tabs</a></p>"},{"title":"awesome-android-tips","abbrlink":"f95b00ba","date":"2016-05-02T11:59:25.000Z","_content":"\n{% cq %}这里收集了大家常用的一些Android代码,持续更新中,内容来自自己的平时积累和网络上看到的文章，部分原文地址在最下方。如有错误欢迎指正,如有侵权,请联系我删除。里面可能会有重复内容,请忽略,有需要的可以fork,fork前别忘了点赞哦{% endcq %}\n\n<!--more-->\n转载自[https://github.com/jiang111/awesome-android-tips](https://github.com/jiang111/awesome-android-tips)","source":"_posts/awesome-android-tips.md","raw":"---\ntitle: awesome-android-tips\ntags:\n  - Android\ncategories: 整理\nabbrlink: f95b00ba\ndate: 2016-05-02 19:59:25\n---\n\n{% cq %}这里收集了大家常用的一些Android代码,持续更新中,内容来自自己的平时积累和网络上看到的文章，部分原文地址在最下方。如有错误欢迎指正,如有侵权,请联系我删除。里面可能会有重复内容,请忽略,有需要的可以fork,fork前别忘了点赞哦{% endcq %}\n\n<!--more-->\n转载自[https://github.com/jiang111/awesome-android-tips](https://github.com/jiang111/awesome-android-tips)","slug":"awesome-android-tips","published":1,"updated":"2017-06-08T12:20:29.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih17000msv1fpcd5g4ih","content":"<blockquote class=\"blockquote-center\"><p>这里收集了大家常用的一些Android代码,持续更新中,内容来自自己的平时积累和网络上看到的文章，部分原文地址在最下方。如有错误欢迎指正,如有侵权,请联系我删除。里面可能会有重复内容,请忽略,有需要的可以fork,fork前别忘了点赞哦</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>转载自<a href=\"https://github.com/jiang111/awesome-android-tips\" target=\"_blank\" rel=\"external\">https://github.com/jiang111/awesome-android-tips</a></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>这里收集了大家常用的一些Android代码,持续更新中,内容来自自己的平时积累和网络上看到的文章，部分原文地址在最下方。如有错误欢迎指正,如有侵权,请联系我删除。里面可能会有重复内容,请忽略,有需要的可以fork,fork前别忘了点赞哦</p>\n</blockquote>","more":"<p>转载自<a href=\"https://github.com/jiang111/awesome-android-tips\" target=\"_blank\" rel=\"external\">https://github.com/jiang111/awesome-android-tips</a></p>"},{"title":"搭建本博客所看的网站及知识","abbrlink":"21bf3f13","date":"2016-04-24T03:30:53.000Z","_content":"\n{% cq %}汇总一下，希望对以后自己动手搭建博客的伙伴们有帮助。{% endcq %}\n\n<!--more-->\nhttp://ibruce.info/2013/11/22/hexo-your-blog/\nhttps://xuanwo.org/2015/03/26/hexo-intor/\nhttp://blog.fens.me/hexo-blog-github/\nhttp://www.v2ex.com/t/175940\nhttp://www.jianshu.com/p/465830080ea9\nhttp://www.jianshu.com/p/2640561e96f8\nhttp://www.jianshu.com/p/739bf1305e66\nhttp://www.liuhaihua.cn/archives/180154.html\nhttp://www.jianshu.com/p/7ad9d3cd4d6e\nhttp://chitanda.me/2015/06/11/tips-for-setup-hexo\n\nhttp://qjzhixing.com/tools/\nhttp://zipperary.com/about/\nhttp://sconfield.github.io/\n\nhttps://github.com/chuangwailinjie/chuangwailinjie.github.io/blob/master/404.html\nhttps://github.com/MOxFIVE/hexo-theme-yelee\nhttp://www.tuicool.com/articles/AfQnQjy/\n\nhttp://www.tuicool.com/articles/Nnuyu2A\nhttp://blog.fens.me/hexo-blog-github/\n\n详细语法\nhttp://wowubuntu.com/markdown/\n在线markdown\nhttp://markdown.xiaoshujiang.com/\nhttp://dillinger.io/\nhttps://www.zybuluo.com/mdeditor\n\n下面是自己搭建博客的主要代码\n创建公钥\n`ssh-keygen -t rsa -C \"your_email@youremail.com\" `\n安装Hexo\n`npm install hexo-cli -g`（速度慢的话 用`npm install -g cnpm --registry=https://registry.npm.taobao.org`下面的`npm`都用`cnpm`）\n\n`npm install hexo --save`\n\n`hexo -v`\n\n初始化Hexo\n`hexo init`\n\n`npm install`\n\n首次体验Hexo（http://localhost:4000/）\n\n`hexo s`\n\n`hexo g`\n\n\n配置Deployment\n`git config --global user.name \"yourname\"`\n`git config --global user.email \"youremail\"`\n\n`hexo d`(如果报错，`npm install hexo-deployer-git --save`)\n\n\n\n设计\nhttp://www.zcool.com.cn/\nhttp://www.uimaker.com/","source":"_posts/build-self-blog-knowledge.md","raw":"---\ntitle: 搭建本博客所看的网站及知识\ntags:\n  - 搭建博客\ncategories: Hexo\nabbrlink: 21bf3f13\ndate: 2016-04-24 11:30:53\n---\n\n{% cq %}汇总一下，希望对以后自己动手搭建博客的伙伴们有帮助。{% endcq %}\n\n<!--more-->\nhttp://ibruce.info/2013/11/22/hexo-your-blog/\nhttps://xuanwo.org/2015/03/26/hexo-intor/\nhttp://blog.fens.me/hexo-blog-github/\nhttp://www.v2ex.com/t/175940\nhttp://www.jianshu.com/p/465830080ea9\nhttp://www.jianshu.com/p/2640561e96f8\nhttp://www.jianshu.com/p/739bf1305e66\nhttp://www.liuhaihua.cn/archives/180154.html\nhttp://www.jianshu.com/p/7ad9d3cd4d6e\nhttp://chitanda.me/2015/06/11/tips-for-setup-hexo\n\nhttp://qjzhixing.com/tools/\nhttp://zipperary.com/about/\nhttp://sconfield.github.io/\n\nhttps://github.com/chuangwailinjie/chuangwailinjie.github.io/blob/master/404.html\nhttps://github.com/MOxFIVE/hexo-theme-yelee\nhttp://www.tuicool.com/articles/AfQnQjy/\n\nhttp://www.tuicool.com/articles/Nnuyu2A\nhttp://blog.fens.me/hexo-blog-github/\n\n详细语法\nhttp://wowubuntu.com/markdown/\n在线markdown\nhttp://markdown.xiaoshujiang.com/\nhttp://dillinger.io/\nhttps://www.zybuluo.com/mdeditor\n\n下面是自己搭建博客的主要代码\n创建公钥\n`ssh-keygen -t rsa -C \"your_email@youremail.com\" `\n安装Hexo\n`npm install hexo-cli -g`（速度慢的话 用`npm install -g cnpm --registry=https://registry.npm.taobao.org`下面的`npm`都用`cnpm`）\n\n`npm install hexo --save`\n\n`hexo -v`\n\n初始化Hexo\n`hexo init`\n\n`npm install`\n\n首次体验Hexo（http://localhost:4000/）\n\n`hexo s`\n\n`hexo g`\n\n\n配置Deployment\n`git config --global user.name \"yourname\"`\n`git config --global user.email \"youremail\"`\n\n`hexo d`(如果报错，`npm install hexo-deployer-git --save`)\n\n\n\n设计\nhttp://www.zcool.com.cn/\nhttp://www.uimaker.com/","slug":"build-self-blog-knowledge","published":1,"updated":"2017-06-08T12:20:29.286Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih1b000psv1fd0mbkbe5","content":"<blockquote class=\"blockquote-center\"><p>汇总一下，希望对以后自己动手搭建博客的伙伴们有帮助。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\" target=\"_blank\" rel=\"external\">http://ibruce.info/2013/11/22/hexo-your-blog/</a><br><a href=\"https://xuanwo.org/2015/03/26/hexo-intor/\" target=\"_blank\" rel=\"external\">https://xuanwo.org/2015/03/26/hexo-intor/</a><br><a href=\"http://blog.fens.me/hexo-blog-github/\" target=\"_blank\" rel=\"external\">http://blog.fens.me/hexo-blog-github/</a><br><a href=\"http://www.v2ex.com/t/175940\" target=\"_blank\" rel=\"external\">http://www.v2ex.com/t/175940</a><br><a href=\"http://www.jianshu.com/p/465830080ea9\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/465830080ea9</a><br><a href=\"http://www.jianshu.com/p/2640561e96f8\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/2640561e96f8</a><br><a href=\"http://www.jianshu.com/p/739bf1305e66\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/739bf1305e66</a><br><a href=\"http://www.liuhaihua.cn/archives/180154.html\" target=\"_blank\" rel=\"external\">http://www.liuhaihua.cn/archives/180154.html</a><br><a href=\"http://www.jianshu.com/p/7ad9d3cd4d6e\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/7ad9d3cd4d6e</a><br><a href=\"http://chitanda.me/2015/06/11/tips-for-setup-hexo\" target=\"_blank\" rel=\"external\">http://chitanda.me/2015/06/11/tips-for-setup-hexo</a></p>\n<p><a href=\"http://qjzhixing.com/tools/\" target=\"_blank\" rel=\"external\">http://qjzhixing.com/tools/</a><br><a href=\"http://zipperary.com/about/\" target=\"_blank\" rel=\"external\">http://zipperary.com/about/</a><br><a href=\"http://sconfield.github.io/\" target=\"_blank\" rel=\"external\">http://sconfield.github.io/</a></p>\n<p><a href=\"https://github.com/chuangwailinjie/chuangwailinjie.github.io/blob/master/404.html\" target=\"_blank\" rel=\"external\">https://github.com/chuangwailinjie/chuangwailinjie.github.io/blob/master/404.html</a><br><a href=\"https://github.com/MOxFIVE/hexo-theme-yelee\" target=\"_blank\" rel=\"external\">https://github.com/MOxFIVE/hexo-theme-yelee</a><br><a href=\"http://www.tuicool.com/articles/AfQnQjy/\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/AfQnQjy/</a></p>\n<p><a href=\"http://www.tuicool.com/articles/Nnuyu2A\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/Nnuyu2A</a><br><a href=\"http://blog.fens.me/hexo-blog-github/\" target=\"_blank\" rel=\"external\">http://blog.fens.me/hexo-blog-github/</a></p>\n<p>详细语法<br><a href=\"http://wowubuntu.com/markdown/\" target=\"_blank\" rel=\"external\">http://wowubuntu.com/markdown/</a><br>在线markdown<br><a href=\"http://markdown.xiaoshujiang.com/\" target=\"_blank\" rel=\"external\">http://markdown.xiaoshujiang.com/</a><br><a href=\"http://dillinger.io/\" target=\"_blank\" rel=\"external\">http://dillinger.io/</a><br><a href=\"https://www.zybuluo.com/mdeditor\" target=\"_blank\" rel=\"external\">https://www.zybuluo.com/mdeditor</a></p>\n<p>下面是自己搭建博客的主要代码<br>创建公钥<br><code>ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</code><br>安装Hexo<br><code>npm install hexo-cli -g</code>（速度慢的话 用<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>下面的<code>npm</code>都用<code>cnpm</code>）</p>\n<p><code>npm install hexo --save</code></p>\n<p><code>hexo -v</code></p>\n<p>初始化Hexo<br><code>hexo init</code></p>\n<p><code>npm install</code></p>\n<p>首次体验Hexo（<a href=\"http://localhost:4000/）\" target=\"_blank\" rel=\"external\">http://localhost:4000/）</a></p>\n<p><code>hexo s</code></p>\n<p><code>hexo g</code></p>\n<p>配置Deployment<br><code>git config --global user.name &quot;yourname&quot;</code><br><code>git config --global user.email &quot;youremail&quot;</code></p>\n<p><code>hexo d</code>(如果报错，<code>npm install hexo-deployer-git --save</code>)</p>\n<p>设计<br><a href=\"http://www.zcool.com.cn/\" target=\"_blank\" rel=\"external\">http://www.zcool.com.cn/</a><br><a href=\"http://www.uimaker.com/\" target=\"_blank\" rel=\"external\">http://www.uimaker.com/</a></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>汇总一下，希望对以后自己动手搭建博客的伙伴们有帮助。</p>\n</blockquote>","more":"<p><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\" target=\"_blank\" rel=\"external\">http://ibruce.info/2013/11/22/hexo-your-blog/</a><br><a href=\"https://xuanwo.org/2015/03/26/hexo-intor/\" target=\"_blank\" rel=\"external\">https://xuanwo.org/2015/03/26/hexo-intor/</a><br><a href=\"http://blog.fens.me/hexo-blog-github/\" target=\"_blank\" rel=\"external\">http://blog.fens.me/hexo-blog-github/</a><br><a href=\"http://www.v2ex.com/t/175940\" target=\"_blank\" rel=\"external\">http://www.v2ex.com/t/175940</a><br><a href=\"http://www.jianshu.com/p/465830080ea9\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/465830080ea9</a><br><a href=\"http://www.jianshu.com/p/2640561e96f8\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/2640561e96f8</a><br><a href=\"http://www.jianshu.com/p/739bf1305e66\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/739bf1305e66</a><br><a href=\"http://www.liuhaihua.cn/archives/180154.html\" target=\"_blank\" rel=\"external\">http://www.liuhaihua.cn/archives/180154.html</a><br><a href=\"http://www.jianshu.com/p/7ad9d3cd4d6e\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/7ad9d3cd4d6e</a><br><a href=\"http://chitanda.me/2015/06/11/tips-for-setup-hexo\" target=\"_blank\" rel=\"external\">http://chitanda.me/2015/06/11/tips-for-setup-hexo</a></p>\n<p><a href=\"http://qjzhixing.com/tools/\" target=\"_blank\" rel=\"external\">http://qjzhixing.com/tools/</a><br><a href=\"http://zipperary.com/about/\" target=\"_blank\" rel=\"external\">http://zipperary.com/about/</a><br><a href=\"http://sconfield.github.io/\" target=\"_blank\" rel=\"external\">http://sconfield.github.io/</a></p>\n<p><a href=\"https://github.com/chuangwailinjie/chuangwailinjie.github.io/blob/master/404.html\" target=\"_blank\" rel=\"external\">https://github.com/chuangwailinjie/chuangwailinjie.github.io/blob/master/404.html</a><br><a href=\"https://github.com/MOxFIVE/hexo-theme-yelee\" target=\"_blank\" rel=\"external\">https://github.com/MOxFIVE/hexo-theme-yelee</a><br><a href=\"http://www.tuicool.com/articles/AfQnQjy/\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/AfQnQjy/</a></p>\n<p><a href=\"http://www.tuicool.com/articles/Nnuyu2A\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/Nnuyu2A</a><br><a href=\"http://blog.fens.me/hexo-blog-github/\" target=\"_blank\" rel=\"external\">http://blog.fens.me/hexo-blog-github/</a></p>\n<p>详细语法<br><a href=\"http://wowubuntu.com/markdown/\" target=\"_blank\" rel=\"external\">http://wowubuntu.com/markdown/</a><br>在线markdown<br><a href=\"http://markdown.xiaoshujiang.com/\" target=\"_blank\" rel=\"external\">http://markdown.xiaoshujiang.com/</a><br><a href=\"http://dillinger.io/\" target=\"_blank\" rel=\"external\">http://dillinger.io/</a><br><a href=\"https://www.zybuluo.com/mdeditor\" target=\"_blank\" rel=\"external\">https://www.zybuluo.com/mdeditor</a></p>\n<p>下面是自己搭建博客的主要代码<br>创建公钥<br><code>ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</code><br>安装Hexo<br><code>npm install hexo-cli -g</code>（速度慢的话 用<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>下面的<code>npm</code>都用<code>cnpm</code>）</p>\n<p><code>npm install hexo --save</code></p>\n<p><code>hexo -v</code></p>\n<p>初始化Hexo<br><code>hexo init</code></p>\n<p><code>npm install</code></p>\n<p>首次体验Hexo（<a href=\"http://localhost:4000/）\" target=\"_blank\" rel=\"external\">http://localhost:4000/）</a></p>\n<p><code>hexo s</code></p>\n<p><code>hexo g</code></p>\n<p>配置Deployment<br><code>git config --global user.name &quot;yourname&quot;</code><br><code>git config --global user.email &quot;youremail&quot;</code></p>\n<p><code>hexo d</code>(如果报错，<code>npm install hexo-deployer-git --save</code>)</p>\n<p>设计<br><a href=\"http://www.zcool.com.cn/\" target=\"_blank\" rel=\"external\">http://www.zcool.com.cn/</a><br><a href=\"http://www.uimaker.com/\" target=\"_blank\" rel=\"external\">http://www.uimaker.com/</a></p>"},{"title":"Centos 7 安装图形化界面并实现远程控制","abbrlink":"c9d9f67f","date":"2017-03-13T06:40:06.000Z","_content":"\n{% cq %}使用teamviewer远程服务器{% endcq %}\n\n<!--more-->\n\n### 安装图形化界面\n\n1. 安装环境\n\n   <!-- ```# 先安装MATE Desktop``` -->\n\n   `yum groups install \"MATE Desktop\"`\n\n   `安装好MATE Desktop后，再安装X Window System,最好等待上一步安装完成后再执行这一步。`\n\n   `yum groups install \"X Window System\"`\n\n   ​\n\n2. 设置默认通过桌面环境启动服务器\n\n   `systemctl set-default graphical.target`\n\n3. 重启一下服务器然后登陆服务器运营商在线网页就能看到图形化界面了。\n\n   `reboot`\n\n   ​\n\n### 安装teamviewer\n\n1. 下载安装包\n\n   >方法一：从[官网](https://www.teamviewer.com/zhcn/download/linux/)下载安装包rpm安装包，然后传到服务器。\n   >\n   >方法二：`wget https://download.teamviewer.com/download/teamviewer.i686.rpm\n\n2. 使用yum安装\n\n  `yum install 包路径`\n3. 开启teamviewer\n\n   ​  在网页上打开teamviewer，第一次打开会有个协议需要接受，所以在命令行打不开。如果不把图形化界面设置为默认启动方式，关闭网页后teamviewer自动关闭连接。\n","source":"_posts/centos-desktop.md","raw":"---\ntitle: Centos 7 安装图形化界面并实现远程控制\ntags:\n  - 远程连接\ncategories: Linux\nabbrlink: c9d9f67f\ndate: 2017-03-13 14:40:06\n---\n\n{% cq %}使用teamviewer远程服务器{% endcq %}\n\n<!--more-->\n\n### 安装图形化界面\n\n1. 安装环境\n\n   <!-- ```# 先安装MATE Desktop``` -->\n\n   `yum groups install \"MATE Desktop\"`\n\n   `安装好MATE Desktop后，再安装X Window System,最好等待上一步安装完成后再执行这一步。`\n\n   `yum groups install \"X Window System\"`\n\n   ​\n\n2. 设置默认通过桌面环境启动服务器\n\n   `systemctl set-default graphical.target`\n\n3. 重启一下服务器然后登陆服务器运营商在线网页就能看到图形化界面了。\n\n   `reboot`\n\n   ​\n\n### 安装teamviewer\n\n1. 下载安装包\n\n   >方法一：从[官网](https://www.teamviewer.com/zhcn/download/linux/)下载安装包rpm安装包，然后传到服务器。\n   >\n   >方法二：`wget https://download.teamviewer.com/download/teamviewer.i686.rpm\n\n2. 使用yum安装\n\n  `yum install 包路径`\n3. 开启teamviewer\n\n   ​  在网页上打开teamviewer，第一次打开会有个协议需要接受，所以在命令行打不开。如果不把图形化界面设置为默认启动方式，关闭网页后teamviewer自动关闭连接。\n","slug":"centos-desktop","published":1,"updated":"2017-06-08T12:20:29.285Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih1e000tsv1fxkzdp4m0","content":"<blockquote class=\"blockquote-center\"><p>使用teamviewer远程服务器</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"安装图形化界面\"><a href=\"#安装图形化界面\" class=\"headerlink\" title=\"安装图形化界面\"></a>安装图形化界面</h3><ol>\n<li><p>安装环境</p>\n<!-- ```# 先安装MATE Desktop``` -->\n<p><code>yum groups install &quot;MATE Desktop&quot;</code></p>\n<p><code>安装好MATE Desktop后，再安装X Window System,最好等待上一步安装完成后再执行这一步。</code></p>\n<p><code>yum groups install &quot;X Window System&quot;</code></p>\n<p>​</p>\n</li>\n<li><p>设置默认通过桌面环境启动服务器</p>\n<p><code>systemctl set-default graphical.target</code></p>\n</li>\n<li><p>重启一下服务器然后登陆服务器运营商在线网页就能看到图形化界面了。</p>\n<p><code>reboot</code></p>\n<p>​</p>\n</li>\n</ol>\n<h3 id=\"安装teamviewer\"><a href=\"#安装teamviewer\" class=\"headerlink\" title=\"安装teamviewer\"></a>安装teamviewer</h3><ol>\n<li><p>下载安装包</p>\n<blockquote>\n<p>方法一：从<a href=\"https://www.teamviewer.com/zhcn/download/linux/\" target=\"_blank\" rel=\"external\">官网</a>下载安装包rpm安装包，然后传到服务器。</p>\n<p>方法二：`wget <a href=\"https://download.teamviewer.com/download/teamviewer.i686.rpm\" target=\"_blank\" rel=\"external\">https://download.teamviewer.com/download/teamviewer.i686.rpm</a></p>\n</blockquote>\n</li>\n<li><p>使用yum安装</p>\n<p><code>yum install 包路径</code></p>\n</li>\n<li><p>开启teamviewer</p>\n<p>​  在网页上打开teamviewer，第一次打开会有个协议需要接受，所以在命令行打不开。如果不把图形化界面设置为默认启动方式，关闭网页后teamviewer自动关闭连接。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>使用teamviewer远程服务器</p>\n</blockquote>","more":"<h3 id=\"安装图形化界面\"><a href=\"#安装图形化界面\" class=\"headerlink\" title=\"安装图形化界面\"></a>安装图形化界面</h3><ol>\n<li><p>安装环境</p>\n<!-- ```# 先安装MATE Desktop``` -->\n<p><code>yum groups install &quot;MATE Desktop&quot;</code></p>\n<p><code>安装好MATE Desktop后，再安装X Window System,最好等待上一步安装完成后再执行这一步。</code></p>\n<p><code>yum groups install &quot;X Window System&quot;</code></p>\n<p>​</p>\n</li>\n<li><p>设置默认通过桌面环境启动服务器</p>\n<p><code>systemctl set-default graphical.target</code></p>\n</li>\n<li><p>重启一下服务器然后登陆服务器运营商在线网页就能看到图形化界面了。</p>\n<p><code>reboot</code></p>\n<p>​</p>\n</li>\n</ol>\n<h3 id=\"安装teamviewer\"><a href=\"#安装teamviewer\" class=\"headerlink\" title=\"安装teamviewer\"></a>安装teamviewer</h3><ol>\n<li><p>下载安装包</p>\n<blockquote>\n<p>方法一：从<a href=\"https://www.teamviewer.com/zhcn/download/linux/\" target=\"_blank\" rel=\"external\">官网</a>下载安装包rpm安装包，然后传到服务器。</p>\n<p>方法二：`wget <a href=\"https://download.teamviewer.com/download/teamviewer.i686.rpm\" target=\"_blank\" rel=\"external\">https://download.teamviewer.com/download/teamviewer.i686.rpm</a></p>\n</blockquote>\n</li>\n<li><p>使用yum安装</p>\n<p><code>yum install 包路径</code></p>\n</li>\n<li><p>开启teamviewer</p>\n<p>​  在网页上打开teamviewer，第一次打开会有个协议需要接受，所以在命令行打不开。如果不把图形化界面设置为默认启动方式，关闭网页后teamviewer自动关闭连接。</p>\n</li>\n</ol>"},{"title":"Centos 7.2 安装MySQL及Navicat远程连接","abbrlink":"34edd51d","date":"2016-09-22T12:18:13.000Z","_content":"\n{% cq %}阿里云ESC一个月10个大洋，是腾讯云的10倍。。但是突然相通了，10个大洋不就是一顿饭钱吗，于是速购一台linux。{% endcq %}\n\n<!--more-->\n\n\n\n# 系统版本\n\n```shell\n[root@iZm5eg56n6ff2an1422nazZ ~]# cat /etc/redhat-release \nCentOS Linux release 7.2.1511 (Core)\n```\n\n\n\n# MySQL安装\n\n按照惯例执行以下三句\n\n```shell\nyum install mysql\nyum install mysql-devel\nyum install mysql-server\n```\n\n执行最后一句时会报这样错误\n\n```shell\n[root@iZm5eg56n6ff2an1422nazZ ~]# yum install mysql-server\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirrors.aliyuncs.com\n * epel: mirrors.aliyuncs.com\n * extras: mirrors.aliyuncs.com\n * updates: mirrors.aliyuncs.com\nNo package mysql-server available.\nError: Nothing to do\n```\n\n查资料之后发现Centos 7将MySQL数据库从默认程序列表中（yum源）移除，用mariadb代替了。\n\n## 方法一 ：安装MariaDB\n\n### 安装\n\n**MariaDB**数据库管理系统是[MySQL](https://zh.wikipedia.org/wiki/MySQL)的一个分支，主要由开源社区在维护，采用[GPL](https://zh.wikipedia.org/wiki/GPL)授权许可。开发这个分支的原因之一是：[甲骨文公司](https://zh.wikipedia.org/wiki/%E7%94%B2%E9%AA%A8%E6%96%87%E5%85%AC%E5%8F%B8)收购了MySQL后，有将MySQL[闭源](https://zh.wikipedia.org/wiki/%E9%97%AD%E6%BA%90)的潜在风险，因此社区采用分支的方式来避开这个风险。\n\n```shell\nyum install mariadb-server mariadb\n```\n\nMariaDB数据库相关命令是：\n\nsystemctl start mariadb #启动MariaDB\n\nsystemctl stop mariadb #停止MariaDB\n\nsystemctl restart mariadb #重启MariaDB\n\nsystemctl enable mariadb #设置开机启动\n\n### 开启\n\nsystemctl start mariadb\n\n现在就可以使用了。\n\n### 测试\n\n初次安装MySQL，root账号没有密码。\n\n```shell\n[root@iZm5eg56n6ff2an1422nazZ ~]# mysql -uroot -p\nEnter password: \nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 3\nServer version: 5.5.50-MariaDB MariaDB Server\n\nCopyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\nMariaDB [(none)]> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| test               |\n+--------------------+\n4 rows in set (0.00 sec)\n```\n\n## 方法二\n\n执行以下三句话，通过链接下载安装。\n\n```shell\nwget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm\nrpm -ivh mysql-community-release-el7-5.noarch.rpm\nyum install mysql-community-server\n```\n\n安装之后重启\n\n```\nservice mysqld restart\n```\n\n##设置MySQL密码\n\n\n\n```shell\nmysql>set password for 'root'@localhost =password('newpwd');\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n设置MySQL密码，不用重启。\n\n# 远程连接设置\n\n把在所有数据库的所在表的所有权赋值给位于所有IP地址的root用户。\n\n```shell\nmysql> grant all privileges on *.* to root@'%'identified by 'password';\n```\n\n如果是新用户而不是root，则要先新建用户\n\n```shell\nmysql> create user 'username'@'%' identified by 'password'; \n```\n\n要想在Navicat远程，还需要最后一步，关闭防火墙。\n\n```shell\nsystemctl stop firewalld\n```\n\n否则Navicat会提示\"2003 - Cant connect to MySQL server on 'IP地址'(10060 \"Unknown error\")\"\n\n此时就可以进行远程连接了。\n\n\n\n参考：\n\n[http://www.cnblogs.com/starof/p/4680083.html](http://www.cnblogs.com/starof/p/4680083.html)\n","source":"_posts/centos7-mysql.md","raw":"---\ntitle: Centos 7.2 安装MySQL及Navicat远程连接\ntags:\n  - MySql\n  - Navicat\ncategories: Linux\nabbrlink: 34edd51d\ndate: 2016-09-22 20:18:13\n---\n\n{% cq %}阿里云ESC一个月10个大洋，是腾讯云的10倍。。但是突然相通了，10个大洋不就是一顿饭钱吗，于是速购一台linux。{% endcq %}\n\n<!--more-->\n\n\n\n# 系统版本\n\n```shell\n[root@iZm5eg56n6ff2an1422nazZ ~]# cat /etc/redhat-release \nCentOS Linux release 7.2.1511 (Core)\n```\n\n\n\n# MySQL安装\n\n按照惯例执行以下三句\n\n```shell\nyum install mysql\nyum install mysql-devel\nyum install mysql-server\n```\n\n执行最后一句时会报这样错误\n\n```shell\n[root@iZm5eg56n6ff2an1422nazZ ~]# yum install mysql-server\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirrors.aliyuncs.com\n * epel: mirrors.aliyuncs.com\n * extras: mirrors.aliyuncs.com\n * updates: mirrors.aliyuncs.com\nNo package mysql-server available.\nError: Nothing to do\n```\n\n查资料之后发现Centos 7将MySQL数据库从默认程序列表中（yum源）移除，用mariadb代替了。\n\n## 方法一 ：安装MariaDB\n\n### 安装\n\n**MariaDB**数据库管理系统是[MySQL](https://zh.wikipedia.org/wiki/MySQL)的一个分支，主要由开源社区在维护，采用[GPL](https://zh.wikipedia.org/wiki/GPL)授权许可。开发这个分支的原因之一是：[甲骨文公司](https://zh.wikipedia.org/wiki/%E7%94%B2%E9%AA%A8%E6%96%87%E5%85%AC%E5%8F%B8)收购了MySQL后，有将MySQL[闭源](https://zh.wikipedia.org/wiki/%E9%97%AD%E6%BA%90)的潜在风险，因此社区采用分支的方式来避开这个风险。\n\n```shell\nyum install mariadb-server mariadb\n```\n\nMariaDB数据库相关命令是：\n\nsystemctl start mariadb #启动MariaDB\n\nsystemctl stop mariadb #停止MariaDB\n\nsystemctl restart mariadb #重启MariaDB\n\nsystemctl enable mariadb #设置开机启动\n\n### 开启\n\nsystemctl start mariadb\n\n现在就可以使用了。\n\n### 测试\n\n初次安装MySQL，root账号没有密码。\n\n```shell\n[root@iZm5eg56n6ff2an1422nazZ ~]# mysql -uroot -p\nEnter password: \nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 3\nServer version: 5.5.50-MariaDB MariaDB Server\n\nCopyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\nMariaDB [(none)]> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| test               |\n+--------------------+\n4 rows in set (0.00 sec)\n```\n\n## 方法二\n\n执行以下三句话，通过链接下载安装。\n\n```shell\nwget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm\nrpm -ivh mysql-community-release-el7-5.noarch.rpm\nyum install mysql-community-server\n```\n\n安装之后重启\n\n```\nservice mysqld restart\n```\n\n##设置MySQL密码\n\n\n\n```shell\nmysql>set password for 'root'@localhost =password('newpwd');\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n设置MySQL密码，不用重启。\n\n# 远程连接设置\n\n把在所有数据库的所在表的所有权赋值给位于所有IP地址的root用户。\n\n```shell\nmysql> grant all privileges on *.* to root@'%'identified by 'password';\n```\n\n如果是新用户而不是root，则要先新建用户\n\n```shell\nmysql> create user 'username'@'%' identified by 'password'; \n```\n\n要想在Navicat远程，还需要最后一步，关闭防火墙。\n\n```shell\nsystemctl stop firewalld\n```\n\n否则Navicat会提示\"2003 - Cant connect to MySQL server on 'IP地址'(10060 \"Unknown error\")\"\n\n此时就可以进行远程连接了。\n\n\n\n参考：\n\n[http://www.cnblogs.com/starof/p/4680083.html](http://www.cnblogs.com/starof/p/4680083.html)\n","slug":"centos7-mysql","published":1,"updated":"2017-06-08T12:20:29.287Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih1h000wsv1ffn985f9x","content":"<blockquote class=\"blockquote-center\"><p>阿里云ESC一个月10个大洋，是腾讯云的10倍。。但是突然相通了，10个大洋不就是一顿饭钱吗，于是速购一台linux。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"系统版本\"><a href=\"#系统版本\" class=\"headerlink\" title=\"系统版本\"></a>系统版本</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@iZm5eg56n6ff2an1422nazZ ~]# cat /etc/redhat-release </div><div class=\"line\">CentOS Linux release 7.2.1511 (Core)</div></pre></td></tr></table></figure>\n<h1 id=\"MySQL安装\"><a href=\"#MySQL安装\" class=\"headerlink\" title=\"MySQL安装\"></a>MySQL安装</h1><p>按照惯例执行以下三句</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install mysql</div><div class=\"line\">yum install mysql-devel</div><div class=\"line\">yum install mysql-server</div></pre></td></tr></table></figure>\n<p>执行最后一句时会报这样错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@iZm5eg56n6ff2an1422nazZ ~]# yum install mysql-server</div><div class=\"line\">Loaded plugins: fastestmirror</div><div class=\"line\">Loading mirror speeds from cached hostfile</div><div class=\"line\"> * base: mirrors.aliyuncs.com</div><div class=\"line\"> * epel: mirrors.aliyuncs.com</div><div class=\"line\"> * extras: mirrors.aliyuncs.com</div><div class=\"line\"> * updates: mirrors.aliyuncs.com</div><div class=\"line\">No package mysql-server available.</div><div class=\"line\">Error: Nothing to do</div></pre></td></tr></table></figure>\n<p>查资料之后发现Centos 7将MySQL数据库从默认程序列表中（yum源）移除，用mariadb代替了。</p>\n<h2 id=\"方法一-：安装MariaDB\"><a href=\"#方法一-：安装MariaDB\" class=\"headerlink\" title=\"方法一 ：安装MariaDB\"></a>方法一 ：安装MariaDB</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p><strong>MariaDB</strong>数据库管理系统是<a href=\"https://zh.wikipedia.org/wiki/MySQL\" target=\"_blank\" rel=\"external\">MySQL</a>的一个分支，主要由开源社区在维护，采用<a href=\"https://zh.wikipedia.org/wiki/GPL\" target=\"_blank\" rel=\"external\">GPL</a>授权许可。开发这个分支的原因之一是：<a href=\"https://zh.wikipedia.org/wiki/%E7%94%B2%E9%AA%A8%E6%96%87%E5%85%AC%E5%8F%B8\" target=\"_blank\" rel=\"external\">甲骨文公司</a>收购了MySQL后，有将MySQL<a href=\"https://zh.wikipedia.org/wiki/%E9%97%AD%E6%BA%90\" target=\"_blank\" rel=\"external\">闭源</a>的潜在风险，因此社区采用分支的方式来避开这个风险。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install mariadb-server mariadb</div></pre></td></tr></table></figure>\n<p>MariaDB数据库相关命令是：</p>\n<p>systemctl start mariadb #启动MariaDB</p>\n<p>systemctl stop mariadb #停止MariaDB</p>\n<p>systemctl restart mariadb #重启MariaDB</p>\n<p>systemctl enable mariadb #设置开机启动</p>\n<h3 id=\"开启\"><a href=\"#开启\" class=\"headerlink\" title=\"开启\"></a>开启</h3><p>systemctl start mariadb</p>\n<p>现在就可以使用了。</p>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>初次安装MySQL，root账号没有密码。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@iZm5eg56n6ff2an1422nazZ ~]# mysql -uroot -p</div><div class=\"line\">Enter password: </div><div class=\"line\">Welcome to the MariaDB monitor.  Commands end with ; or \\g.</div><div class=\"line\">Your MariaDB connection id is 3</div><div class=\"line\">Server version: 5.5.50-MariaDB MariaDB Server</div><div class=\"line\"></div><div class=\"line\">Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.</div><div class=\"line\"></div><div class=\"line\">Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.</div><div class=\"line\">MariaDB [(none)]&gt; show databases;</div><div class=\"line\">+--------------------+</div><div class=\"line\">| Database           |</div><div class=\"line\">+--------------------+</div><div class=\"line\">| information_schema |</div><div class=\"line\">| mysql              |</div><div class=\"line\">| performance_schema |</div><div class=\"line\">| test               |</div><div class=\"line\">+--------------------+</div><div class=\"line\">4 rows in set (0.00 sec)</div></pre></td></tr></table></figure>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><p>执行以下三句话，通过链接下载安装。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</div><div class=\"line\">rpm -ivh mysql-community-release-el7-5.noarch.rpm</div><div class=\"line\">yum install mysql-community-server</div></pre></td></tr></table></figure>\n<p>安装之后重启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service mysqld restart</div></pre></td></tr></table></figure>\n<p>##设置MySQL密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">mysql&gt;</span>set password for 'root'@localhost =password('newpwd');</div><div class=\"line\">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure>\n<p>设置MySQL密码，不用重启。</p>\n<h1 id=\"远程连接设置\"><a href=\"#远程连接设置\" class=\"headerlink\" title=\"远程连接设置\"></a>远程连接设置</h1><p>把在所有数据库的所在表的所有权赋值给位于所有IP地址的root用户。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">mysql&gt;</span> grant all privileges on *.* to root@'%'identified by 'password';</div></pre></td></tr></table></figure>\n<p>如果是新用户而不是root，则要先新建用户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">mysql&gt;</span> create user 'username'@'%' identified by 'password';</div></pre></td></tr></table></figure>\n<p>要想在Navicat远程，还需要最后一步，关闭防火墙。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemctl stop firewalld</div></pre></td></tr></table></figure>\n<p>否则Navicat会提示”2003 - Cant connect to MySQL server on ‘IP地址’(10060 “Unknown error”)”</p>\n<p>此时就可以进行远程连接了。</p>\n<p>参考：</p>\n<p><a href=\"http://www.cnblogs.com/starof/p/4680083.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/starof/p/4680083.html</a></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>阿里云ESC一个月10个大洋，是腾讯云的10倍。。但是突然相通了，10个大洋不就是一顿饭钱吗，于是速购一台linux。</p>\n</blockquote>","more":"<h1 id=\"系统版本\"><a href=\"#系统版本\" class=\"headerlink\" title=\"系统版本\"></a>系统版本</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@iZm5eg56n6ff2an1422nazZ ~]# cat /etc/redhat-release </div><div class=\"line\">CentOS Linux release 7.2.1511 (Core)</div></pre></td></tr></table></figure>\n<h1 id=\"MySQL安装\"><a href=\"#MySQL安装\" class=\"headerlink\" title=\"MySQL安装\"></a>MySQL安装</h1><p>按照惯例执行以下三句</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install mysql</div><div class=\"line\">yum install mysql-devel</div><div class=\"line\">yum install mysql-server</div></pre></td></tr></table></figure>\n<p>执行最后一句时会报这样错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@iZm5eg56n6ff2an1422nazZ ~]# yum install mysql-server</div><div class=\"line\">Loaded plugins: fastestmirror</div><div class=\"line\">Loading mirror speeds from cached hostfile</div><div class=\"line\"> * base: mirrors.aliyuncs.com</div><div class=\"line\"> * epel: mirrors.aliyuncs.com</div><div class=\"line\"> * extras: mirrors.aliyuncs.com</div><div class=\"line\"> * updates: mirrors.aliyuncs.com</div><div class=\"line\">No package mysql-server available.</div><div class=\"line\">Error: Nothing to do</div></pre></td></tr></table></figure>\n<p>查资料之后发现Centos 7将MySQL数据库从默认程序列表中（yum源）移除，用mariadb代替了。</p>\n<h2 id=\"方法一-：安装MariaDB\"><a href=\"#方法一-：安装MariaDB\" class=\"headerlink\" title=\"方法一 ：安装MariaDB\"></a>方法一 ：安装MariaDB</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p><strong>MariaDB</strong>数据库管理系统是<a href=\"https://zh.wikipedia.org/wiki/MySQL\" target=\"_blank\" rel=\"external\">MySQL</a>的一个分支，主要由开源社区在维护，采用<a href=\"https://zh.wikipedia.org/wiki/GPL\" target=\"_blank\" rel=\"external\">GPL</a>授权许可。开发这个分支的原因之一是：<a href=\"https://zh.wikipedia.org/wiki/%E7%94%B2%E9%AA%A8%E6%96%87%E5%85%AC%E5%8F%B8\" target=\"_blank\" rel=\"external\">甲骨文公司</a>收购了MySQL后，有将MySQL<a href=\"https://zh.wikipedia.org/wiki/%E9%97%AD%E6%BA%90\" target=\"_blank\" rel=\"external\">闭源</a>的潜在风险，因此社区采用分支的方式来避开这个风险。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install mariadb-server mariadb</div></pre></td></tr></table></figure>\n<p>MariaDB数据库相关命令是：</p>\n<p>systemctl start mariadb #启动MariaDB</p>\n<p>systemctl stop mariadb #停止MariaDB</p>\n<p>systemctl restart mariadb #重启MariaDB</p>\n<p>systemctl enable mariadb #设置开机启动</p>\n<h3 id=\"开启\"><a href=\"#开启\" class=\"headerlink\" title=\"开启\"></a>开启</h3><p>systemctl start mariadb</p>\n<p>现在就可以使用了。</p>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>初次安装MySQL，root账号没有密码。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@iZm5eg56n6ff2an1422nazZ ~]# mysql -uroot -p</div><div class=\"line\">Enter password: </div><div class=\"line\">Welcome to the MariaDB monitor.  Commands end with ; or \\g.</div><div class=\"line\">Your MariaDB connection id is 3</div><div class=\"line\">Server version: 5.5.50-MariaDB MariaDB Server</div><div class=\"line\"></div><div class=\"line\">Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.</div><div class=\"line\"></div><div class=\"line\">Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.</div><div class=\"line\">MariaDB [(none)]&gt; show databases;</div><div class=\"line\">+--------------------+</div><div class=\"line\">| Database           |</div><div class=\"line\">+--------------------+</div><div class=\"line\">| information_schema |</div><div class=\"line\">| mysql              |</div><div class=\"line\">| performance_schema |</div><div class=\"line\">| test               |</div><div class=\"line\">+--------------------+</div><div class=\"line\">4 rows in set (0.00 sec)</div></pre></td></tr></table></figure>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><p>执行以下三句话，通过链接下载安装。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</div><div class=\"line\">rpm -ivh mysql-community-release-el7-5.noarch.rpm</div><div class=\"line\">yum install mysql-community-server</div></pre></td></tr></table></figure>\n<p>安装之后重启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service mysqld restart</div></pre></td></tr></table></figure>\n<p>##设置MySQL密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">mysql&gt;</span>set password for 'root'@localhost =password('newpwd');</div><div class=\"line\">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure>\n<p>设置MySQL密码，不用重启。</p>\n<h1 id=\"远程连接设置\"><a href=\"#远程连接设置\" class=\"headerlink\" title=\"远程连接设置\"></a>远程连接设置</h1><p>把在所有数据库的所在表的所有权赋值给位于所有IP地址的root用户。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">mysql&gt;</span> grant all privileges on *.* to root@'%'identified by 'password';</div></pre></td></tr></table></figure>\n<p>如果是新用户而不是root，则要先新建用户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">mysql&gt;</span> create user 'username'@'%' identified by 'password';</div></pre></td></tr></table></figure>\n<p>要想在Navicat远程，还需要最后一步，关闭防火墙。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemctl stop firewalld</div></pre></td></tr></table></figure>\n<p>否则Navicat会提示”2003 - Cant connect to MySQL server on ‘IP地址’(10060 “Unknown error”)”</p>\n<p>此时就可以进行远程连接了。</p>\n<p>参考：</p>\n<p><a href=\"http://www.cnblogs.com/starof/p/4680083.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/starof/p/4680083.html</a></p>"},{"title":"修改 Ubuntu 计算机名","date":"2017-10-30T12:39:35.000Z","_content":"\n{% cq %}sudo vi /etc/hostname{% endcq %}\n\n<!-- more -->\n\n### 查看计算机名称\n* windows ctrl + alt + t 打开终端，\"@\"后为主机名\n* 终端输入 `hostname` 或 `uname -n` ，查看主机名\n\n### 修改临时计算机名\n终端下输入 `sudo hostname Ubuntu-Temp`\n终端\"@\"后不会立即显示，但是用 `hostname` 查看或重新打开一个终端会生效，这种方法只能临时修改计算机名，重启计算机将恢复，但是登出用户不会失效。\n\n### 修改永久计算机名\n计算机名存放在 `/etc/hostname` 通过 `sudo vi /etc/hostname` 编辑器修改完保存即可，Ubuntu 自带的 vi 是不完整的，可能一直是输入命令模式，可以通过 `sudo apt-get install vim` 更新 vim 。\n\n\n### 修改完名的坑\n执行 `sudo` 命令时，可能会提示 `sudo: 无法解析主机：Kiuber-Ubuntu` \n原因是 `sudo` 其实是访问 `/etc/hosts` 127.0.0.1 的值，平时一般省略了，查看 hosts 文件发现还是之前计算机名，但是 hosts 文件修改需要用到 `sudo` ，果断查看 `sudo` 用法，果真有带 host 参数的命令。\n执行 `sudo -h 原计算机名 vim /etc/hosts` 改为新计算机名，保存之后以后再用 `sudo` 又可以开心的省略 `host` 了。\n\n","source":"_posts/change-ubuntu-computer-name.md","raw":"---\ntitle: 修改 Ubuntu 计算机名\ntags:\n  - Linux\n  - Ubuntu\n  - hostname\ndate: 2017-10-30 20:39:35\ncategories: Linux\n---\n\n{% cq %}sudo vi /etc/hostname{% endcq %}\n\n<!-- more -->\n\n### 查看计算机名称\n* windows ctrl + alt + t 打开终端，\"@\"后为主机名\n* 终端输入 `hostname` 或 `uname -n` ，查看主机名\n\n### 修改临时计算机名\n终端下输入 `sudo hostname Ubuntu-Temp`\n终端\"@\"后不会立即显示，但是用 `hostname` 查看或重新打开一个终端会生效，这种方法只能临时修改计算机名，重启计算机将恢复，但是登出用户不会失效。\n\n### 修改永久计算机名\n计算机名存放在 `/etc/hostname` 通过 `sudo vi /etc/hostname` 编辑器修改完保存即可，Ubuntu 自带的 vi 是不完整的，可能一直是输入命令模式，可以通过 `sudo apt-get install vim` 更新 vim 。\n\n\n### 修改完名的坑\n执行 `sudo` 命令时，可能会提示 `sudo: 无法解析主机：Kiuber-Ubuntu` \n原因是 `sudo` 其实是访问 `/etc/hosts` 127.0.0.1 的值，平时一般省略了，查看 hosts 文件发现还是之前计算机名，但是 hosts 文件修改需要用到 `sudo` ，果断查看 `sudo` 用法，果真有带 host 参数的命令。\n执行 `sudo -h 原计算机名 vim /etc/hosts` 改为新计算机名，保存之后以后再用 `sudo` 又可以开心的省略 `host` 了。\n\n","slug":"change-ubuntu-computer-name","published":1,"updated":"2017-10-31T06:37:06.216Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih1k000zsv1fzo50oc5i","content":"<blockquote class=\"blockquote-center\"><p>sudo vi /etc/hostname</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"查看计算机名称\"><a href=\"#查看计算机名称\" class=\"headerlink\" title=\"查看计算机名称\"></a>查看计算机名称</h3><ul>\n<li>windows ctrl + alt + t 打开终端，”@”后为主机名</li>\n<li>终端输入 <code>hostname</code> 或 <code>uname -n</code> ，查看主机名</li>\n</ul>\n<h3 id=\"修改临时计算机名\"><a href=\"#修改临时计算机名\" class=\"headerlink\" title=\"修改临时计算机名\"></a>修改临时计算机名</h3><p>终端下输入 <code>sudo hostname Ubuntu-Temp</code><br>终端”@”后不会立即显示，但是用 <code>hostname</code> 查看或重新打开一个终端会生效，这种方法只能临时修改计算机名，重启计算机将恢复，但是登出用户不会失效。</p>\n<h3 id=\"修改永久计算机名\"><a href=\"#修改永久计算机名\" class=\"headerlink\" title=\"修改永久计算机名\"></a>修改永久计算机名</h3><p>计算机名存放在 <code>/etc/hostname</code> 通过 <code>sudo vi /etc/hostname</code> 编辑器修改完保存即可，Ubuntu 自带的 vi 是不完整的，可能一直是输入命令模式，可以通过 <code>sudo apt-get install vim</code> 更新 vim 。</p>\n<h3 id=\"修改完名的坑\"><a href=\"#修改完名的坑\" class=\"headerlink\" title=\"修改完名的坑\"></a>修改完名的坑</h3><p>执行 <code>sudo</code> 命令时，可能会提示 <code>sudo: 无法解析主机：Kiuber-Ubuntu</code><br>原因是 <code>sudo</code> 其实是访问 <code>/etc/hosts</code> 127.0.0.1 的值，平时一般省略了，查看 hosts 文件发现还是之前计算机名，但是 hosts 文件修改需要用到 <code>sudo</code> ，果断查看 <code>sudo</code> 用法，果真有带 host 参数的命令。<br>执行 <code>sudo -h 原计算机名 vim /etc/hosts</code> 改为新计算机名，保存之后以后再用 <code>sudo</code> 又可以开心的省略 <code>host</code> 了。</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>sudo vi /etc/hostname</p>\n</blockquote>","more":"<h3 id=\"查看计算机名称\"><a href=\"#查看计算机名称\" class=\"headerlink\" title=\"查看计算机名称\"></a>查看计算机名称</h3><ul>\n<li>windows ctrl + alt + t 打开终端，”@”后为主机名</li>\n<li>终端输入 <code>hostname</code> 或 <code>uname -n</code> ，查看主机名</li>\n</ul>\n<h3 id=\"修改临时计算机名\"><a href=\"#修改临时计算机名\" class=\"headerlink\" title=\"修改临时计算机名\"></a>修改临时计算机名</h3><p>终端下输入 <code>sudo hostname Ubuntu-Temp</code><br>终端”@”后不会立即显示，但是用 <code>hostname</code> 查看或重新打开一个终端会生效，这种方法只能临时修改计算机名，重启计算机将恢复，但是登出用户不会失效。</p>\n<h3 id=\"修改永久计算机名\"><a href=\"#修改永久计算机名\" class=\"headerlink\" title=\"修改永久计算机名\"></a>修改永久计算机名</h3><p>计算机名存放在 <code>/etc/hostname</code> 通过 <code>sudo vi /etc/hostname</code> 编辑器修改完保存即可，Ubuntu 自带的 vi 是不完整的，可能一直是输入命令模式，可以通过 <code>sudo apt-get install vim</code> 更新 vim 。</p>\n<h3 id=\"修改完名的坑\"><a href=\"#修改完名的坑\" class=\"headerlink\" title=\"修改完名的坑\"></a>修改完名的坑</h3><p>执行 <code>sudo</code> 命令时，可能会提示 <code>sudo: 无法解析主机：Kiuber-Ubuntu</code><br>原因是 <code>sudo</code> 其实是访问 <code>/etc/hosts</code> 127.0.0.1 的值，平时一般省略了，查看 hosts 文件发现还是之前计算机名，但是 hosts 文件修改需要用到 <code>sudo</code> ，果断查看 <code>sudo</code> 用法，果真有带 host 参数的命令。<br>执行 <code>sudo -h 原计算机名 vim /etc/hosts</code> 改为新计算机名，保存之后以后再用 <code>sudo</code> 又可以开心的省略 <code>host</code> 了。</p>"},{"title":"电脑方面的快捷键","abbrlink":"1834f5b6","date":"2016-04-24T04:45:47.000Z","_content":"\n{% cq %}汇总一些实用的快捷键，不断更新中~{% endcq %}\n\n<!--more-->\n### Windows键+\n`B` 选中桌面右下方工具栏\n`D` 显示桌面\n`E` 打开我的电脑\n`G` win10 录制游戏\n`H` win10 共享\n`I` win10 设置\n`K` win10 链接\n`L` 锁定用户\n`M` 最小化所有窗口\n`P` win10 投影\n`Q` win10 小娜\n`R` 运行\n`S` win10 小娜\n`T` 循环切换任务栏上的程序（win7、win8）\n`U` 轻松使用设置中心\n`Shift` + `Windows键` + `数字` 启动锁定到任务栏中的由该数字所表示位置处的程序的新实例\n`Alt` + `Windows键` + `数字` 打开锁定到任务栏中的由该数字所表示位置处的程序的跳转列表 \n`数字（非小键盘）` 启动锁定到任务栏中的由该数字所表示位置处的程序。如果该程序已在运行，则切换到该程序\n`Tab` 使用 Aero Flip 3-D 循环切换任务栏上的程\n`向上键` 最大化窗口\n`向左键` 将窗口最大化到屏幕的左侧\n`向右键` 将窗口最大化到屏幕的右侧\n`向下键` 最小化窗口\n`Home` 最小化除活动窗口之外的所有窗口（win7）\n`Shift` + `向上键` 将窗口拉伸到屏幕的顶部和底部。\n`X` 打开 Windows 移动中心","source":"_posts/computer-shortcut-key.md","raw":"---\ntitle: 电脑方面的快捷键\ntags:\n  - 快捷键\ncategories: 电脑\nabbrlink: 1834f5b6\ndate: 2016-04-24 12:45:47\n---\n\n{% cq %}汇总一些实用的快捷键，不断更新中~{% endcq %}\n\n<!--more-->\n### Windows键+\n`B` 选中桌面右下方工具栏\n`D` 显示桌面\n`E` 打开我的电脑\n`G` win10 录制游戏\n`H` win10 共享\n`I` win10 设置\n`K` win10 链接\n`L` 锁定用户\n`M` 最小化所有窗口\n`P` win10 投影\n`Q` win10 小娜\n`R` 运行\n`S` win10 小娜\n`T` 循环切换任务栏上的程序（win7、win8）\n`U` 轻松使用设置中心\n`Shift` + `Windows键` + `数字` 启动锁定到任务栏中的由该数字所表示位置处的程序的新实例\n`Alt` + `Windows键` + `数字` 打开锁定到任务栏中的由该数字所表示位置处的程序的跳转列表 \n`数字（非小键盘）` 启动锁定到任务栏中的由该数字所表示位置处的程序。如果该程序已在运行，则切换到该程序\n`Tab` 使用 Aero Flip 3-D 循环切换任务栏上的程\n`向上键` 最大化窗口\n`向左键` 将窗口最大化到屏幕的左侧\n`向右键` 将窗口最大化到屏幕的右侧\n`向下键` 最小化窗口\n`Home` 最小化除活动窗口之外的所有窗口（win7）\n`Shift` + `向上键` 将窗口拉伸到屏幕的顶部和底部。\n`X` 打开 Windows 移动中心","slug":"computer-shortcut-key","published":1,"updated":"2017-06-08T12:20:29.292Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih1n0012sv1fogbuxwm5","content":"<blockquote class=\"blockquote-center\"><p>汇总一些实用的快捷键，不断更新中~</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"Windows键\"><a href=\"#Windows键\" class=\"headerlink\" title=\"Windows键+\"></a>Windows键+</h3><p><code>B</code> 选中桌面右下方工具栏<br><code>D</code> 显示桌面<br><code>E</code> 打开我的电脑<br><code>G</code> win10 录制游戏<br><code>H</code> win10 共享<br><code>I</code> win10 设置<br><code>K</code> win10 链接<br><code>L</code> 锁定用户<br><code>M</code> 最小化所有窗口<br><code>P</code> win10 投影<br><code>Q</code> win10 小娜<br><code>R</code> 运行<br><code>S</code> win10 小娜<br><code>T</code> 循环切换任务栏上的程序（win7、win8）<br><code>U</code> 轻松使用设置中心<br><code>Shift</code> + <code>Windows键</code> + <code>数字</code> 启动锁定到任务栏中的由该数字所表示位置处的程序的新实例<br><code>Alt</code> + <code>Windows键</code> + <code>数字</code> 打开锁定到任务栏中的由该数字所表示位置处的程序的跳转列表<br><code>数字（非小键盘）</code> 启动锁定到任务栏中的由该数字所表示位置处的程序。如果该程序已在运行，则切换到该程序<br><code>Tab</code> 使用 Aero Flip 3-D 循环切换任务栏上的程<br><code>向上键</code> 最大化窗口<br><code>向左键</code> 将窗口最大化到屏幕的左侧<br><code>向右键</code> 将窗口最大化到屏幕的右侧<br><code>向下键</code> 最小化窗口<br><code>Home</code> 最小化除活动窗口之外的所有窗口（win7）<br><code>Shift</code> + <code>向上键</code> 将窗口拉伸到屏幕的顶部和底部。<br><code>X</code> 打开 Windows 移动中心</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>汇总一些实用的快捷键，不断更新中~</p>\n</blockquote>","more":"<h3 id=\"Windows键\"><a href=\"#Windows键\" class=\"headerlink\" title=\"Windows键+\"></a>Windows键+</h3><p><code>B</code> 选中桌面右下方工具栏<br><code>D</code> 显示桌面<br><code>E</code> 打开我的电脑<br><code>G</code> win10 录制游戏<br><code>H</code> win10 共享<br><code>I</code> win10 设置<br><code>K</code> win10 链接<br><code>L</code> 锁定用户<br><code>M</code> 最小化所有窗口<br><code>P</code> win10 投影<br><code>Q</code> win10 小娜<br><code>R</code> 运行<br><code>S</code> win10 小娜<br><code>T</code> 循环切换任务栏上的程序（win7、win8）<br><code>U</code> 轻松使用设置中心<br><code>Shift</code> + <code>Windows键</code> + <code>数字</code> 启动锁定到任务栏中的由该数字所表示位置处的程序的新实例<br><code>Alt</code> + <code>Windows键</code> + <code>数字</code> 打开锁定到任务栏中的由该数字所表示位置处的程序的跳转列表<br><code>数字（非小键盘）</code> 启动锁定到任务栏中的由该数字所表示位置处的程序。如果该程序已在运行，则切换到该程序<br><code>Tab</code> 使用 Aero Flip 3-D 循环切换任务栏上的程<br><code>向上键</code> 最大化窗口<br><code>向左键</code> 将窗口最大化到屏幕的左侧<br><code>向右键</code> 将窗口最大化到屏幕的右侧<br><code>向下键</code> 最小化窗口<br><code>Home</code> 最小化除活动窗口之外的所有窗口（win7）<br><code>Shift</code> + <code>向上键</code> 将窗口拉伸到屏幕的顶部和底部。<br><code>X</code> 打开 Windows 移动中心</p>"},{"title":"物品竞拍流程","abbrlink":"3b3dbca9","date":"2016-09-01T15:51:20.000Z","_content":"\n{% cq %}最近这一个月一直在做齐鲁软件设计大赛的项目，参赛题目是智能手机程序设计，今晚终于有时间有心情静下来写写物品竞拍流程所遇到的坑。其实用了三天空闲时间写完的。=.={% endcq %}\n\n其实用了三天空闲时间写完的。=.=\n\n<!--more-->\n\n\n## 具体的业务流程\n\nA用户发起物品 -->倒计时开始-->其他用户交保证金-->开始竞拍出价-->五分钟内不能出价-->倒计时结束-->价高者胜出-->生成订单-->胜出者支付-->A用户发快递-->胜出者接收快递-->胜出者确认收货\n\n\n\n## 具体分析\n\n其中有7部分是主要的，看似复杂其实理清思路之后就是敲代码了。由于我们项目的数据是用的Bmob的，但是对于较大型的项目用第三方的平台确实是省了些硬件上的成本，但是从反面来说肯定也会增加代码的行数，毕竟用第三方的数据库不会由我们完全自定义。就这样数据分为两部分，文件数据及大部分数据保存在Bmob，一部分保存在自己的服务器。\n\n\n\n> 为什么要自己搭服务器？\n\n原因就是在业务流程上，当倒计时结束后既要将保证金退回，而且还要生成新的订单，用第三方的肯定实现不了服务器主动定时做一件事。\n\n> 服务器系统怎样实现定时主动做一件事？（三种方式整理于网络）\n\n+ ###### 在WebService中开启线程\n\n+ ###### 利用服务器系统计划任务\n\n+ ###### 利用数据库事件实现\n\n\n\n## 三种方式\n\n### 1.在WebService中开启线程\n\n#### 在查找众多关于C#线程资料之后，有三种方法。#\n\n+ Thread\n+ Timer\n+ Thread包下的Timer\n\n三种方式中最后一种方式比较稳定，然后我将写好的WebService发布到服务器进行时间稳定性测试，结果发现最后一种5分钟内可以实现，40分钟将不能实现功能，因为业务需求中时间段最小还是6h，所以就没测试别的时间段。（PS：服务器系统参数 1G运内，1核，50G硬盘，只说参数不打广告 ): ）\n\n\n\n### 2.利用操作系统（Windows）计划任务\n\n计划任务程序位置： 控制面板-->系统和安全-->管理工具-->计划任务程序\n\n桌面操作系统中有三种功能，分别是启动程序、~~发送电子邮件~~及~~显示消息~~。\n\n\n\n### 3.利用数据库事件实现\n\n#### 准备： mysql5.5（5.1之前无事件功能）VS xxxx Navicat11\n\nNavicat这个软件是数据库可视化工具，对于SQL语句基础不怎么好的，软件中的SQL预览可以帮助你。\n\n#### 思路\n\nWebService\t-->\tMysql Event\t-->\tMysql Produce\t-->\tSQL Execute\n\n#### 连接数据库\n\n```c#\npublic class DBHelper{\n\tpublic static MySqlConnection ConnDB()\n        {\n            String mysqlStr = \"Database=Commonweal;Data Source=127.0.0.1;User Id=root;Password=root;pooling=false;CharSet=utf8;port=3306;Allow User Variables=True;\";\n            MySqlConnection conn = new MySqlConnection(mysqlStr);\n            conn.Open();\n            return conn;\n        }\n}\n```\n\n其中，当你写的要执行的SQL语句中包含\"@\"会被C#当为参数化进行SQL语句组装，防止SQL语句注入。`Data Source=127.0.0.1`值也可以填服务器运营商提供的外网IP，还需要在Mysql新建一个用户，设置用户名、密码，为了安全最好设置访问服务器的具体IP。这样的话WebService在本地测试就行，测试完成之后发布到服务器就行了，很方便的。\n\n#### 执行SQL语句\n\n```C#\n  string sql = @\"insert into Good(G_ID, G_StartTime, G_EndTime, G_Status) values('\" + ObjectId + @\"', '\" + NowTime + @\"', '\" + EndTime + @\"', '1');\n                CREATE EVENT `A_\" + NowTime + r.Next(10, 100) + @\"`\n                ON SCHEDULE AT '\" + EndTime + @\"'\n                ON COMPLETION NOT PRESERVE\n                ENABLE\n                DO\n                CALL Pro_EndTime('\" + ObjectId + @\"');\n\n                CREATE EVENT `B_\" + NowTime + r.Next(10, 100) + @\"`\n                ON SCHEDULE AT '\" + EndTime2Hours + @\"'\n                ON COMPLETION NOT PRESERVE\n                ENABLE\n                DO\n                CALL Pro_EndTime2Hours('\" + ObjectId + @\"');;\n                \";\n                DBHelper.ExecuteSqlNoQuery(sql);\n\n```\n```C#\n\tpublic class DBHelper{      \n \t\t public static void ExecuteSqlNoQuery(string sql)\n        \t{\n              MySqlConnection conn = ConnDB();\n              MySqlCommand cmd = new MySqlCommand(sql, conn);\n              cmd.ExecuteNonQuery();\n              conn.Close();\n       \t\t}\n    }\n```\n\n其中sql中@是转义不报错。\n\n#### SQL中创建事件\n\n##### 先说下刚开始的一种思路所带来的坑\n\n**思路**  WebService-->Mysql事件-->事件中的多条Sql语句-->复杂的功能实现\n\n用这种方法，在事件下要写很多sql语句，如下代码块，在查找众多国内外网站之后想要在事件里执行多条语句需要在多条sql语句最前面和最后面分别加**BEGIN和END**，而且还要在事件最前端和最后端加入delimiter $$和$$ 作为界限符，这样看来既像存储过程然而也不完全是存储过程。但是在Navicat中不会报错，然后我就天真的以为完成了，但是将代码完全复制到WebService，将一些参数拼接起来，执行后，报代码错误。。。。\n\n```mysql\n \t\t\t\tdelimiter $$\n\t\t\t\tCREATE EVENT `事件名`\n                ON SCHEDULE AT '时间点'\n                ON COMPLETION NOT PRESERVE\n                ENABLE\n                DO\n\t\t\t\tBEGIN\n                sql1;\n                sql2\n                sql3;\n                ...;\n\t\t\t\tEND;\n\t\t\t\t$$\n```\n\n##### 另辟蹊径\n\nWebService-->Mysql事件-->事件调用存储过程-->复杂的功能实现\n\n###### 坑1：\n\n新建存储过程-->添加存储过程参数，参数类型长度不会自动指定，而且也没有要填写参数长度的\"()\"，然后就一直报错。\n\n###### 坑2:\n\n执行存储过程，当有varchar类型一定要加单引号！！\n\n\n\n###### WebService\n\n```c#\nstring sql = @\"CREATE EVENT `A_\" + NowTime + r.Next(10, 100) + @\"`\n                ON SCHEDULE AT '\" + EndTime + @\"'\n                ON COMPLETION NOT PRESERVE\n                ENABLE\n                DO\n                CALL Pro_Test('\" + ObjectId + @\"');\n\t\t\t\t\";\n```\n\n###### Mysql\n\n+ 事件\n\n```mysql\nCALL Pro_Test('IltR111A113')\n```\n\n+ 存储过程\n\n```mysql\nCREATE DEFINER = CURRENT_USER PROCEDURE `NewProc`(IN `id` varchar(20))\nBEGIN\n\tUPDATE good_order\nSET O_Status = '0'\nWHERE\n\tO_ID = Good_ID;\nEND;\n```\n\n\n\n##### 小知识\n\n###### Mysql\n\n+ 查看当前是否已开启事件调度器\n\n\n```mysql\nSHOW VARIABLES LIKE 'event_scheduler'\n```\n\n+ 开启事件\n\n```mysql\nSET GLOBAL event_scheduler = 1; \n```\n\n","source":"_posts/countdown-mysql.md","raw":"---\ntitle: 物品竞拍流程\ntags:\n  - 拍卖\ncategories: Android\nabbrlink: 3b3dbca9\ndate: 2016-09-01 23:51:20\n---\n\n{% cq %}最近这一个月一直在做齐鲁软件设计大赛的项目，参赛题目是智能手机程序设计，今晚终于有时间有心情静下来写写物品竞拍流程所遇到的坑。其实用了三天空闲时间写完的。=.={% endcq %}\n\n其实用了三天空闲时间写完的。=.=\n\n<!--more-->\n\n\n## 具体的业务流程\n\nA用户发起物品 -->倒计时开始-->其他用户交保证金-->开始竞拍出价-->五分钟内不能出价-->倒计时结束-->价高者胜出-->生成订单-->胜出者支付-->A用户发快递-->胜出者接收快递-->胜出者确认收货\n\n\n\n## 具体分析\n\n其中有7部分是主要的，看似复杂其实理清思路之后就是敲代码了。由于我们项目的数据是用的Bmob的，但是对于较大型的项目用第三方的平台确实是省了些硬件上的成本，但是从反面来说肯定也会增加代码的行数，毕竟用第三方的数据库不会由我们完全自定义。就这样数据分为两部分，文件数据及大部分数据保存在Bmob，一部分保存在自己的服务器。\n\n\n\n> 为什么要自己搭服务器？\n\n原因就是在业务流程上，当倒计时结束后既要将保证金退回，而且还要生成新的订单，用第三方的肯定实现不了服务器主动定时做一件事。\n\n> 服务器系统怎样实现定时主动做一件事？（三种方式整理于网络）\n\n+ ###### 在WebService中开启线程\n\n+ ###### 利用服务器系统计划任务\n\n+ ###### 利用数据库事件实现\n\n\n\n## 三种方式\n\n### 1.在WebService中开启线程\n\n#### 在查找众多关于C#线程资料之后，有三种方法。#\n\n+ Thread\n+ Timer\n+ Thread包下的Timer\n\n三种方式中最后一种方式比较稳定，然后我将写好的WebService发布到服务器进行时间稳定性测试，结果发现最后一种5分钟内可以实现，40分钟将不能实现功能，因为业务需求中时间段最小还是6h，所以就没测试别的时间段。（PS：服务器系统参数 1G运内，1核，50G硬盘，只说参数不打广告 ): ）\n\n\n\n### 2.利用操作系统（Windows）计划任务\n\n计划任务程序位置： 控制面板-->系统和安全-->管理工具-->计划任务程序\n\n桌面操作系统中有三种功能，分别是启动程序、~~发送电子邮件~~及~~显示消息~~。\n\n\n\n### 3.利用数据库事件实现\n\n#### 准备： mysql5.5（5.1之前无事件功能）VS xxxx Navicat11\n\nNavicat这个软件是数据库可视化工具，对于SQL语句基础不怎么好的，软件中的SQL预览可以帮助你。\n\n#### 思路\n\nWebService\t-->\tMysql Event\t-->\tMysql Produce\t-->\tSQL Execute\n\n#### 连接数据库\n\n```c#\npublic class DBHelper{\n\tpublic static MySqlConnection ConnDB()\n        {\n            String mysqlStr = \"Database=Commonweal;Data Source=127.0.0.1;User Id=root;Password=root;pooling=false;CharSet=utf8;port=3306;Allow User Variables=True;\";\n            MySqlConnection conn = new MySqlConnection(mysqlStr);\n            conn.Open();\n            return conn;\n        }\n}\n```\n\n其中，当你写的要执行的SQL语句中包含\"@\"会被C#当为参数化进行SQL语句组装，防止SQL语句注入。`Data Source=127.0.0.1`值也可以填服务器运营商提供的外网IP，还需要在Mysql新建一个用户，设置用户名、密码，为了安全最好设置访问服务器的具体IP。这样的话WebService在本地测试就行，测试完成之后发布到服务器就行了，很方便的。\n\n#### 执行SQL语句\n\n```C#\n  string sql = @\"insert into Good(G_ID, G_StartTime, G_EndTime, G_Status) values('\" + ObjectId + @\"', '\" + NowTime + @\"', '\" + EndTime + @\"', '1');\n                CREATE EVENT `A_\" + NowTime + r.Next(10, 100) + @\"`\n                ON SCHEDULE AT '\" + EndTime + @\"'\n                ON COMPLETION NOT PRESERVE\n                ENABLE\n                DO\n                CALL Pro_EndTime('\" + ObjectId + @\"');\n\n                CREATE EVENT `B_\" + NowTime + r.Next(10, 100) + @\"`\n                ON SCHEDULE AT '\" + EndTime2Hours + @\"'\n                ON COMPLETION NOT PRESERVE\n                ENABLE\n                DO\n                CALL Pro_EndTime2Hours('\" + ObjectId + @\"');;\n                \";\n                DBHelper.ExecuteSqlNoQuery(sql);\n\n```\n```C#\n\tpublic class DBHelper{      \n \t\t public static void ExecuteSqlNoQuery(string sql)\n        \t{\n              MySqlConnection conn = ConnDB();\n              MySqlCommand cmd = new MySqlCommand(sql, conn);\n              cmd.ExecuteNonQuery();\n              conn.Close();\n       \t\t}\n    }\n```\n\n其中sql中@是转义不报错。\n\n#### SQL中创建事件\n\n##### 先说下刚开始的一种思路所带来的坑\n\n**思路**  WebService-->Mysql事件-->事件中的多条Sql语句-->复杂的功能实现\n\n用这种方法，在事件下要写很多sql语句，如下代码块，在查找众多国内外网站之后想要在事件里执行多条语句需要在多条sql语句最前面和最后面分别加**BEGIN和END**，而且还要在事件最前端和最后端加入delimiter $$和$$ 作为界限符，这样看来既像存储过程然而也不完全是存储过程。但是在Navicat中不会报错，然后我就天真的以为完成了，但是将代码完全复制到WebService，将一些参数拼接起来，执行后，报代码错误。。。。\n\n```mysql\n \t\t\t\tdelimiter $$\n\t\t\t\tCREATE EVENT `事件名`\n                ON SCHEDULE AT '时间点'\n                ON COMPLETION NOT PRESERVE\n                ENABLE\n                DO\n\t\t\t\tBEGIN\n                sql1;\n                sql2\n                sql3;\n                ...;\n\t\t\t\tEND;\n\t\t\t\t$$\n```\n\n##### 另辟蹊径\n\nWebService-->Mysql事件-->事件调用存储过程-->复杂的功能实现\n\n###### 坑1：\n\n新建存储过程-->添加存储过程参数，参数类型长度不会自动指定，而且也没有要填写参数长度的\"()\"，然后就一直报错。\n\n###### 坑2:\n\n执行存储过程，当有varchar类型一定要加单引号！！\n\n\n\n###### WebService\n\n```c#\nstring sql = @\"CREATE EVENT `A_\" + NowTime + r.Next(10, 100) + @\"`\n                ON SCHEDULE AT '\" + EndTime + @\"'\n                ON COMPLETION NOT PRESERVE\n                ENABLE\n                DO\n                CALL Pro_Test('\" + ObjectId + @\"');\n\t\t\t\t\";\n```\n\n###### Mysql\n\n+ 事件\n\n```mysql\nCALL Pro_Test('IltR111A113')\n```\n\n+ 存储过程\n\n```mysql\nCREATE DEFINER = CURRENT_USER PROCEDURE `NewProc`(IN `id` varchar(20))\nBEGIN\n\tUPDATE good_order\nSET O_Status = '0'\nWHERE\n\tO_ID = Good_ID;\nEND;\n```\n\n\n\n##### 小知识\n\n###### Mysql\n\n+ 查看当前是否已开启事件调度器\n\n\n```mysql\nSHOW VARIABLES LIKE 'event_scheduler'\n```\n\n+ 开启事件\n\n```mysql\nSET GLOBAL event_scheduler = 1; \n```\n\n","slug":"countdown-mysql","published":1,"updated":"2017-06-08T12:20:29.288Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih1q0016sv1fsgxz6zok","content":"<blockquote class=\"blockquote-center\"><p>最近这一个月一直在做齐鲁软件设计大赛的项目，参赛题目是智能手机程序设计，今晚终于有时间有心情静下来写写物品竞拍流程所遇到的坑。其实用了三天空闲时间写完的。=.=</p>\n</blockquote>\n<p>其实用了三天空闲时间写完的。=.=</p>\n<a id=\"more\"></a>\n<h2 id=\"具体的业务流程\"><a href=\"#具体的业务流程\" class=\"headerlink\" title=\"具体的业务流程\"></a>具体的业务流程</h2><p>A用户发起物品 –&gt;倒计时开始–&gt;其他用户交保证金–&gt;开始竞拍出价–&gt;五分钟内不能出价–&gt;倒计时结束–&gt;价高者胜出–&gt;生成订单–&gt;胜出者支付–&gt;A用户发快递–&gt;胜出者接收快递–&gt;胜出者确认收货</p>\n<h2 id=\"具体分析\"><a href=\"#具体分析\" class=\"headerlink\" title=\"具体分析\"></a>具体分析</h2><p>其中有7部分是主要的，看似复杂其实理清思路之后就是敲代码了。由于我们项目的数据是用的Bmob的，但是对于较大型的项目用第三方的平台确实是省了些硬件上的成本，但是从反面来说肯定也会增加代码的行数，毕竟用第三方的数据库不会由我们完全自定义。就这样数据分为两部分，文件数据及大部分数据保存在Bmob，一部分保存在自己的服务器。</p>\n<blockquote>\n<p>为什么要自己搭服务器？</p>\n</blockquote>\n<p>原因就是在业务流程上，当倒计时结束后既要将保证金退回，而且还要生成新的订单，用第三方的肯定实现不了服务器主动定时做一件事。</p>\n<blockquote>\n<p>服务器系统怎样实现定时主动做一件事？（三种方式整理于网络）</p>\n</blockquote>\n<ul>\n<li><h6 id=\"在WebService中开启线程\"><a href=\"#在WebService中开启线程\" class=\"headerlink\" title=\"在WebService中开启线程\"></a>在WebService中开启线程</h6></li>\n<li><h6 id=\"利用服务器系统计划任务\"><a href=\"#利用服务器系统计划任务\" class=\"headerlink\" title=\"利用服务器系统计划任务\"></a>利用服务器系统计划任务</h6></li>\n<li><h6 id=\"利用数据库事件实现\"><a href=\"#利用数据库事件实现\" class=\"headerlink\" title=\"利用数据库事件实现\"></a>利用数据库事件实现</h6></li>\n</ul>\n<h2 id=\"三种方式\"><a href=\"#三种方式\" class=\"headerlink\" title=\"三种方式\"></a>三种方式</h2><h3 id=\"1-在WebService中开启线程\"><a href=\"#1-在WebService中开启线程\" class=\"headerlink\" title=\"1.在WebService中开启线程\"></a>1.在WebService中开启线程</h3><h4 id=\"在查找众多关于C-线程资料之后，有三种方法。\"><a href=\"#在查找众多关于C-线程资料之后，有三种方法。\" class=\"headerlink\" title=\"在查找众多关于C#线程资料之后，有三种方法。\"></a>在查找众多关于C#线程资料之后，有三种方法。</h4><ul>\n<li>Thread</li>\n<li>Timer</li>\n<li>Thread包下的Timer</li>\n</ul>\n<p>三种方式中最后一种方式比较稳定，然后我将写好的WebService发布到服务器进行时间稳定性测试，结果发现最后一种5分钟内可以实现，40分钟将不能实现功能，因为业务需求中时间段最小还是6h，所以就没测试别的时间段。（PS：服务器系统参数 1G运内，1核，50G硬盘，只说参数不打广告 ): ）</p>\n<h3 id=\"2-利用操作系统（Windows）计划任务\"><a href=\"#2-利用操作系统（Windows）计划任务\" class=\"headerlink\" title=\"2.利用操作系统（Windows）计划任务\"></a>2.利用操作系统（Windows）计划任务</h3><p>计划任务程序位置： 控制面板–&gt;系统和安全–&gt;管理工具–&gt;计划任务程序</p>\n<p>桌面操作系统中有三种功能，分别是启动程序、<del>发送电子邮件</del>及<del>显示消息</del>。</p>\n<h3 id=\"3-利用数据库事件实现\"><a href=\"#3-利用数据库事件实现\" class=\"headerlink\" title=\"3.利用数据库事件实现\"></a>3.利用数据库事件实现</h3><h4 id=\"准备：-mysql5-5（5-1之前无事件功能）VS-xxxx-Navicat11\"><a href=\"#准备：-mysql5-5（5-1之前无事件功能）VS-xxxx-Navicat11\" class=\"headerlink\" title=\"准备： mysql5.5（5.1之前无事件功能）VS xxxx Navicat11\"></a>准备： mysql5.5（5.1之前无事件功能）VS xxxx Navicat11</h4><p>Navicat这个软件是数据库可视化工具，对于SQL语句基础不怎么好的，软件中的SQL预览可以帮助你。</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>WebService    –&gt;    Mysql Event    –&gt;    Mysql Produce    –&gt;    SQL Execute</p>\n<h4 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a>连接数据库</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class DBHelper&#123;</div><div class=\"line\">\tpublic static MySqlConnection ConnDB()</div><div class=\"line\">        &#123;</div><div class=\"line\">            String mysqlStr = &quot;Database=Commonweal;Data Source=127.0.0.1;User Id=root;Password=root;pooling=false;CharSet=utf8;port=3306;Allow User Variables=True;&quot;;</div><div class=\"line\">            MySqlConnection conn = new MySqlConnection(mysqlStr);</div><div class=\"line\">            conn.Open();</div><div class=\"line\">            return conn;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其中，当你写的要执行的SQL语句中包含”@”会被C#当为参数化进行SQL语句组装，防止SQL语句注入。<code>Data Source=127.0.0.1</code>值也可以填服务器运营商提供的外网IP，还需要在Mysql新建一个用户，设置用户名、密码，为了安全最好设置访问服务器的具体IP。这样的话WebService在本地测试就行，测试完成之后发布到服务器就行了，很方便的。</p>\n<h4 id=\"执行SQL语句\"><a href=\"#执行SQL语句\" class=\"headerlink\" title=\"执行SQL语句\"></a>执行SQL语句</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">string sql = @&quot;insert into Good(G_ID, G_StartTime, G_EndTime, G_Status) values(&apos;&quot; + ObjectId + @&quot;&apos;, &apos;&quot; + NowTime + @&quot;&apos;, &apos;&quot; + EndTime + @&quot;&apos;, &apos;1&apos;);</div><div class=\"line\">              CREATE EVENT `A_&quot; + NowTime + r.Next(10, 100) + @&quot;`</div><div class=\"line\">              ON SCHEDULE AT &apos;&quot; + EndTime + @&quot;&apos;</div><div class=\"line\">              ON COMPLETION NOT PRESERVE</div><div class=\"line\">              ENABLE</div><div class=\"line\">              DO</div><div class=\"line\">              CALL Pro_EndTime(&apos;&quot; + ObjectId + @&quot;&apos;);</div><div class=\"line\"></div><div class=\"line\">              CREATE EVENT `B_&quot; + NowTime + r.Next(10, 100) + @&quot;`</div><div class=\"line\">              ON SCHEDULE AT &apos;&quot; + EndTime2Hours + @&quot;&apos;</div><div class=\"line\">              ON COMPLETION NOT PRESERVE</div><div class=\"line\">              ENABLE</div><div class=\"line\">              DO</div><div class=\"line\">              CALL Pro_EndTime2Hours(&apos;&quot; + ObjectId + @&quot;&apos;);;</div><div class=\"line\">              &quot;;</div><div class=\"line\">              DBHelper.ExecuteSqlNoQuery(sql);</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class DBHelper&#123;      </div><div class=\"line\">\t\t public static void ExecuteSqlNoQuery(string sql)</div><div class=\"line\">       \t&#123;</div><div class=\"line\">             MySqlConnection conn = ConnDB();</div><div class=\"line\">             MySqlCommand cmd = new MySqlCommand(sql, conn);</div><div class=\"line\">             cmd.ExecuteNonQuery();</div><div class=\"line\">             conn.Close();</div><div class=\"line\">      \t\t&#125;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<p>其中sql中@是转义不报错。</p>\n<h4 id=\"SQL中创建事件\"><a href=\"#SQL中创建事件\" class=\"headerlink\" title=\"SQL中创建事件\"></a>SQL中创建事件</h4><h5 id=\"先说下刚开始的一种思路所带来的坑\"><a href=\"#先说下刚开始的一种思路所带来的坑\" class=\"headerlink\" title=\"先说下刚开始的一种思路所带来的坑\"></a>先说下刚开始的一种思路所带来的坑</h5><p><strong>思路</strong>  WebService–&gt;Mysql事件–&gt;事件中的多条Sql语句–&gt;复杂的功能实现</p>\n<p>用这种方法，在事件下要写很多sql语句，如下代码块，在查找众多国内外网站之后想要在事件里执行多条语句需要在多条sql语句最前面和最后面分别加<strong>BEGIN和END</strong>，而且还要在事件最前端和最后端加入delimiter $$和$$ 作为界限符，这样看来既像存储过程然而也不完全是存储过程。但是在Navicat中不会报错，然后我就天真的以为完成了，但是将代码完全复制到WebService，将一些参数拼接起来，执行后，报代码错误。。。。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">\tdelimiter $$</div><div class=\"line\">CREATE EVENT `事件名`</div><div class=\"line\">            ON SCHEDULE AT &apos;时间点&apos;</div><div class=\"line\">            ON COMPLETION NOT PRESERVE</div><div class=\"line\">            ENABLE</div><div class=\"line\">            DO</div><div class=\"line\">BEGIN</div><div class=\"line\">            sql1;</div><div class=\"line\">            sql2</div><div class=\"line\">            sql3;</div><div class=\"line\">            ...;</div><div class=\"line\">END;</div><div class=\"line\">$$</div></pre></td></tr></table></figure>\n<h5 id=\"另辟蹊径\"><a href=\"#另辟蹊径\" class=\"headerlink\" title=\"另辟蹊径\"></a>另辟蹊径</h5><p>WebService–&gt;Mysql事件–&gt;事件调用存储过程–&gt;复杂的功能实现</p>\n<h6 id=\"坑1：\"><a href=\"#坑1：\" class=\"headerlink\" title=\"坑1：\"></a>坑1：</h6><p>新建存储过程–&gt;添加存储过程参数，参数类型长度不会自动指定，而且也没有要填写参数长度的”()”，然后就一直报错。</p>\n<h6 id=\"坑2\"><a href=\"#坑2\" class=\"headerlink\" title=\"坑2:\"></a>坑2:</h6><p>执行存储过程，当有varchar类型一定要加单引号！！</p>\n<h6 id=\"WebService\"><a href=\"#WebService\" class=\"headerlink\" title=\"WebService\"></a>WebService</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">string sql = @&quot;CREATE EVENT `A_&quot; + NowTime + r.Next(10, 100) + @&quot;`</div><div class=\"line\">                ON SCHEDULE AT &apos;&quot; + EndTime + @&quot;&apos;</div><div class=\"line\">                ON COMPLETION NOT PRESERVE</div><div class=\"line\">                ENABLE</div><div class=\"line\">                DO</div><div class=\"line\">                CALL Pro_Test(&apos;&quot; + ObjectId + @&quot;&apos;);</div><div class=\"line\">\t\t\t\t&quot;;</div></pre></td></tr></table></figure>\n<h6 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h6><ul>\n<li>事件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CALL Pro_Test(&apos;IltR111A113&apos;)</div></pre></td></tr></table></figure>\n<ul>\n<li>存储过程</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE DEFINER = CURRENT_USER PROCEDURE `NewProc`(IN `id` varchar(20))</div><div class=\"line\">BEGIN</div><div class=\"line\">\tUPDATE good_order</div><div class=\"line\">SET O_Status = &apos;0&apos;</div><div class=\"line\">WHERE</div><div class=\"line\">\tO_ID = Good_ID;</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h5 id=\"小知识\"><a href=\"#小知识\" class=\"headerlink\" title=\"小知识\"></a>小知识</h5><h6 id=\"Mysql-1\"><a href=\"#Mysql-1\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h6><ul>\n<li>查看当前是否已开启事件调度器</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SHOW VARIABLES LIKE &apos;event_scheduler&apos;</div></pre></td></tr></table></figure>\n<ul>\n<li>开启事件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SET GLOBAL event_scheduler = 1;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>最近这一个月一直在做齐鲁软件设计大赛的项目，参赛题目是智能手机程序设计，今晚终于有时间有心情静下来写写物品竞拍流程所遇到的坑。其实用了三天空闲时间写完的。=.=</p>\n</blockquote>\n<p>其实用了三天空闲时间写完的。=.=</p>","more":"<h2 id=\"具体的业务流程\"><a href=\"#具体的业务流程\" class=\"headerlink\" title=\"具体的业务流程\"></a>具体的业务流程</h2><p>A用户发起物品 –&gt;倒计时开始–&gt;其他用户交保证金–&gt;开始竞拍出价–&gt;五分钟内不能出价–&gt;倒计时结束–&gt;价高者胜出–&gt;生成订单–&gt;胜出者支付–&gt;A用户发快递–&gt;胜出者接收快递–&gt;胜出者确认收货</p>\n<h2 id=\"具体分析\"><a href=\"#具体分析\" class=\"headerlink\" title=\"具体分析\"></a>具体分析</h2><p>其中有7部分是主要的，看似复杂其实理清思路之后就是敲代码了。由于我们项目的数据是用的Bmob的，但是对于较大型的项目用第三方的平台确实是省了些硬件上的成本，但是从反面来说肯定也会增加代码的行数，毕竟用第三方的数据库不会由我们完全自定义。就这样数据分为两部分，文件数据及大部分数据保存在Bmob，一部分保存在自己的服务器。</p>\n<blockquote>\n<p>为什么要自己搭服务器？</p>\n</blockquote>\n<p>原因就是在业务流程上，当倒计时结束后既要将保证金退回，而且还要生成新的订单，用第三方的肯定实现不了服务器主动定时做一件事。</p>\n<blockquote>\n<p>服务器系统怎样实现定时主动做一件事？（三种方式整理于网络）</p>\n</blockquote>\n<ul>\n<li><h6 id=\"在WebService中开启线程\"><a href=\"#在WebService中开启线程\" class=\"headerlink\" title=\"在WebService中开启线程\"></a>在WebService中开启线程</h6></li>\n<li><h6 id=\"利用服务器系统计划任务\"><a href=\"#利用服务器系统计划任务\" class=\"headerlink\" title=\"利用服务器系统计划任务\"></a>利用服务器系统计划任务</h6></li>\n<li><h6 id=\"利用数据库事件实现\"><a href=\"#利用数据库事件实现\" class=\"headerlink\" title=\"利用数据库事件实现\"></a>利用数据库事件实现</h6></li>\n</ul>\n<h2 id=\"三种方式\"><a href=\"#三种方式\" class=\"headerlink\" title=\"三种方式\"></a>三种方式</h2><h3 id=\"1-在WebService中开启线程\"><a href=\"#1-在WebService中开启线程\" class=\"headerlink\" title=\"1.在WebService中开启线程\"></a>1.在WebService中开启线程</h3><h4 id=\"在查找众多关于C-线程资料之后，有三种方法。\"><a href=\"#在查找众多关于C-线程资料之后，有三种方法。\" class=\"headerlink\" title=\"在查找众多关于C#线程资料之后，有三种方法。\"></a>在查找众多关于C#线程资料之后，有三种方法。</h4><ul>\n<li>Thread</li>\n<li>Timer</li>\n<li>Thread包下的Timer</li>\n</ul>\n<p>三种方式中最后一种方式比较稳定，然后我将写好的WebService发布到服务器进行时间稳定性测试，结果发现最后一种5分钟内可以实现，40分钟将不能实现功能，因为业务需求中时间段最小还是6h，所以就没测试别的时间段。（PS：服务器系统参数 1G运内，1核，50G硬盘，只说参数不打广告 ): ）</p>\n<h3 id=\"2-利用操作系统（Windows）计划任务\"><a href=\"#2-利用操作系统（Windows）计划任务\" class=\"headerlink\" title=\"2.利用操作系统（Windows）计划任务\"></a>2.利用操作系统（Windows）计划任务</h3><p>计划任务程序位置： 控制面板–&gt;系统和安全–&gt;管理工具–&gt;计划任务程序</p>\n<p>桌面操作系统中有三种功能，分别是启动程序、<del>发送电子邮件</del>及<del>显示消息</del>。</p>\n<h3 id=\"3-利用数据库事件实现\"><a href=\"#3-利用数据库事件实现\" class=\"headerlink\" title=\"3.利用数据库事件实现\"></a>3.利用数据库事件实现</h3><h4 id=\"准备：-mysql5-5（5-1之前无事件功能）VS-xxxx-Navicat11\"><a href=\"#准备：-mysql5-5（5-1之前无事件功能）VS-xxxx-Navicat11\" class=\"headerlink\" title=\"准备： mysql5.5（5.1之前无事件功能）VS xxxx Navicat11\"></a>准备： mysql5.5（5.1之前无事件功能）VS xxxx Navicat11</h4><p>Navicat这个软件是数据库可视化工具，对于SQL语句基础不怎么好的，软件中的SQL预览可以帮助你。</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>WebService    –&gt;    Mysql Event    –&gt;    Mysql Produce    –&gt;    SQL Execute</p>\n<h4 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a>连接数据库</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class DBHelper&#123;</div><div class=\"line\">\tpublic static MySqlConnection ConnDB()</div><div class=\"line\">        &#123;</div><div class=\"line\">            String mysqlStr = &quot;Database=Commonweal;Data Source=127.0.0.1;User Id=root;Password=root;pooling=false;CharSet=utf8;port=3306;Allow User Variables=True;&quot;;</div><div class=\"line\">            MySqlConnection conn = new MySqlConnection(mysqlStr);</div><div class=\"line\">            conn.Open();</div><div class=\"line\">            return conn;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其中，当你写的要执行的SQL语句中包含”@”会被C#当为参数化进行SQL语句组装，防止SQL语句注入。<code>Data Source=127.0.0.1</code>值也可以填服务器运营商提供的外网IP，还需要在Mysql新建一个用户，设置用户名、密码，为了安全最好设置访问服务器的具体IP。这样的话WebService在本地测试就行，测试完成之后发布到服务器就行了，很方便的。</p>\n<h4 id=\"执行SQL语句\"><a href=\"#执行SQL语句\" class=\"headerlink\" title=\"执行SQL语句\"></a>执行SQL语句</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">string sql = @&quot;insert into Good(G_ID, G_StartTime, G_EndTime, G_Status) values(&apos;&quot; + ObjectId + @&quot;&apos;, &apos;&quot; + NowTime + @&quot;&apos;, &apos;&quot; + EndTime + @&quot;&apos;, &apos;1&apos;);</div><div class=\"line\">              CREATE EVENT `A_&quot; + NowTime + r.Next(10, 100) + @&quot;`</div><div class=\"line\">              ON SCHEDULE AT &apos;&quot; + EndTime + @&quot;&apos;</div><div class=\"line\">              ON COMPLETION NOT PRESERVE</div><div class=\"line\">              ENABLE</div><div class=\"line\">              DO</div><div class=\"line\">              CALL Pro_EndTime(&apos;&quot; + ObjectId + @&quot;&apos;);</div><div class=\"line\"></div><div class=\"line\">              CREATE EVENT `B_&quot; + NowTime + r.Next(10, 100) + @&quot;`</div><div class=\"line\">              ON SCHEDULE AT &apos;&quot; + EndTime2Hours + @&quot;&apos;</div><div class=\"line\">              ON COMPLETION NOT PRESERVE</div><div class=\"line\">              ENABLE</div><div class=\"line\">              DO</div><div class=\"line\">              CALL Pro_EndTime2Hours(&apos;&quot; + ObjectId + @&quot;&apos;);;</div><div class=\"line\">              &quot;;</div><div class=\"line\">              DBHelper.ExecuteSqlNoQuery(sql);</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class DBHelper&#123;      </div><div class=\"line\">\t\t public static void ExecuteSqlNoQuery(string sql)</div><div class=\"line\">       \t&#123;</div><div class=\"line\">             MySqlConnection conn = ConnDB();</div><div class=\"line\">             MySqlCommand cmd = new MySqlCommand(sql, conn);</div><div class=\"line\">             cmd.ExecuteNonQuery();</div><div class=\"line\">             conn.Close();</div><div class=\"line\">      \t\t&#125;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<p>其中sql中@是转义不报错。</p>\n<h4 id=\"SQL中创建事件\"><a href=\"#SQL中创建事件\" class=\"headerlink\" title=\"SQL中创建事件\"></a>SQL中创建事件</h4><h5 id=\"先说下刚开始的一种思路所带来的坑\"><a href=\"#先说下刚开始的一种思路所带来的坑\" class=\"headerlink\" title=\"先说下刚开始的一种思路所带来的坑\"></a>先说下刚开始的一种思路所带来的坑</h5><p><strong>思路</strong>  WebService–&gt;Mysql事件–&gt;事件中的多条Sql语句–&gt;复杂的功能实现</p>\n<p>用这种方法，在事件下要写很多sql语句，如下代码块，在查找众多国内外网站之后想要在事件里执行多条语句需要在多条sql语句最前面和最后面分别加<strong>BEGIN和END</strong>，而且还要在事件最前端和最后端加入delimiter $$和$$ 作为界限符，这样看来既像存储过程然而也不完全是存储过程。但是在Navicat中不会报错，然后我就天真的以为完成了，但是将代码完全复制到WebService，将一些参数拼接起来，执行后，报代码错误。。。。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">\tdelimiter $$</div><div class=\"line\">CREATE EVENT `事件名`</div><div class=\"line\">            ON SCHEDULE AT &apos;时间点&apos;</div><div class=\"line\">            ON COMPLETION NOT PRESERVE</div><div class=\"line\">            ENABLE</div><div class=\"line\">            DO</div><div class=\"line\">BEGIN</div><div class=\"line\">            sql1;</div><div class=\"line\">            sql2</div><div class=\"line\">            sql3;</div><div class=\"line\">            ...;</div><div class=\"line\">END;</div><div class=\"line\">$$</div></pre></td></tr></table></figure>\n<h5 id=\"另辟蹊径\"><a href=\"#另辟蹊径\" class=\"headerlink\" title=\"另辟蹊径\"></a>另辟蹊径</h5><p>WebService–&gt;Mysql事件–&gt;事件调用存储过程–&gt;复杂的功能实现</p>\n<h6 id=\"坑1：\"><a href=\"#坑1：\" class=\"headerlink\" title=\"坑1：\"></a>坑1：</h6><p>新建存储过程–&gt;添加存储过程参数，参数类型长度不会自动指定，而且也没有要填写参数长度的”()”，然后就一直报错。</p>\n<h6 id=\"坑2\"><a href=\"#坑2\" class=\"headerlink\" title=\"坑2:\"></a>坑2:</h6><p>执行存储过程，当有varchar类型一定要加单引号！！</p>\n<h6 id=\"WebService\"><a href=\"#WebService\" class=\"headerlink\" title=\"WebService\"></a>WebService</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">string sql = @&quot;CREATE EVENT `A_&quot; + NowTime + r.Next(10, 100) + @&quot;`</div><div class=\"line\">                ON SCHEDULE AT &apos;&quot; + EndTime + @&quot;&apos;</div><div class=\"line\">                ON COMPLETION NOT PRESERVE</div><div class=\"line\">                ENABLE</div><div class=\"line\">                DO</div><div class=\"line\">                CALL Pro_Test(&apos;&quot; + ObjectId + @&quot;&apos;);</div><div class=\"line\">\t\t\t\t&quot;;</div></pre></td></tr></table></figure>\n<h6 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h6><ul>\n<li>事件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CALL Pro_Test(&apos;IltR111A113&apos;)</div></pre></td></tr></table></figure>\n<ul>\n<li>存储过程</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE DEFINER = CURRENT_USER PROCEDURE `NewProc`(IN `id` varchar(20))</div><div class=\"line\">BEGIN</div><div class=\"line\">\tUPDATE good_order</div><div class=\"line\">SET O_Status = &apos;0&apos;</div><div class=\"line\">WHERE</div><div class=\"line\">\tO_ID = Good_ID;</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h5 id=\"小知识\"><a href=\"#小知识\" class=\"headerlink\" title=\"小知识\"></a>小知识</h5><h6 id=\"Mysql-1\"><a href=\"#Mysql-1\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h6><ul>\n<li>查看当前是否已开启事件调度器</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SHOW VARIABLES LIKE &apos;event_scheduler&apos;</div></pre></td></tr></table></figure>\n<ul>\n<li>开启事件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SET GLOBAL event_scheduler = 1;</div></pre></td></tr></table></figure>"},{"title":"c#+sql","abbrlink":"ea671271","date":"2016-04-28T14:05:37.000Z","_content":"\n{% cq %}简单的C#连接数据库，并进行增删改查。{% endcq %}\n\n<!--more-->\n本文全部手打，目的是记录和复习下。\n### 连接\n```\nstring strConn = \"data source = 127.0.0.1;initial catalog = 数据库名uid = sa;password = sa \";\nSqlConncetion conn = new SqlConnection(conn);\nconn.Open();\n```\n### 增删改查\n\n#### 增加\n```\nstring strSQL = \"insert into 表名(列名1,列名2) values('value1','value2')\";\n```\n#### 删除\n```\nstring strSQL = \"delete from 表名 where 列名 = 'value'\"\n```\n#### 改变\n```\nstring strSQL = \"update 表名 set 列名 = 'new_value' where = 'old_value'\";\n```\n#### 查询\n```\nstring strSQL = \"select * from 表名\";\n```\n### 执行\n`增删改`\n```\nSqlCommand cmd = new SqlCommand(strSQL,conn);\ncmd.ExecuteNonQuery();\n\nconn.Close();\n```\n","source":"_posts/csharp-sql.md","raw":"---\ntitle: 'c#+sql'\ntags:\n  - SQL\ncategories: CSharp\nabbrlink: ea671271\ndate: 2016-04-28 22:05:37\n---\n\n{% cq %}简单的C#连接数据库，并进行增删改查。{% endcq %}\n\n<!--more-->\n本文全部手打，目的是记录和复习下。\n### 连接\n```\nstring strConn = \"data source = 127.0.0.1;initial catalog = 数据库名uid = sa;password = sa \";\nSqlConncetion conn = new SqlConnection(conn);\nconn.Open();\n```\n### 增删改查\n\n#### 增加\n```\nstring strSQL = \"insert into 表名(列名1,列名2) values('value1','value2')\";\n```\n#### 删除\n```\nstring strSQL = \"delete from 表名 where 列名 = 'value'\"\n```\n#### 改变\n```\nstring strSQL = \"update 表名 set 列名 = 'new_value' where = 'old_value'\";\n```\n#### 查询\n```\nstring strSQL = \"select * from 表名\";\n```\n### 执行\n`增删改`\n```\nSqlCommand cmd = new SqlCommand(strSQL,conn);\ncmd.ExecuteNonQuery();\n\nconn.Close();\n```\n","slug":"csharp-sql","published":1,"updated":"2017-06-08T12:20:29.290Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih1u0019sv1fz1em3by1","content":"<blockquote class=\"blockquote-center\"><p>简单的C#连接数据库，并进行增删改查。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>本文全部手打，目的是记录和复习下。</p>\n<h3 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">string strConn = &quot;data source = 127.0.0.1;initial catalog = 数据库名uid = sa;password = sa &quot;;</div><div class=\"line\">SqlConncetion conn = new SqlConnection(conn);</div><div class=\"line\">conn.Open();</div></pre></td></tr></table></figure>\n<h3 id=\"增删改查\"><a href=\"#增删改查\" class=\"headerlink\" title=\"增删改查\"></a>增删改查</h3><h4 id=\"增加\"><a href=\"#增加\" class=\"headerlink\" title=\"增加\"></a>增加</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">string strSQL = &quot;insert into 表名(列名1,列名2) values(&apos;value1&apos;,&apos;value2&apos;)&quot;;</div></pre></td></tr></table></figure>\n<h4 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">string strSQL = &quot;delete from 表名 where 列名 = &apos;value&apos;&quot;</div></pre></td></tr></table></figure>\n<h4 id=\"改变\"><a href=\"#改变\" class=\"headerlink\" title=\"改变\"></a>改变</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">string strSQL = &quot;update 表名 set 列名 = &apos;new_value&apos; where = &apos;old_value&apos;&quot;;</div></pre></td></tr></table></figure>\n<h4 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">string strSQL = &quot;select * from 表名&quot;;</div></pre></td></tr></table></figure>\n<h3 id=\"执行\"><a href=\"#执行\" class=\"headerlink\" title=\"执行\"></a>执行</h3><p><code>增删改</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">SqlCommand cmd = new SqlCommand(strSQL,conn);</div><div class=\"line\">cmd.ExecuteNonQuery();</div><div class=\"line\"></div><div class=\"line\">conn.Close();</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>简单的C#连接数据库，并进行增删改查。</p>\n</blockquote>","more":"<p>本文全部手打，目的是记录和复习下。</p>\n<h3 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">string strConn = &quot;data source = 127.0.0.1;initial catalog = 数据库名uid = sa;password = sa &quot;;</div><div class=\"line\">SqlConncetion conn = new SqlConnection(conn);</div><div class=\"line\">conn.Open();</div></pre></td></tr></table></figure>\n<h3 id=\"增删改查\"><a href=\"#增删改查\" class=\"headerlink\" title=\"增删改查\"></a>增删改查</h3><h4 id=\"增加\"><a href=\"#增加\" class=\"headerlink\" title=\"增加\"></a>增加</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">string strSQL = &quot;insert into 表名(列名1,列名2) values(&apos;value1&apos;,&apos;value2&apos;)&quot;;</div></pre></td></tr></table></figure>\n<h4 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">string strSQL = &quot;delete from 表名 where 列名 = &apos;value&apos;&quot;</div></pre></td></tr></table></figure>\n<h4 id=\"改变\"><a href=\"#改变\" class=\"headerlink\" title=\"改变\"></a>改变</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">string strSQL = &quot;update 表名 set 列名 = &apos;new_value&apos; where = &apos;old_value&apos;&quot;;</div></pre></td></tr></table></figure>\n<h4 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">string strSQL = &quot;select * from 表名&quot;;</div></pre></td></tr></table></figure>\n<h3 id=\"执行\"><a href=\"#执行\" class=\"headerlink\" title=\"执行\"></a>执行</h3><p><code>增删改</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">SqlCommand cmd = new SqlCommand(strSQL,conn);</div><div class=\"line\">cmd.ExecuteNonQuery();</div><div class=\"line\"></div><div class=\"line\">conn.Close();</div></pre></td></tr></table></figure></p>"},{"title":"备忘悬浮","abbrlink":"44fb9401","date":"2016-04-23T14:03:29.000Z","_content":"\n{% cq %}第一个写的较为美观(MD风格)，用了很多个自定义AlertDialog.Builder。{% endcq %}\n\n<!--more-->\n### 功能\n如标题，扩充标题的内容的话，就是把自己的备忘的内容添加到手机悬浮窗上。简言之备忘悬浮。\n\n### 截图\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-01_com.kiuber.floatwindows.png 200 355 %}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-21_com.kiuber.floatwindows.png 200 355 %}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-21_com.kiuber.floatwindows.png 200 355 %}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-30-24_com.kiuber.floatwindows.png 200 355 %}\n\n### 下载链接\n[Fir.im下载](http://fir.im/BWXF)","source":"_posts/float-windows.md","raw":"---\ntitle: 备忘悬浮\ntags:\n  - 备忘悬浮\ncategories: Android\nabbrlink: 44fb9401\ndate: 2016-04-23 22:03:29\n---\n\n{% cq %}第一个写的较为美观(MD风格)，用了很多个自定义AlertDialog.Builder。{% endcq %}\n\n<!--more-->\n### 功能\n如标题，扩充标题的内容的话，就是把自己的备忘的内容添加到手机悬浮窗上。简言之备忘悬浮。\n\n### 截图\n{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-01_com.kiuber.floatwindows.png 200 355 %}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-21_com.kiuber.floatwindows.png 200 355 %}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-21_com.kiuber.floatwindows.png 200 355 %}{% img http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-30-24_com.kiuber.floatwindows.png 200 355 %}\n\n### 下载链接\n[Fir.im下载](http://fir.im/BWXF)","slug":"float-windows","published":1,"updated":"2017-06-08T12:20:29.293Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih1x001bsv1f5hurj2dj","content":"<blockquote class=\"blockquote-center\"><p>第一个写的较为美观(MD风格)，用了很多个自定义AlertDialog.Builder。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><p>如标题，扩充标题的内容的话，就是把自己的备忘的内容添加到手机悬浮窗上。简言之备忘悬浮。</p>\n<h3 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h3><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-01_com.kiuber.floatwindows.png\" width=\"200\" height=\"355\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-21_com.kiuber.floatwindows.png\" width=\"200\" height=\"355\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-21_com.kiuber.floatwindows.png\" width=\"200\" height=\"355\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-30-24_com.kiuber.floatwindows.png\" width=\"200\" height=\"355\">\n<h3 id=\"下载链接\"><a href=\"#下载链接\" class=\"headerlink\" title=\"下载链接\"></a>下载链接</h3><p><a href=\"http://fir.im/BWXF\" target=\"_blank\" rel=\"external\">Fir.im下载</a></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>第一个写的较为美观(MD风格)，用了很多个自定义AlertDialog.Builder。</p>\n</blockquote>","more":"<h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><p>如标题，扩充标题的内容的话，就是把自己的备忘的内容添加到手机悬浮窗上。简言之备忘悬浮。</p>\n<h3 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h3><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-01_com.kiuber.floatwindows.png\" width=\"200\" height=\"355\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-21_com.kiuber.floatwindows.png\" width=\"200\" height=\"355\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-29-21_com.kiuber.floatwindows.png\" width=\"200\" height=\"355\"><img src=\"http://7xt9yd.com2.z0.glb.clouddn.com/image/original/bwxf/Screenshot_2016-04-24-09-30-24_com.kiuber.floatwindows.png\" width=\"200\" height=\"355\">\n<h3 id=\"下载链接\"><a href=\"#下载链接\" class=\"headerlink\" title=\"下载链接\"></a>下载链接</h3><p><a href=\"http://fir.im/BWXF\" target=\"_blank\" rel=\"external\">Fir.im下载</a></p>"},{"title":"给自己开发小功能","abbrlink":"61ade74","date":"2016-12-18T02:58:51.000Z","_content":"\n{% cq %}作为自己用、也作为本学期Web、Css结课一个设计吧。{% endcq %}\n\n<!--more-->\n\n# [说说](http://www.kiuber.top/blog/tint/)\n功能类似qq空间说说，手机上发布动态、Web查看（服务器用PHP返回数据），数据存在Bmob。\n\n\n# [个人首页](http://www.kiuber.top/blog/test/index.html)\n用Web、Css知识做了一个个人首页，还需要完善。\n\n# [图库](http://www.kiuber.top/blog/picture/)\n手机上可以发布图片，Web查看（同样也是用PHP返回数据）,数据存在Bmob。\n","source":"_posts/function-for-me.md","raw":"---\ntitle: 给自己开发小功能\ntags:\n  - HTML\n  - CSS\n  - PHP\ncategories: 猜猜这个分类\nabbrlink: 61ade74\ndate: 2016-12-18 10:58:51\n---\n\n{% cq %}作为自己用、也作为本学期Web、Css结课一个设计吧。{% endcq %}\n\n<!--more-->\n\n# [说说](http://www.kiuber.top/blog/tint/)\n功能类似qq空间说说，手机上发布动态、Web查看（服务器用PHP返回数据），数据存在Bmob。\n\n\n# [个人首页](http://www.kiuber.top/blog/test/index.html)\n用Web、Css知识做了一个个人首页，还需要完善。\n\n# [图库](http://www.kiuber.top/blog/picture/)\n手机上可以发布图片，Web查看（同样也是用PHP返回数据）,数据存在Bmob。\n","slug":"function-for-me","published":1,"updated":"2017-06-08T12:20:29.294Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih25001esv1ffeowuax9","content":"<blockquote class=\"blockquote-center\"><p>作为自己用、也作为本学期Web、Css结课一个设计吧。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"说说\"><a href=\"#说说\" class=\"headerlink\" title=\"说说\"></a><a href=\"http://www.kiuber.top/blog/tint/\" target=\"_blank\" rel=\"external\">说说</a></h1><p>功能类似qq空间说说，手机上发布动态、Web查看（服务器用PHP返回数据），数据存在Bmob。</p>\n<h1 id=\"个人首页\"><a href=\"#个人首页\" class=\"headerlink\" title=\"个人首页\"></a><a href=\"http://www.kiuber.top/blog/test/index.html\" target=\"_blank\" rel=\"external\">个人首页</a></h1><p>用Web、Css知识做了一个个人首页，还需要完善。</p>\n<h1 id=\"图库\"><a href=\"#图库\" class=\"headerlink\" title=\"图库\"></a><a href=\"http://www.kiuber.top/blog/picture/\" target=\"_blank\" rel=\"external\">图库</a></h1><p>手机上可以发布图片，Web查看（同样也是用PHP返回数据）,数据存在Bmob。</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>作为自己用、也作为本学期Web、Css结课一个设计吧。</p>\n</blockquote>","more":"<h1 id=\"说说\"><a href=\"#说说\" class=\"headerlink\" title=\"说说\"></a><a href=\"http://www.kiuber.top/blog/tint/\" target=\"_blank\" rel=\"external\">说说</a></h1><p>功能类似qq空间说说，手机上发布动态、Web查看（服务器用PHP返回数据），数据存在Bmob。</p>\n<h1 id=\"个人首页\"><a href=\"#个人首页\" class=\"headerlink\" title=\"个人首页\"></a><a href=\"http://www.kiuber.top/blog/test/index.html\" target=\"_blank\" rel=\"external\">个人首页</a></h1><p>用Web、Css知识做了一个个人首页，还需要完善。</p>\n<h1 id=\"图库\"><a href=\"#图库\" class=\"headerlink\" title=\"图库\"></a><a href=\"http://www.kiuber.top/blog/picture/\" target=\"_blank\" rel=\"external\">图库</a></h1><p>手机上可以发布图片，Web查看（同样也是用PHP返回数据）,数据存在Bmob。</p>"},{"title":"汇总第三方服务SDK","abbrlink":"662071b8","date":"2016-06-01T02:45:15.000Z","_content":"\n{% cq %}本人经过测试众多第三方服务SDK总结出配置、功能较全的SDK汇总{% endcq %}\n\n<!--more-->\n# 推送\n[个推](http://www.getui.com/)\n配置相对于其他推送SDK较简单，坑也较少。\n# 统计\n[Umeng+](https://www.umeng.com/)\n功能较全，配置也算简单。\n# 云存储\n[Bmob](http://www.bmob.cn)\n配置较简单，免费额度足够使用，功能较全，比如邮箱注册，App网站。\n# 短信验证码\n[Mob](http://www.mob.com/)\nApp在其官网审核成功的话就可以获得永久免费的短信服务。\n# 广告\n[WAPS](http://www.waps.cn/)\n配置较简单，坑较少，审核速度还可以，客服MM热情招待~。\n\n以上想法仅代表个人意见，如有错误或者侵权请联系我~","source":"_posts/gather-Third-party-service-sdk.md","raw":"---\ntitle: 汇总第三方服务SDK\ntags:\n  - 推送\n  - 统计\n  - 云存储\n  - 短信验证码\n  - 广告\ncategories: Android\nabbrlink: 662071b8\ndate: 2016-06-01 10:45:15\n---\n\n{% cq %}本人经过测试众多第三方服务SDK总结出配置、功能较全的SDK汇总{% endcq %}\n\n<!--more-->\n# 推送\n[个推](http://www.getui.com/)\n配置相对于其他推送SDK较简单，坑也较少。\n# 统计\n[Umeng+](https://www.umeng.com/)\n功能较全，配置也算简单。\n# 云存储\n[Bmob](http://www.bmob.cn)\n配置较简单，免费额度足够使用，功能较全，比如邮箱注册，App网站。\n# 短信验证码\n[Mob](http://www.mob.com/)\nApp在其官网审核成功的话就可以获得永久免费的短信服务。\n# 广告\n[WAPS](http://www.waps.cn/)\n配置较简单，坑较少，审核速度还可以，客服MM热情招待~。\n\n以上想法仅代表个人意见，如有错误或者侵权请联系我~","slug":"gather-Third-party-service-sdk","published":1,"updated":"2017-06-08T12:20:29.295Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih2c001hsv1faxosg0xl","content":"<blockquote class=\"blockquote-center\"><p>本人经过测试众多第三方服务SDK总结出配置、功能较全的SDK汇总</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"推送\"><a href=\"#推送\" class=\"headerlink\" title=\"推送\"></a>推送</h1><p><a href=\"http://www.getui.com/\" target=\"_blank\" rel=\"external\">个推</a><br>配置相对于其他推送SDK较简单，坑也较少。</p>\n<h1 id=\"统计\"><a href=\"#统计\" class=\"headerlink\" title=\"统计\"></a>统计</h1><p><a href=\"https://www.umeng.com/\" target=\"_blank\" rel=\"external\">Umeng+</a><br>功能较全，配置也算简单。</p>\n<h1 id=\"云存储\"><a href=\"#云存储\" class=\"headerlink\" title=\"云存储\"></a>云存储</h1><p><a href=\"http://www.bmob.cn\" target=\"_blank\" rel=\"external\">Bmob</a><br>配置较简单，免费额度足够使用，功能较全，比如邮箱注册，App网站。</p>\n<h1 id=\"短信验证码\"><a href=\"#短信验证码\" class=\"headerlink\" title=\"短信验证码\"></a>短信验证码</h1><p><a href=\"http://www.mob.com/\" target=\"_blank\" rel=\"external\">Mob</a><br>App在其官网审核成功的话就可以获得永久免费的短信服务。</p>\n<h1 id=\"广告\"><a href=\"#广告\" class=\"headerlink\" title=\"广告\"></a>广告</h1><p><a href=\"http://www.waps.cn/\" target=\"_blank\" rel=\"external\">WAPS</a><br>配置较简单，坑较少，审核速度还可以，客服MM热情招待~。</p>\n<p>以上想法仅代表个人意见，如有错误或者侵权请联系我~</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>本人经过测试众多第三方服务SDK总结出配置、功能较全的SDK汇总</p>\n</blockquote>","more":"<h1 id=\"推送\"><a href=\"#推送\" class=\"headerlink\" title=\"推送\"></a>推送</h1><p><a href=\"http://www.getui.com/\" target=\"_blank\" rel=\"external\">个推</a><br>配置相对于其他推送SDK较简单，坑也较少。</p>\n<h1 id=\"统计\"><a href=\"#统计\" class=\"headerlink\" title=\"统计\"></a>统计</h1><p><a href=\"https://www.umeng.com/\" target=\"_blank\" rel=\"external\">Umeng+</a><br>功能较全，配置也算简单。</p>\n<h1 id=\"云存储\"><a href=\"#云存储\" class=\"headerlink\" title=\"云存储\"></a>云存储</h1><p><a href=\"http://www.bmob.cn\" target=\"_blank\" rel=\"external\">Bmob</a><br>配置较简单，免费额度足够使用，功能较全，比如邮箱注册，App网站。</p>\n<h1 id=\"短信验证码\"><a href=\"#短信验证码\" class=\"headerlink\" title=\"短信验证码\"></a>短信验证码</h1><p><a href=\"http://www.mob.com/\" target=\"_blank\" rel=\"external\">Mob</a><br>App在其官网审核成功的话就可以获得永久免费的短信服务。</p>\n<h1 id=\"广告\"><a href=\"#广告\" class=\"headerlink\" title=\"广告\"></a>广告</h1><p><a href=\"http://www.waps.cn/\" target=\"_blank\" rel=\"external\">WAPS</a><br>配置较简单，坑较少，审核速度还可以，客服MM热情招待~。</p>\n<p>以上想法仅代表个人意见，如有错误或者侵权请联系我~</p>"},{"title":"提高安卓应用识别二维码准确率，zbar识别图片文件","abbrlink":15458,"date":"2017-07-06T07:18:19.000Z","_content":"\n{% cq %}利用zbar提高二维码识别率{% endcq %}\n\n<!-- more -->\n#### 前言\n相信用过微信的都知道微信的二维码识别识别特别快，无论是斜着手机还是怎样，几乎都能很快的识别出来，听说微信是开发了一套自用的二维码识别库，Qbar，这个算法应该是放到了微信服务器，因为在聊天界面长按包含二维码的图片，只有手机接入网络时才会有“识别图中二维码”这一选项，再就是扫一扫需要网络才能用，不过接入网络有可能是微信为了统计扫码次数。\n\n对比了几个安卓二维码扫描的应用，小米自带的扫一扫、UC浏览器不需要网络就可以本地识别，支付宝、微信这两家需要网络才行。\n#### zxing zbar\n\n安卓二维码相关的基础库有两个，一个是google[zxing](https://github.com/zxing/zxing/)，另一个是[zbar](https://github.com/ZBar/ZBar)，zxing一直在维护，而zbar已经不维护多年了，不过zxing是用java写的、而zbar底层是用c写的，听网上说zbar常用于ios开发，貌似现在ios提供了自己的识别二维码接口，Android方面的文档几乎没有。\n\n识别二维码一般分为两类，一是用相机来扫一扫，二是读取文件识别。不过两者有共同的地方，不论是扫一扫还是识别文件都可以转化为Bitmap（阅读Zbar源码可以发现）。\n\n经过我手机（红米Note 4G双卡版、小米5S Plus 高配版）测试，zxing的扫一扫和识别文件效果一般般，对于稍微有点复杂的二维码表现的就更差了。于是寻求zbar的解决方案。阅读zbar关键源码，识别Bitmap时，\n\n```java\npublic void onPreviewFrame(byte[] data, Camera camera) {\n                Camera.Parameters parameters = camera.getParameters();\n                Size size = parameters.getPreviewSize();\n\n                Image barcode = new Image(size.width, size.height, \"Y800\");\n                barcode.setData(data);\n\n                int result = scanner.scanImage(barcode);\n                \n                if (result != 0) {\n                    previewing = false;\n                    mCamera.setPreviewCallback(null);\n                    mCamera.stopPreview();\n                    \n                    SymbolSet syms = scanner.getResults();\n                    for (Symbol sym : syms) {\n                        scanText.setText(\"barcode result \" + sym.getData());\n                        barcodeScanned = true;\n                    }\n                }\n            }\n```\n\n查其重载barcode.setData有两个，于是可以把图片文件转换成两个参数就能识别了，其实扫一扫的原理也是这样的，相机把捕捉的Bitmap data[]传过来然后识别。\n\n```java\npublic native void setData(byte[] var1);\n\npublic native void setData(int[] var1);\n```\n\n#### 优化方案\n\n下面就是指定图片识别代码，zbar的扫一扫很多，这里就不说了\n\n```java\nprivate String zbarDecode(String filePath) throws Exception {\n        File   file       = new File(filePath);\n        Bitmap barcodeBmp = BitmapFactory.decodeFile(file.getPath());\n        int    width      = barcodeBmp.getWidth();\n        int    height     = barcodeBmp.getHeight();\n        int[]  pixels     = new int[width * height];\n        barcodeBmp.getPixels(pixels, 0, width, 0, 0, width, height);\n        Image barcode = new Image(width, height, \"RGB4\");\n        barcode.setData(pixels);\n        ImageScanner reader       = new ImageScanner();\n        int          result       = reader.scanImage(barcode.convert(\"Y800\"));\n        String       qrCodeString = null;\n        if (result != 0) {\n            SymbolSet syms = reader.getResults();\n            for (Symbol sym : syms) {\n                qrCodeString = sym.getData();\n                LogUtil.d(\"qrCodeString\", qrCodeString);\n            }\n        }\n        return qrCodeString;\n    }\n```\n#### 参考链接\n\n[https://github.com/ZBar/ZBar/blob/master/android/examples/CameraTest/src/net/sourceforge/zbar/android/CameraTest/CameraTestActivity.java](https://github.com/ZBar/ZBar/blob/master/android/examples/CameraTest/src/net/sourceforge/zbar/android/CameraTest/CameraTestActivity.java)\n[https://stackoverflow.com/questions/17850942/zbar-android-scan-local-qr-or-bar-code-image](https://stackoverflow.com/questions/17850942/zbar-android-scan-local-qr-or-bar-code-image)","source":"_posts/improve-android-parse-qrc.md","raw":"---\ntitle: 提高安卓应用识别二维码准确率，zbar识别图片文件\ntags:\n  - android\n  - 二维码\ncategories: Android\nabbrlink: 15458\ndate: 2017-07-06 15:18:19\n---\n\n{% cq %}利用zbar提高二维码识别率{% endcq %}\n\n<!-- more -->\n#### 前言\n相信用过微信的都知道微信的二维码识别识别特别快，无论是斜着手机还是怎样，几乎都能很快的识别出来，听说微信是开发了一套自用的二维码识别库，Qbar，这个算法应该是放到了微信服务器，因为在聊天界面长按包含二维码的图片，只有手机接入网络时才会有“识别图中二维码”这一选项，再就是扫一扫需要网络才能用，不过接入网络有可能是微信为了统计扫码次数。\n\n对比了几个安卓二维码扫描的应用，小米自带的扫一扫、UC浏览器不需要网络就可以本地识别，支付宝、微信这两家需要网络才行。\n#### zxing zbar\n\n安卓二维码相关的基础库有两个，一个是google[zxing](https://github.com/zxing/zxing/)，另一个是[zbar](https://github.com/ZBar/ZBar)，zxing一直在维护，而zbar已经不维护多年了，不过zxing是用java写的、而zbar底层是用c写的，听网上说zbar常用于ios开发，貌似现在ios提供了自己的识别二维码接口，Android方面的文档几乎没有。\n\n识别二维码一般分为两类，一是用相机来扫一扫，二是读取文件识别。不过两者有共同的地方，不论是扫一扫还是识别文件都可以转化为Bitmap（阅读Zbar源码可以发现）。\n\n经过我手机（红米Note 4G双卡版、小米5S Plus 高配版）测试，zxing的扫一扫和识别文件效果一般般，对于稍微有点复杂的二维码表现的就更差了。于是寻求zbar的解决方案。阅读zbar关键源码，识别Bitmap时，\n\n```java\npublic void onPreviewFrame(byte[] data, Camera camera) {\n                Camera.Parameters parameters = camera.getParameters();\n                Size size = parameters.getPreviewSize();\n\n                Image barcode = new Image(size.width, size.height, \"Y800\");\n                barcode.setData(data);\n\n                int result = scanner.scanImage(barcode);\n                \n                if (result != 0) {\n                    previewing = false;\n                    mCamera.setPreviewCallback(null);\n                    mCamera.stopPreview();\n                    \n                    SymbolSet syms = scanner.getResults();\n                    for (Symbol sym : syms) {\n                        scanText.setText(\"barcode result \" + sym.getData());\n                        barcodeScanned = true;\n                    }\n                }\n            }\n```\n\n查其重载barcode.setData有两个，于是可以把图片文件转换成两个参数就能识别了，其实扫一扫的原理也是这样的，相机把捕捉的Bitmap data[]传过来然后识别。\n\n```java\npublic native void setData(byte[] var1);\n\npublic native void setData(int[] var1);\n```\n\n#### 优化方案\n\n下面就是指定图片识别代码，zbar的扫一扫很多，这里就不说了\n\n```java\nprivate String zbarDecode(String filePath) throws Exception {\n        File   file       = new File(filePath);\n        Bitmap barcodeBmp = BitmapFactory.decodeFile(file.getPath());\n        int    width      = barcodeBmp.getWidth();\n        int    height     = barcodeBmp.getHeight();\n        int[]  pixels     = new int[width * height];\n        barcodeBmp.getPixels(pixels, 0, width, 0, 0, width, height);\n        Image barcode = new Image(width, height, \"RGB4\");\n        barcode.setData(pixels);\n        ImageScanner reader       = new ImageScanner();\n        int          result       = reader.scanImage(barcode.convert(\"Y800\"));\n        String       qrCodeString = null;\n        if (result != 0) {\n            SymbolSet syms = reader.getResults();\n            for (Symbol sym : syms) {\n                qrCodeString = sym.getData();\n                LogUtil.d(\"qrCodeString\", qrCodeString);\n            }\n        }\n        return qrCodeString;\n    }\n```\n#### 参考链接\n\n[https://github.com/ZBar/ZBar/blob/master/android/examples/CameraTest/src/net/sourceforge/zbar/android/CameraTest/CameraTestActivity.java](https://github.com/ZBar/ZBar/blob/master/android/examples/CameraTest/src/net/sourceforge/zbar/android/CameraTest/CameraTestActivity.java)\n[https://stackoverflow.com/questions/17850942/zbar-android-scan-local-qr-or-bar-code-image](https://stackoverflow.com/questions/17850942/zbar-android-scan-local-qr-or-bar-code-image)","slug":"improve-android-parse-qrc","published":1,"updated":"2017-07-06T10:20:31.621Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih2g001lsv1f068mb6u5","content":"<blockquote class=\"blockquote-center\"><p>利用zbar提高二维码识别率</p>\n</blockquote>\n<a id=\"more\"></a>\n<h4 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h4><p>相信用过微信的都知道微信的二维码识别识别特别快，无论是斜着手机还是怎样，几乎都能很快的识别出来，听说微信是开发了一套自用的二维码识别库，Qbar，这个算法应该是放到了微信服务器，因为在聊天界面长按包含二维码的图片，只有手机接入网络时才会有“识别图中二维码”这一选项，再就是扫一扫需要网络才能用，不过接入网络有可能是微信为了统计扫码次数。</p>\n<p>对比了几个安卓二维码扫描的应用，小米自带的扫一扫、UC浏览器不需要网络就可以本地识别，支付宝、微信这两家需要网络才行。</p>\n<h4 id=\"zxing-zbar\"><a href=\"#zxing-zbar\" class=\"headerlink\" title=\"zxing zbar\"></a>zxing zbar</h4><p>安卓二维码相关的基础库有两个，一个是google<a href=\"https://github.com/zxing/zxing/\" target=\"_blank\" rel=\"external\">zxing</a>，另一个是<a href=\"https://github.com/ZBar/ZBar\" target=\"_blank\" rel=\"external\">zbar</a>，zxing一直在维护，而zbar已经不维护多年了，不过zxing是用java写的、而zbar底层是用c写的，听网上说zbar常用于ios开发，貌似现在ios提供了自己的识别二维码接口，Android方面的文档几乎没有。</p>\n<p>识别二维码一般分为两类，一是用相机来扫一扫，二是读取文件识别。不过两者有共同的地方，不论是扫一扫还是识别文件都可以转化为Bitmap（阅读Zbar源码可以发现）。</p>\n<p>经过我手机（红米Note 4G双卡版、小米5S Plus 高配版）测试，zxing的扫一扫和识别文件效果一般般，对于稍微有点复杂的二维码表现的就更差了。于是寻求zbar的解决方案。阅读zbar关键源码，识别Bitmap时，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPreviewFrame</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] data, Camera camera)</span> </span>&#123;</div><div class=\"line\">                Camera.Parameters parameters = camera.getParameters();</div><div class=\"line\">                Size size = parameters.getPreviewSize();</div><div class=\"line\"></div><div class=\"line\">                Image barcode = <span class=\"keyword\">new</span> Image(size.width, size.height, <span class=\"string\">\"Y800\"</span>);</div><div class=\"line\">                barcode.setData(data);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">int</span> result = scanner.scanImage(barcode);</div><div class=\"line\">                </div><div class=\"line\">                <span class=\"keyword\">if</span> (result != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                    previewing = <span class=\"keyword\">false</span>;</div><div class=\"line\">                    mCamera.setPreviewCallback(<span class=\"keyword\">null</span>);</div><div class=\"line\">                    mCamera.stopPreview();</div><div class=\"line\">                    </div><div class=\"line\">                    SymbolSet syms = scanner.getResults();</div><div class=\"line\">                    <span class=\"keyword\">for</span> (Symbol sym : syms) &#123;</div><div class=\"line\">                        scanText.setText(<span class=\"string\">\"barcode result \"</span> + sym.getData());</div><div class=\"line\">                        barcodeScanned = <span class=\"keyword\">true</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div></pre></td></tr></table></figure>\n<p>查其重载barcode.setData有两个，于是可以把图片文件转换成两个参数就能识别了，其实扫一扫的原理也是这样的，相机把捕捉的Bitmap data[]传过来然后识别。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">native</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] var1)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">native</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(<span class=\"keyword\">int</span>[] var1)</span></span>;</div></pre></td></tr></table></figure>\n<h4 id=\"优化方案\"><a href=\"#优化方案\" class=\"headerlink\" title=\"优化方案\"></a>优化方案</h4><p>下面就是指定图片识别代码，zbar的扫一扫很多，这里就不说了</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">zbarDecode</span><span class=\"params\">(String filePath)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        File   file       = <span class=\"keyword\">new</span> File(filePath);</div><div class=\"line\">        Bitmap barcodeBmp = BitmapFactory.decodeFile(file.getPath());</div><div class=\"line\">        <span class=\"keyword\">int</span>    width      = barcodeBmp.getWidth();</div><div class=\"line\">        <span class=\"keyword\">int</span>    height     = barcodeBmp.getHeight();</div><div class=\"line\">        <span class=\"keyword\">int</span>[]  pixels     = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[width * height];</div><div class=\"line\">        barcodeBmp.getPixels(pixels, <span class=\"number\">0</span>, width, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</div><div class=\"line\">        Image barcode = <span class=\"keyword\">new</span> Image(width, height, <span class=\"string\">\"RGB4\"</span>);</div><div class=\"line\">        barcode.setData(pixels);</div><div class=\"line\">        ImageScanner reader       = <span class=\"keyword\">new</span> ImageScanner();</div><div class=\"line\">        <span class=\"keyword\">int</span>          result       = reader.scanImage(barcode.convert(<span class=\"string\">\"Y800\"</span>));</div><div class=\"line\">        String       qrCodeString = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (result != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            SymbolSet syms = reader.getResults();</div><div class=\"line\">            <span class=\"keyword\">for</span> (Symbol sym : syms) &#123;</div><div class=\"line\">                qrCodeString = sym.getData();</div><div class=\"line\">                LogUtil.d(<span class=\"string\">\"qrCodeString\"</span>, qrCodeString);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> qrCodeString;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h4 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h4><p><a href=\"https://github.com/ZBar/ZBar/blob/master/android/examples/CameraTest/src/net/sourceforge/zbar/android/CameraTest/CameraTestActivity.java\" target=\"_blank\" rel=\"external\">https://github.com/ZBar/ZBar/blob/master/android/examples/CameraTest/src/net/sourceforge/zbar/android/CameraTest/CameraTestActivity.java</a><br><a href=\"https://stackoverflow.com/questions/17850942/zbar-android-scan-local-qr-or-bar-code-image\" target=\"_blank\" rel=\"external\">https://stackoverflow.com/questions/17850942/zbar-android-scan-local-qr-or-bar-code-image</a></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>利用zbar提高二维码识别率</p>\n</blockquote>","more":"<h4 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h4><p>相信用过微信的都知道微信的二维码识别识别特别快，无论是斜着手机还是怎样，几乎都能很快的识别出来，听说微信是开发了一套自用的二维码识别库，Qbar，这个算法应该是放到了微信服务器，因为在聊天界面长按包含二维码的图片，只有手机接入网络时才会有“识别图中二维码”这一选项，再就是扫一扫需要网络才能用，不过接入网络有可能是微信为了统计扫码次数。</p>\n<p>对比了几个安卓二维码扫描的应用，小米自带的扫一扫、UC浏览器不需要网络就可以本地识别，支付宝、微信这两家需要网络才行。</p>\n<h4 id=\"zxing-zbar\"><a href=\"#zxing-zbar\" class=\"headerlink\" title=\"zxing zbar\"></a>zxing zbar</h4><p>安卓二维码相关的基础库有两个，一个是google<a href=\"https://github.com/zxing/zxing/\" target=\"_blank\" rel=\"external\">zxing</a>，另一个是<a href=\"https://github.com/ZBar/ZBar\" target=\"_blank\" rel=\"external\">zbar</a>，zxing一直在维护，而zbar已经不维护多年了，不过zxing是用java写的、而zbar底层是用c写的，听网上说zbar常用于ios开发，貌似现在ios提供了自己的识别二维码接口，Android方面的文档几乎没有。</p>\n<p>识别二维码一般分为两类，一是用相机来扫一扫，二是读取文件识别。不过两者有共同的地方，不论是扫一扫还是识别文件都可以转化为Bitmap（阅读Zbar源码可以发现）。</p>\n<p>经过我手机（红米Note 4G双卡版、小米5S Plus 高配版）测试，zxing的扫一扫和识别文件效果一般般，对于稍微有点复杂的二维码表现的就更差了。于是寻求zbar的解决方案。阅读zbar关键源码，识别Bitmap时，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPreviewFrame</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] data, Camera camera)</span> </span>&#123;</div><div class=\"line\">                Camera.Parameters parameters = camera.getParameters();</div><div class=\"line\">                Size size = parameters.getPreviewSize();</div><div class=\"line\"></div><div class=\"line\">                Image barcode = <span class=\"keyword\">new</span> Image(size.width, size.height, <span class=\"string\">\"Y800\"</span>);</div><div class=\"line\">                barcode.setData(data);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">int</span> result = scanner.scanImage(barcode);</div><div class=\"line\">                </div><div class=\"line\">                <span class=\"keyword\">if</span> (result != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                    previewing = <span class=\"keyword\">false</span>;</div><div class=\"line\">                    mCamera.setPreviewCallback(<span class=\"keyword\">null</span>);</div><div class=\"line\">                    mCamera.stopPreview();</div><div class=\"line\">                    </div><div class=\"line\">                    SymbolSet syms = scanner.getResults();</div><div class=\"line\">                    <span class=\"keyword\">for</span> (Symbol sym : syms) &#123;</div><div class=\"line\">                        scanText.setText(<span class=\"string\">\"barcode result \"</span> + sym.getData());</div><div class=\"line\">                        barcodeScanned = <span class=\"keyword\">true</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div></pre></td></tr></table></figure>\n<p>查其重载barcode.setData有两个，于是可以把图片文件转换成两个参数就能识别了，其实扫一扫的原理也是这样的，相机把捕捉的Bitmap data[]传过来然后识别。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">native</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] var1)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">native</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(<span class=\"keyword\">int</span>[] var1)</span></span>;</div></pre></td></tr></table></figure>\n<h4 id=\"优化方案\"><a href=\"#优化方案\" class=\"headerlink\" title=\"优化方案\"></a>优化方案</h4><p>下面就是指定图片识别代码，zbar的扫一扫很多，这里就不说了</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">zbarDecode</span><span class=\"params\">(String filePath)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        File   file       = <span class=\"keyword\">new</span> File(filePath);</div><div class=\"line\">        Bitmap barcodeBmp = BitmapFactory.decodeFile(file.getPath());</div><div class=\"line\">        <span class=\"keyword\">int</span>    width      = barcodeBmp.getWidth();</div><div class=\"line\">        <span class=\"keyword\">int</span>    height     = barcodeBmp.getHeight();</div><div class=\"line\">        <span class=\"keyword\">int</span>[]  pixels     = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[width * height];</div><div class=\"line\">        barcodeBmp.getPixels(pixels, <span class=\"number\">0</span>, width, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</div><div class=\"line\">        Image barcode = <span class=\"keyword\">new</span> Image(width, height, <span class=\"string\">\"RGB4\"</span>);</div><div class=\"line\">        barcode.setData(pixels);</div><div class=\"line\">        ImageScanner reader       = <span class=\"keyword\">new</span> ImageScanner();</div><div class=\"line\">        <span class=\"keyword\">int</span>          result       = reader.scanImage(barcode.convert(<span class=\"string\">\"Y800\"</span>));</div><div class=\"line\">        String       qrCodeString = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (result != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            SymbolSet syms = reader.getResults();</div><div class=\"line\">            <span class=\"keyword\">for</span> (Symbol sym : syms) &#123;</div><div class=\"line\">                qrCodeString = sym.getData();</div><div class=\"line\">                LogUtil.d(<span class=\"string\">\"qrCodeString\"</span>, qrCodeString);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> qrCodeString;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h4 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h4><p><a href=\"https://github.com/ZBar/ZBar/blob/master/android/examples/CameraTest/src/net/sourceforge/zbar/android/CameraTest/CameraTestActivity.java\" target=\"_blank\" rel=\"external\">https://github.com/ZBar/ZBar/blob/master/android/examples/CameraTest/src/net/sourceforge/zbar/android/CameraTest/CameraTestActivity.java</a><br><a href=\"https://stackoverflow.com/questions/17850942/zbar-android-scan-local-qr-or-bar-code-image\" target=\"_blank\" rel=\"external\">https://stackoverflow.com/questions/17850942/zbar-android-scan-local-qr-or-bar-code-image</a></p>"},{"title":"在 Ubuntu 通过 nvm 安装 nodejs","date":"2017-10-30T14:10:00.000Z","_content":"\n{% cq %}通过 nvm 管理 nodejs 贼鸡儿爽{% endcq %}\n\n<!-- more -->\n### 安装 nvm\nnvm 是一个开源的 Node 版本管理器，通过简单的 bash 脚本来管理、切换多个 Node.js 版本,使用 nvm 可以安装官网最新版本之前的任意版本,可以任意切换不同版本，十分方便。\n\n#### 下载并安装\n`wget https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash insatll.sh`\n\n#### 查看版本\n`nvm -v`\n\n### 更改 nvm 镜像\n设置 `export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node`\n查询结果 `echo $NVM_NODEJS_ORG_MIRROR`\n\n### 安装 nodejs\n可以通过 `nvm ls-remote` 查看可安装版本\n执行 `nvm install 6.0.0` 安装会出现下面内容，也可以验证淘宝镜像是否配置正确\n```bash\nDownloading and installing node v6.0.0...\nDownloading https://npm.taobao.org/mirrors/node/v6.0.0/node-v6.0.0-linux-x64.tar.xz...\n```\n\n### 使用 node\n通过 `nvm install 6.0.0` 完成安装后默认就能用 node 啦，不过在下载了多个版本时可以用 `nvm use 版本号` 来随意切换版本。\n\n### 配置 npm 镜像\n在安装模块时，可以通过下面两种方式配置。\n#### 临时使用\n`npm --registry https://registry.npm.taobao.org install express`\n\n#### 永久使用\n`npm config set registry https://registry.npm.taobao.org`\n\n尽情使用吧\n\n","source":"_posts/install-nodejs-on-ubuntu-by-nvm.md","raw":"---\ntitle: 在 Ubuntu 通过 nvm 安装 nodejs\ntags:\n  - Linux\n  - Ubuntu\n  - nodejs\ndate: 2017-10-30 22:10:00\ncategories: Linux\n---\n\n{% cq %}通过 nvm 管理 nodejs 贼鸡儿爽{% endcq %}\n\n<!-- more -->\n### 安装 nvm\nnvm 是一个开源的 Node 版本管理器，通过简单的 bash 脚本来管理、切换多个 Node.js 版本,使用 nvm 可以安装官网最新版本之前的任意版本,可以任意切换不同版本，十分方便。\n\n#### 下载并安装\n`wget https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash insatll.sh`\n\n#### 查看版本\n`nvm -v`\n\n### 更改 nvm 镜像\n设置 `export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node`\n查询结果 `echo $NVM_NODEJS_ORG_MIRROR`\n\n### 安装 nodejs\n可以通过 `nvm ls-remote` 查看可安装版本\n执行 `nvm install 6.0.0` 安装会出现下面内容，也可以验证淘宝镜像是否配置正确\n```bash\nDownloading and installing node v6.0.0...\nDownloading https://npm.taobao.org/mirrors/node/v6.0.0/node-v6.0.0-linux-x64.tar.xz...\n```\n\n### 使用 node\n通过 `nvm install 6.0.0` 完成安装后默认就能用 node 啦，不过在下载了多个版本时可以用 `nvm use 版本号` 来随意切换版本。\n\n### 配置 npm 镜像\n在安装模块时，可以通过下面两种方式配置。\n#### 临时使用\n`npm --registry https://registry.npm.taobao.org install express`\n\n#### 永久使用\n`npm config set registry https://registry.npm.taobao.org`\n\n尽情使用吧\n\n","slug":"install-nodejs-on-ubuntu-by-nvm","published":1,"updated":"2017-10-31T06:38:18.965Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih2i001psv1fu00eohpb","content":"<blockquote class=\"blockquote-center\"><p>通过 nvm 管理 nodejs 贼鸡儿爽</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"安装-nvm\"><a href=\"#安装-nvm\" class=\"headerlink\" title=\"安装 nvm\"></a>安装 nvm</h3><p>nvm 是一个开源的 Node 版本管理器，通过简单的 bash 脚本来管理、切换多个 Node.js 版本,使用 nvm 可以安装官网最新版本之前的任意版本,可以任意切换不同版本，十分方便。</p>\n<h4 id=\"下载并安装\"><a href=\"#下载并安装\" class=\"headerlink\" title=\"下载并安装\"></a>下载并安装</h4><p><code>wget https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash insatll.sh</code></p>\n<h4 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h4><p><code>nvm -v</code></p>\n<h3 id=\"更改-nvm-镜像\"><a href=\"#更改-nvm-镜像\" class=\"headerlink\" title=\"更改 nvm 镜像\"></a>更改 nvm 镜像</h3><p>设置 <code>export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</code><br>查询结果 <code>echo $NVM_NODEJS_ORG_MIRROR</code></p>\n<h3 id=\"安装-nodejs\"><a href=\"#安装-nodejs\" class=\"headerlink\" title=\"安装 nodejs\"></a>安装 nodejs</h3><p>可以通过 <code>nvm ls-remote</code> 查看可安装版本<br>执行 <code>nvm install 6.0.0</code> 安装会出现下面内容，也可以验证淘宝镜像是否配置正确<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Downloading and installing node v6.0.0...</div><div class=\"line\">Downloading https://npm.taobao.org/mirrors/node/v6.0.0/node-v6.0.0-linux-x64.tar.xz...</div></pre></td></tr></table></figure></p>\n<h3 id=\"使用-node\"><a href=\"#使用-node\" class=\"headerlink\" title=\"使用 node\"></a>使用 node</h3><p>通过 <code>nvm install 6.0.0</code> 完成安装后默认就能用 node 啦，不过在下载了多个版本时可以用 <code>nvm use 版本号</code> 来随意切换版本。</p>\n<h3 id=\"配置-npm-镜像\"><a href=\"#配置-npm-镜像\" class=\"headerlink\" title=\"配置 npm 镜像\"></a>配置 npm 镜像</h3><p>在安装模块时，可以通过下面两种方式配置。</p>\n<h4 id=\"临时使用\"><a href=\"#临时使用\" class=\"headerlink\" title=\"临时使用\"></a>临时使用</h4><p><code>npm --registry https://registry.npm.taobao.org install express</code></p>\n<h4 id=\"永久使用\"><a href=\"#永久使用\" class=\"headerlink\" title=\"永久使用\"></a>永久使用</h4><p><code>npm config set registry https://registry.npm.taobao.org</code></p>\n<p>尽情使用吧</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>通过 nvm 管理 nodejs 贼鸡儿爽</p>\n</blockquote>","more":"<h3 id=\"安装-nvm\"><a href=\"#安装-nvm\" class=\"headerlink\" title=\"安装 nvm\"></a>安装 nvm</h3><p>nvm 是一个开源的 Node 版本管理器，通过简单的 bash 脚本来管理、切换多个 Node.js 版本,使用 nvm 可以安装官网最新版本之前的任意版本,可以任意切换不同版本，十分方便。</p>\n<h4 id=\"下载并安装\"><a href=\"#下载并安装\" class=\"headerlink\" title=\"下载并安装\"></a>下载并安装</h4><p><code>wget https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash insatll.sh</code></p>\n<h4 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h4><p><code>nvm -v</code></p>\n<h3 id=\"更改-nvm-镜像\"><a href=\"#更改-nvm-镜像\" class=\"headerlink\" title=\"更改 nvm 镜像\"></a>更改 nvm 镜像</h3><p>设置 <code>export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</code><br>查询结果 <code>echo $NVM_NODEJS_ORG_MIRROR</code></p>\n<h3 id=\"安装-nodejs\"><a href=\"#安装-nodejs\" class=\"headerlink\" title=\"安装 nodejs\"></a>安装 nodejs</h3><p>可以通过 <code>nvm ls-remote</code> 查看可安装版本<br>执行 <code>nvm install 6.0.0</code> 安装会出现下面内容，也可以验证淘宝镜像是否配置正确<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Downloading and installing node v6.0.0...</div><div class=\"line\">Downloading https://npm.taobao.org/mirrors/node/v6.0.0/node-v6.0.0-linux-x64.tar.xz...</div></pre></td></tr></table></figure></p>\n<h3 id=\"使用-node\"><a href=\"#使用-node\" class=\"headerlink\" title=\"使用 node\"></a>使用 node</h3><p>通过 <code>nvm install 6.0.0</code> 完成安装后默认就能用 node 啦，不过在下载了多个版本时可以用 <code>nvm use 版本号</code> 来随意切换版本。</p>\n<h3 id=\"配置-npm-镜像\"><a href=\"#配置-npm-镜像\" class=\"headerlink\" title=\"配置 npm 镜像\"></a>配置 npm 镜像</h3><p>在安装模块时，可以通过下面两种方式配置。</p>\n<h4 id=\"临时使用\"><a href=\"#临时使用\" class=\"headerlink\" title=\"临时使用\"></a>临时使用</h4><p><code>npm --registry https://registry.npm.taobao.org install express</code></p>\n<h4 id=\"永久使用\"><a href=\"#永久使用\" class=\"headerlink\" title=\"永久使用\"></a>永久使用</h4><p><code>npm config set registry https://registry.npm.taobao.org</code></p>\n<p>尽情使用吧</p>"},{"title":"正则复习","abbrlink":"bff35c3a","date":"2017-04-12T09:34:30.000Z","_content":"\n{% cq %}JAVA-pattern{% endcq %}\n\n<!-- more -->\n\n### 正则表达式实例\n\njava.util.regex常用的三个类：\n\nPattern：pattern是正则表达式的表示，Pattern没有公共构造方法，要想创建一个Pattern对象需要调用其公共静态编译方法。\n\n`Pattern pattern = Pattern.comoile(String regex)`\n\nMatcher：Matcher是对输入的字符串进行解释及匹配，与Pattern类一样没有公共构造方法，需要调用Pattern对象的matcher方法来获得一个Matcher对象，参数为待匹配字符。\n\nPatternSyntaxException：PatternSyntaxException是一个非强制异常类，表示正则表达式的语法错误。\n\n```java\npublic static void main(String[] args) {\n        String regex = \".*Kiuber.*\";\n        Pattern pattern = Pattern.compile(regex);\n        String input = \"i am Kiuber hello\";\n        Matcher matcher = pattern.matcher(input);\n        System.out.println(\"是否匹配：\" + matcher.matches());\n        boolean matches = Pattern.matches(regex, input);\n        System.out.println(\"是否匹配：\" + matches);\n    }\n```\n\n\n\n### 捕获组（分组）\n\n捕获组是把多个字符当一个单独的单元处理，通过括号分别分组。\n\n例如，正则表达式(dog)创建了一个单一分组，这个分组包含\"d\",\"o\",\"g\"。\n\n捕获组是通过从左到右计算器开括号来编号的。\n\n例如（（A）（B（C））），共分为四个组。\n\n* （（A）（B（C）））\n* （A）\n* （B（C））\n* （C）\n\n可以调用matcher对象的groupCount方法查看表达式共有多少个分组\n\n特殊：group(0)，代表整个表达式，该组不在groupCount返回值中。\n\n```java\npublic static void main(String[] args) {\n  \t\t// A零次或一次 B零次或多次 C一次或多次\n        String regex = \"(A?(B*(C+)))\";\n        Pattern pattern = Pattern.compile(regex);\n        Matcher matcher = pattern1.matcher(\"\");\n        int i = matcher.groupCount();\n        System.out.println(\"组个数：\" + i);\n    }\n```\n\n输出\"组个数：3\"\n\n\n\n### 正则表达式语法\n\n|      字符       |         | 说明                                       |\n| :-----------: | :-----: | ---------------------------------------- |\n|       \\       |         | 将其后字符标记为特殊字符，如\"\\n\"匹配换行符，\"\\\\\\\"匹配\"\\\"，\"\\\\(\"匹配\"(\"。 |\n|       ^       | shift+6 | 标记字符串起始。                                 |\n|       $       | shift+4 | 标记字符串结束。                                 |\n|       *       | shift+8 | 零次或多次匹配前面的字符或子表达式，如\"zo*\"匹配\"z\"和\"zoo\"，\\*等于{0,} |\n|       +       | shift+= | 一次或多次匹配前面的字符或子表达式，如\"zo+\"匹配\"zo\"和\"zoo\"，但是与\"z\"不匹配，+等于{1,} |\n|       ?       | shift+/ | 零次或一次匹配前面的字符或子表达式，如\"do(es)\"匹配\"do\"和\"does\"，?等于{0,1} |\n|      {n}      |         | n是非负整数，表示其前面的字符或子表达式正好匹配n次，如\"o{2}\"与\"Bob\"不匹配，但与\"food\"匹配 |\n|     {n,}      |         | n是非负整数，表示至少匹配n次，如\"o{2}\"与\"Bob\"不匹配，但与\"fooooood\"匹配，当n=0时相当于\"*\"，n=1时相当于\"+\" |\n|     {n,m}     |         | n和m都为非负整数，其中n<=m，至少匹配n次，至多匹配m次           |\n|       ?       |         | 当此字符紧随任何其他限定符（\\*、+、?、{\\*n\\*}、{*n*,}、{*n*,*m*}）之后时，匹配模式是\"非贪心的\"。\"非贪心的\"模式匹配搜索到的、尽可能短的字符串，而默认的\"贪心的\"模式匹配搜索到的、尽可能长的字符串。例如，在字符串\"oooo\"中，\"o+?\"只匹配单个\"o\"，而\"o+\"匹配所有\"o\"。 |\n|       .       |         | 匹配除\"\\r\\n\"之外的任何单个字符，若要匹配的包括\"\\r\\n\"，使用[\\s\\S]。 |\n|   (pattern)   |         |                                          |\n| (?:*pattern*) |         |                                          |\n| (?=*pattern*) |         |                                          |\n| (?!*pattern*) |         |                                          |\n|     x\\|y      |         | 匹配x或y，\"z\\|food\"匹配\"z\"或\"food\"，\"(z\\|f)ood\"匹配\"zood\"或\"food\" |\n|     [xyz]     |         | 字符集。匹配中括号中的任一字符，如\"[abr]\"匹配\"Kiuber\"中的\"r\"  |\n|    [^xyz]     |         | 反向字符集。匹配未包含的任何字符，如\"\\[^abr\\]\"匹配\"Kiuber\"中的\"K\"，\"i\"，\"u\"，\"b\"，\"e\" |\n|     [a-z]     |         | 字符范围                                     |","source":"_posts/java-regex.md","raw":"---\ntitle: 正则复习\ntags:\n  - 正则\ncategories: JAVA\nabbrlink: bff35c3a\ndate: 2017-04-12 17:34:30\n---\n\n{% cq %}JAVA-pattern{% endcq %}\n\n<!-- more -->\n\n### 正则表达式实例\n\njava.util.regex常用的三个类：\n\nPattern：pattern是正则表达式的表示，Pattern没有公共构造方法，要想创建一个Pattern对象需要调用其公共静态编译方法。\n\n`Pattern pattern = Pattern.comoile(String regex)`\n\nMatcher：Matcher是对输入的字符串进行解释及匹配，与Pattern类一样没有公共构造方法，需要调用Pattern对象的matcher方法来获得一个Matcher对象，参数为待匹配字符。\n\nPatternSyntaxException：PatternSyntaxException是一个非强制异常类，表示正则表达式的语法错误。\n\n```java\npublic static void main(String[] args) {\n        String regex = \".*Kiuber.*\";\n        Pattern pattern = Pattern.compile(regex);\n        String input = \"i am Kiuber hello\";\n        Matcher matcher = pattern.matcher(input);\n        System.out.println(\"是否匹配：\" + matcher.matches());\n        boolean matches = Pattern.matches(regex, input);\n        System.out.println(\"是否匹配：\" + matches);\n    }\n```\n\n\n\n### 捕获组（分组）\n\n捕获组是把多个字符当一个单独的单元处理，通过括号分别分组。\n\n例如，正则表达式(dog)创建了一个单一分组，这个分组包含\"d\",\"o\",\"g\"。\n\n捕获组是通过从左到右计算器开括号来编号的。\n\n例如（（A）（B（C））），共分为四个组。\n\n* （（A）（B（C）））\n* （A）\n* （B（C））\n* （C）\n\n可以调用matcher对象的groupCount方法查看表达式共有多少个分组\n\n特殊：group(0)，代表整个表达式，该组不在groupCount返回值中。\n\n```java\npublic static void main(String[] args) {\n  \t\t// A零次或一次 B零次或多次 C一次或多次\n        String regex = \"(A?(B*(C+)))\";\n        Pattern pattern = Pattern.compile(regex);\n        Matcher matcher = pattern1.matcher(\"\");\n        int i = matcher.groupCount();\n        System.out.println(\"组个数：\" + i);\n    }\n```\n\n输出\"组个数：3\"\n\n\n\n### 正则表达式语法\n\n|      字符       |         | 说明                                       |\n| :-----------: | :-----: | ---------------------------------------- |\n|       \\       |         | 将其后字符标记为特殊字符，如\"\\n\"匹配换行符，\"\\\\\\\"匹配\"\\\"，\"\\\\(\"匹配\"(\"。 |\n|       ^       | shift+6 | 标记字符串起始。                                 |\n|       $       | shift+4 | 标记字符串结束。                                 |\n|       *       | shift+8 | 零次或多次匹配前面的字符或子表达式，如\"zo*\"匹配\"z\"和\"zoo\"，\\*等于{0,} |\n|       +       | shift+= | 一次或多次匹配前面的字符或子表达式，如\"zo+\"匹配\"zo\"和\"zoo\"，但是与\"z\"不匹配，+等于{1,} |\n|       ?       | shift+/ | 零次或一次匹配前面的字符或子表达式，如\"do(es)\"匹配\"do\"和\"does\"，?等于{0,1} |\n|      {n}      |         | n是非负整数，表示其前面的字符或子表达式正好匹配n次，如\"o{2}\"与\"Bob\"不匹配，但与\"food\"匹配 |\n|     {n,}      |         | n是非负整数，表示至少匹配n次，如\"o{2}\"与\"Bob\"不匹配，但与\"fooooood\"匹配，当n=0时相当于\"*\"，n=1时相当于\"+\" |\n|     {n,m}     |         | n和m都为非负整数，其中n<=m，至少匹配n次，至多匹配m次           |\n|       ?       |         | 当此字符紧随任何其他限定符（\\*、+、?、{\\*n\\*}、{*n*,}、{*n*,*m*}）之后时，匹配模式是\"非贪心的\"。\"非贪心的\"模式匹配搜索到的、尽可能短的字符串，而默认的\"贪心的\"模式匹配搜索到的、尽可能长的字符串。例如，在字符串\"oooo\"中，\"o+?\"只匹配单个\"o\"，而\"o+\"匹配所有\"o\"。 |\n|       .       |         | 匹配除\"\\r\\n\"之外的任何单个字符，若要匹配的包括\"\\r\\n\"，使用[\\s\\S]。 |\n|   (pattern)   |         |                                          |\n| (?:*pattern*) |         |                                          |\n| (?=*pattern*) |         |                                          |\n| (?!*pattern*) |         |                                          |\n|     x\\|y      |         | 匹配x或y，\"z\\|food\"匹配\"z\"或\"food\"，\"(z\\|f)ood\"匹配\"zood\"或\"food\" |\n|     [xyz]     |         | 字符集。匹配中括号中的任一字符，如\"[abr]\"匹配\"Kiuber\"中的\"r\"  |\n|    [^xyz]     |         | 反向字符集。匹配未包含的任何字符，如\"\\[^abr\\]\"匹配\"Kiuber\"中的\"K\"，\"i\"，\"u\"，\"b\"，\"e\" |\n|     [a-z]     |         | 字符范围                                     |","slug":"java-regex","published":1,"updated":"2017-06-08T12:20:29.303Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih2k001ssv1fgzij4eut","content":"<blockquote class=\"blockquote-center\"><p>JAVA-pattern</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"正则表达式实例\"><a href=\"#正则表达式实例\" class=\"headerlink\" title=\"正则表达式实例\"></a>正则表达式实例</h3><p>java.util.regex常用的三个类：</p>\n<p>Pattern：pattern是正则表达式的表示，Pattern没有公共构造方法，要想创建一个Pattern对象需要调用其公共静态编译方法。</p>\n<p><code>Pattern pattern = Pattern.comoile(String regex)</code></p>\n<p>Matcher：Matcher是对输入的字符串进行解释及匹配，与Pattern类一样没有公共构造方法，需要调用Pattern对象的matcher方法来获得一个Matcher对象，参数为待匹配字符。</p>\n<p>PatternSyntaxException：PatternSyntaxException是一个非强制异常类，表示正则表达式的语法错误。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">        String regex = <span class=\"string\">\".*Kiuber.*\"</span>;</div><div class=\"line\">        Pattern pattern = Pattern.compile(regex);</div><div class=\"line\">        String input = <span class=\"string\">\"i am Kiuber hello\"</span>;</div><div class=\"line\">        Matcher matcher = pattern.matcher(input);</div><div class=\"line\">        System.out.println(<span class=\"string\">\"是否匹配：\"</span> + matcher.matches());</div><div class=\"line\">        <span class=\"keyword\">boolean</span> matches = Pattern.matches(regex, input);</div><div class=\"line\">        System.out.println(<span class=\"string\">\"是否匹配：\"</span> + matches);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"捕获组（分组）\"><a href=\"#捕获组（分组）\" class=\"headerlink\" title=\"捕获组（分组）\"></a>捕获组（分组）</h3><p>捕获组是把多个字符当一个单独的单元处理，通过括号分别分组。</p>\n<p>例如，正则表达式(dog)创建了一个单一分组，这个分组包含”d”,”o”,”g”。</p>\n<p>捕获组是通过从左到右计算器开括号来编号的。</p>\n<p>例如（（A）（B（C））），共分为四个组。</p>\n<ul>\n<li>（（A）（B（C）））</li>\n<li>（A）</li>\n<li>（B（C））</li>\n<li>（C）</li>\n</ul>\n<p>可以调用matcher对象的groupCount方法查看表达式共有多少个分组</p>\n<p>特殊：group(0)，代表整个表达式，该组不在groupCount返回值中。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">  \t\t<span class=\"comment\">// A零次或一次 B零次或多次 C一次或多次</span></div><div class=\"line\">        String regex = <span class=\"string\">\"(A?(B*(C+)))\"</span>;</div><div class=\"line\">        Pattern pattern = Pattern.compile(regex);</div><div class=\"line\">        Matcher matcher = pattern1.matcher(<span class=\"string\">\"\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> i = matcher.groupCount();</div><div class=\"line\">        System.out.println(<span class=\"string\">\"组个数：\"</span> + i);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>输出”组个数：3”</p>\n<h3 id=\"正则表达式语法\"><a href=\"#正则表达式语法\" class=\"headerlink\" title=\"正则表达式语法\"></a>正则表达式语法</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">字符</th>\n<th style=\"text-align:center\"></th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\</td>\n<td style=\"text-align:center\"></td>\n<td>将其后字符标记为特殊字符，如”\\n”匹配换行符，”\\\\”匹配”\\”，”\\(“匹配”(“。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">shift+6</td>\n<td>标记字符串起始。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$</td>\n<td style=\"text-align:center\">shift+4</td>\n<td>标记字符串结束。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:center\">shift+8</td>\n<td>零次或多次匹配前面的字符或子表达式，如”zo<em>“匹配”z”和”zoo”，\\</em>等于{0,}</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">shift+=</td>\n<td>一次或多次匹配前面的字符或子表达式，如”zo+”匹配”zo”和”zoo”，但是与”z”不匹配，+等于{1,}</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:center\">shift+/</td>\n<td>零次或一次匹配前面的字符或子表达式，如”do(es)”匹配”do”和”does”，?等于{0,1}</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n}</td>\n<td style=\"text-align:center\"></td>\n<td>n是非负整数，表示其前面的字符或子表达式正好匹配n次，如”o{2}”与”Bob”不匹配，但与”food”匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,}</td>\n<td style=\"text-align:center\"></td>\n<td>n是非负整数，表示至少匹配n次，如”o{2}”与”Bob”不匹配，但与”fooooood”匹配，当n=0时相当于”*”，n=1时相当于”+”</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,m}</td>\n<td style=\"text-align:center\"></td>\n<td>n和m都为非负整数，其中n&lt;=m，至少匹配n次，至多匹配m次</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:center\"></td>\n<td>当此字符紧随任何其他限定符（*、+、?、{*n*}、{<em>n</em>,}、{<em>n</em>,<em>m</em>}）之后时，匹配模式是”非贪心的”。”非贪心的”模式匹配搜索到的、尽可能短的字符串，而默认的”贪心的”模式匹配搜索到的、尽可能长的字符串。例如，在字符串”oooo”中，”o+?”只匹配单个”o”，而”o+”匹配所有”o”。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\"></td>\n<td>匹配除”\\r\\n”之外的任何单个字符，若要匹配的包括”\\r\\n”，使用[\\s\\S]。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(pattern)</td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(?:<em>pattern</em>)</td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(?=<em>pattern</em>)</td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(?!<em>pattern</em>)</td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">x\\</td>\n<td style=\"text-align:center\">y</td>\n<td></td>\n<td>匹配x或y，”z\\</td>\n<td>food”匹配”z”或”food”，”(z\\</td>\n<td>f)ood”匹配”zood”或”food”</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[xyz]</td>\n<td style=\"text-align:center\"></td>\n<td>字符集。匹配中括号中的任一字符，如”[abr]”匹配”Kiuber”中的”r”</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^xyz]</td>\n<td style=\"text-align:center\"></td>\n<td>反向字符集。匹配未包含的任何字符，如”[^abr]“匹配”Kiuber”中的”K”，”i”，”u”，”b”，”e”</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[a-z]</td>\n<td style=\"text-align:center\"></td>\n<td>字符范围</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>JAVA-pattern</p>\n</blockquote>","more":"<h3 id=\"正则表达式实例\"><a href=\"#正则表达式实例\" class=\"headerlink\" title=\"正则表达式实例\"></a>正则表达式实例</h3><p>java.util.regex常用的三个类：</p>\n<p>Pattern：pattern是正则表达式的表示，Pattern没有公共构造方法，要想创建一个Pattern对象需要调用其公共静态编译方法。</p>\n<p><code>Pattern pattern = Pattern.comoile(String regex)</code></p>\n<p>Matcher：Matcher是对输入的字符串进行解释及匹配，与Pattern类一样没有公共构造方法，需要调用Pattern对象的matcher方法来获得一个Matcher对象，参数为待匹配字符。</p>\n<p>PatternSyntaxException：PatternSyntaxException是一个非强制异常类，表示正则表达式的语法错误。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">        String regex = <span class=\"string\">\".*Kiuber.*\"</span>;</div><div class=\"line\">        Pattern pattern = Pattern.compile(regex);</div><div class=\"line\">        String input = <span class=\"string\">\"i am Kiuber hello\"</span>;</div><div class=\"line\">        Matcher matcher = pattern.matcher(input);</div><div class=\"line\">        System.out.println(<span class=\"string\">\"是否匹配：\"</span> + matcher.matches());</div><div class=\"line\">        <span class=\"keyword\">boolean</span> matches = Pattern.matches(regex, input);</div><div class=\"line\">        System.out.println(<span class=\"string\">\"是否匹配：\"</span> + matches);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"捕获组（分组）\"><a href=\"#捕获组（分组）\" class=\"headerlink\" title=\"捕获组（分组）\"></a>捕获组（分组）</h3><p>捕获组是把多个字符当一个单独的单元处理，通过括号分别分组。</p>\n<p>例如，正则表达式(dog)创建了一个单一分组，这个分组包含”d”,”o”,”g”。</p>\n<p>捕获组是通过从左到右计算器开括号来编号的。</p>\n<p>例如（（A）（B（C））），共分为四个组。</p>\n<ul>\n<li>（（A）（B（C）））</li>\n<li>（A）</li>\n<li>（B（C））</li>\n<li>（C）</li>\n</ul>\n<p>可以调用matcher对象的groupCount方法查看表达式共有多少个分组</p>\n<p>特殊：group(0)，代表整个表达式，该组不在groupCount返回值中。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">  \t\t<span class=\"comment\">// A零次或一次 B零次或多次 C一次或多次</span></div><div class=\"line\">        String regex = <span class=\"string\">\"(A?(B*(C+)))\"</span>;</div><div class=\"line\">        Pattern pattern = Pattern.compile(regex);</div><div class=\"line\">        Matcher matcher = pattern1.matcher(<span class=\"string\">\"\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> i = matcher.groupCount();</div><div class=\"line\">        System.out.println(<span class=\"string\">\"组个数：\"</span> + i);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>输出”组个数：3”</p>\n<h3 id=\"正则表达式语法\"><a href=\"#正则表达式语法\" class=\"headerlink\" title=\"正则表达式语法\"></a>正则表达式语法</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">字符</th>\n<th style=\"text-align:center\"></th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\</td>\n<td style=\"text-align:center\"></td>\n<td>将其后字符标记为特殊字符，如”\\n”匹配换行符，”\\\\”匹配”\\”，”\\(“匹配”(“。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">shift+6</td>\n<td>标记字符串起始。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$</td>\n<td style=\"text-align:center\">shift+4</td>\n<td>标记字符串结束。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:center\">shift+8</td>\n<td>零次或多次匹配前面的字符或子表达式，如”zo<em>“匹配”z”和”zoo”，\\</em>等于{0,}</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">shift+=</td>\n<td>一次或多次匹配前面的字符或子表达式，如”zo+”匹配”zo”和”zoo”，但是与”z”不匹配，+等于{1,}</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:center\">shift+/</td>\n<td>零次或一次匹配前面的字符或子表达式，如”do(es)”匹配”do”和”does”，?等于{0,1}</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n}</td>\n<td style=\"text-align:center\"></td>\n<td>n是非负整数，表示其前面的字符或子表达式正好匹配n次，如”o{2}”与”Bob”不匹配，但与”food”匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,}</td>\n<td style=\"text-align:center\"></td>\n<td>n是非负整数，表示至少匹配n次，如”o{2}”与”Bob”不匹配，但与”fooooood”匹配，当n=0时相当于”*”，n=1时相当于”+”</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,m}</td>\n<td style=\"text-align:center\"></td>\n<td>n和m都为非负整数，其中n&lt;=m，至少匹配n次，至多匹配m次</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:center\"></td>\n<td>当此字符紧随任何其他限定符（*、+、?、{*n*}、{<em>n</em>,}、{<em>n</em>,<em>m</em>}）之后时，匹配模式是”非贪心的”。”非贪心的”模式匹配搜索到的、尽可能短的字符串，而默认的”贪心的”模式匹配搜索到的、尽可能长的字符串。例如，在字符串”oooo”中，”o+?”只匹配单个”o”，而”o+”匹配所有”o”。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\"></td>\n<td>匹配除”\\r\\n”之外的任何单个字符，若要匹配的包括”\\r\\n”，使用[\\s\\S]。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(pattern)</td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(?:<em>pattern</em>)</td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(?=<em>pattern</em>)</td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">(?!<em>pattern</em>)</td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">x\\</td>\n<td style=\"text-align:center\">y</td>\n<td></td>\n<td>匹配x或y，”z\\</td>\n<td>food”匹配”z”或”food”，”(z\\</td>\n<td>f)ood”匹配”zood”或”food”</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[xyz]</td>\n<td style=\"text-align:center\"></td>\n<td>字符集。匹配中括号中的任一字符，如”[abr]”匹配”Kiuber”中的”r”</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^xyz]</td>\n<td style=\"text-align:center\"></td>\n<td>反向字符集。匹配未包含的任何字符，如”[^abr]“匹配”Kiuber”中的”K”，”i”，”u”，”b”，”e”</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[a-z]</td>\n<td style=\"text-align:center\"></td>\n<td>字符范围</td>\n</tr>\n</tbody>\n</table>"},{"title":"JAVA-WEB之Servlet","abbrlink":"884af78a","date":"2017-03-21T09:39:00.000Z","_content":"\n{% cq %}Java Servlet，是用Java编写的服务器端程序。 其主要功能在于交互式地浏览和修改数据，生成动态Web内容。{% endcq %}\n\n\n<!--more-->\n\n再学Servlet之前先了解基础的服务器相关。。\n\n### Tomcat目录结构\n/bin 存放各种平台下用于启动和停止服务器命令文件 （startup.bat开启服务器，shutdown.bat关闭）\n/config 存放各种配置文件\n/lib 存放服务器所需的JAR文件\n/logs 没啥好说的\n/temp 临时文件\n/webapps 要发布的应用文件夹\n/work 存放根据Servlet生成的字节码文件。\n\n### WEB-INF目录\n1.客户端无法访问其内部文件\n2.web.xml为项目配置文件\n3.classes文件夹用于放置*.class文件\n4.lib文件夹用户存放jar包\n\n### Tomcat容器等级\nTomcat的容器分为四个等级，Servlet的容器管理Context容器，一个Context对应一个Web工程。\n                                                    -->Context\nTomcat-->Container容器-->Engine-->HOST-->Servlet容器\n                                                    -->Context\n### Servlet\nServlet（Server Applet），全称Java Servlet，是用Java编写的服务器端程序。 其主要功能在于交互式地浏览和修改数据，生成动态Web内容。\n\nServlet生命周期\nServlet 通过调用 init () 方法进行初始化。\nServlet 调用 service() 方法来处理客户端的请求。\nServlet 通过调用 destroy() 方法终止（结束）。\n最后，Servlet 是由 JVM 的垃圾回收器进行垃圾回收的。\n\n### Servlet简单使用\n1.新建一个HelloServlet类继承HttpServlet\n2.重写doGet()或者doPost()方法\n3.在web.xml中注册Servlet\n4.在jsp中写一个访问servlet的超链接\n\n在一个请求当中，实际流程是 网页servlet别名-->web.xml中<servlet-mapping>的<url-pattern>--><servlet-name>访问<servlet>中的<servlet-name>中的<servlet-class>\n也就是说假如前端是POST请求，查看网页源码可以看到ACTION的路径，但是这个路径一般不与类名相同，可以避免一些安全问题。\n\n当然在工程右键直接新建一个Servlet，像MyEclipse这样的工具直接帮你写好web.xml的配置。\n\n\n### Tomcat装载Servlet的三种情况\n\n1.在web.xml中注册的。\n\t在<servlet></servlet>节点下添加<loadon-startup>1</loadon-startup>，中间数字越小优先级别越高。\n2.在Servlet容器启动后，客户端首次向其发送请求。\n3.Servlet类文件被更新后，将重新装载Servlet。\n\n注：当Servlet容器把Servlet实例加载后将创建Servlet实例并调用init()方法，在整个Servlet整个生命周期内，init()方法只被调用一次且Servlet实例是常驻于内存的。\n\n当第一次请求Servlet时：\nServlet容器实例化Servlet之后是-->构造方法-->init()-->doGet()或doPsost() 当服务器停止工作时执行onDestroy()方法。\n\n当在web.xml中配置loadon-startup时\n先执行数字小的Servlet，并且也是先执行构造方法然后执行初始化方法。\n\n当项目已经部署到服务器且服务器正常工作时\n修改源码会自动编译并且自动装载Servlet。\n\n### JSP九大内置对象与Servlet\n\n| JSP对象       | Servlet               |\n| ----------- | --------------------- |\n| out         | resp.getWrite         |\n| request     | service方法中的req参数      |\n| response    | service方法中的resp参数     |\n| session     | req.getSession()方法    |\n| application | getServletContext()方法 |\n| exception   | Throwable             |\n| page        | this                  |\n| pageContext | PageContext           |\n| Config      | getServletConfig()方法  |\n\n### Servlet路径跳转\n绝对路径：放之四海而皆准的路径\n相对路径：相对于当前资源的路径\n\n#### 1.jsp跳转到Servlet\n相对路径：\n下面第一个斜线是指服务器根目录，但是在<url-pattern>必须以斜线开头\n<a href=\"/servlet/HelloServlet\">访问HelloServlet</a>\n绝对路径：\npath变量代表的是项目的根目录\n<a href=\"<%=path%>/servlet/HelloServlet\"></a>\n#### 2.Servlet跳转到JSP\n请求重定向方式跳转到test.jsp，当前路径是ServletPathDirection/servlet\nresponse.sendRedirect(resquest.getContextPath() + \"/test.jsp\");\n服务器内部跳转,斜线代表项目根目录\nrequest.getRequestDispatcher(\"/test.jsp\").forward(request,response);","source":"_posts/java-web-servlet.md","raw":"---\ntitle: JAVA-WEB之Servlet\ntags:\n  - Servlet\ncategories: JAVA WEB\nabbrlink: 884af78a\ndate: 2017-03-21 17:39:00\n---\n\n{% cq %}Java Servlet，是用Java编写的服务器端程序。 其主要功能在于交互式地浏览和修改数据，生成动态Web内容。{% endcq %}\n\n\n<!--more-->\n\n再学Servlet之前先了解基础的服务器相关。。\n\n### Tomcat目录结构\n/bin 存放各种平台下用于启动和停止服务器命令文件 （startup.bat开启服务器，shutdown.bat关闭）\n/config 存放各种配置文件\n/lib 存放服务器所需的JAR文件\n/logs 没啥好说的\n/temp 临时文件\n/webapps 要发布的应用文件夹\n/work 存放根据Servlet生成的字节码文件。\n\n### WEB-INF目录\n1.客户端无法访问其内部文件\n2.web.xml为项目配置文件\n3.classes文件夹用于放置*.class文件\n4.lib文件夹用户存放jar包\n\n### Tomcat容器等级\nTomcat的容器分为四个等级，Servlet的容器管理Context容器，一个Context对应一个Web工程。\n                                                    -->Context\nTomcat-->Container容器-->Engine-->HOST-->Servlet容器\n                                                    -->Context\n### Servlet\nServlet（Server Applet），全称Java Servlet，是用Java编写的服务器端程序。 其主要功能在于交互式地浏览和修改数据，生成动态Web内容。\n\nServlet生命周期\nServlet 通过调用 init () 方法进行初始化。\nServlet 调用 service() 方法来处理客户端的请求。\nServlet 通过调用 destroy() 方法终止（结束）。\n最后，Servlet 是由 JVM 的垃圾回收器进行垃圾回收的。\n\n### Servlet简单使用\n1.新建一个HelloServlet类继承HttpServlet\n2.重写doGet()或者doPost()方法\n3.在web.xml中注册Servlet\n4.在jsp中写一个访问servlet的超链接\n\n在一个请求当中，实际流程是 网页servlet别名-->web.xml中<servlet-mapping>的<url-pattern>--><servlet-name>访问<servlet>中的<servlet-name>中的<servlet-class>\n也就是说假如前端是POST请求，查看网页源码可以看到ACTION的路径，但是这个路径一般不与类名相同，可以避免一些安全问题。\n\n当然在工程右键直接新建一个Servlet，像MyEclipse这样的工具直接帮你写好web.xml的配置。\n\n\n### Tomcat装载Servlet的三种情况\n\n1.在web.xml中注册的。\n\t在<servlet></servlet>节点下添加<loadon-startup>1</loadon-startup>，中间数字越小优先级别越高。\n2.在Servlet容器启动后，客户端首次向其发送请求。\n3.Servlet类文件被更新后，将重新装载Servlet。\n\n注：当Servlet容器把Servlet实例加载后将创建Servlet实例并调用init()方法，在整个Servlet整个生命周期内，init()方法只被调用一次且Servlet实例是常驻于内存的。\n\n当第一次请求Servlet时：\nServlet容器实例化Servlet之后是-->构造方法-->init()-->doGet()或doPsost() 当服务器停止工作时执行onDestroy()方法。\n\n当在web.xml中配置loadon-startup时\n先执行数字小的Servlet，并且也是先执行构造方法然后执行初始化方法。\n\n当项目已经部署到服务器且服务器正常工作时\n修改源码会自动编译并且自动装载Servlet。\n\n### JSP九大内置对象与Servlet\n\n| JSP对象       | Servlet               |\n| ----------- | --------------------- |\n| out         | resp.getWrite         |\n| request     | service方法中的req参数      |\n| response    | service方法中的resp参数     |\n| session     | req.getSession()方法    |\n| application | getServletContext()方法 |\n| exception   | Throwable             |\n| page        | this                  |\n| pageContext | PageContext           |\n| Config      | getServletConfig()方法  |\n\n### Servlet路径跳转\n绝对路径：放之四海而皆准的路径\n相对路径：相对于当前资源的路径\n\n#### 1.jsp跳转到Servlet\n相对路径：\n下面第一个斜线是指服务器根目录，但是在<url-pattern>必须以斜线开头\n<a href=\"/servlet/HelloServlet\">访问HelloServlet</a>\n绝对路径：\npath变量代表的是项目的根目录\n<a href=\"<%=path%>/servlet/HelloServlet\"></a>\n#### 2.Servlet跳转到JSP\n请求重定向方式跳转到test.jsp，当前路径是ServletPathDirection/servlet\nresponse.sendRedirect(resquest.getContextPath() + \"/test.jsp\");\n服务器内部跳转,斜线代表项目根目录\nrequest.getRequestDispatcher(\"/test.jsp\").forward(request,response);","slug":"java-web-servlet","published":1,"updated":"2017-06-08T12:20:29.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih2o001usv1fu35ybr43","content":"<blockquote class=\"blockquote-center\"><p>Java Servlet，是用Java编写的服务器端程序。 其主要功能在于交互式地浏览和修改数据，生成动态Web内容。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>再学Servlet之前先了解基础的服务器相关。。</p>\n<h3 id=\"Tomcat目录结构\"><a href=\"#Tomcat目录结构\" class=\"headerlink\" title=\"Tomcat目录结构\"></a>Tomcat目录结构</h3><p>/bin 存放各种平台下用于启动和停止服务器命令文件 （startup.bat开启服务器，shutdown.bat关闭）<br>/config 存放各种配置文件<br>/lib 存放服务器所需的JAR文件<br>/logs 没啥好说的<br>/temp 临时文件<br>/webapps 要发布的应用文件夹<br>/work 存放根据Servlet生成的字节码文件。</p>\n<h3 id=\"WEB-INF目录\"><a href=\"#WEB-INF目录\" class=\"headerlink\" title=\"WEB-INF目录\"></a>WEB-INF目录</h3><p>1.客户端无法访问其内部文件<br>2.web.xml为项目配置文件<br>3.classes文件夹用于放置*.class文件<br>4.lib文件夹用户存放jar包</p>\n<h3 id=\"Tomcat容器等级\"><a href=\"#Tomcat容器等级\" class=\"headerlink\" title=\"Tomcat容器等级\"></a>Tomcat容器等级</h3><p>Tomcat的容器分为四个等级，Servlet的容器管理Context容器，一个Context对应一个Web工程。<br>                                                    –&gt;Context<br>Tomcat–&gt;Container容器–&gt;Engine–&gt;HOST–&gt;Servlet容器<br>                                                    –&gt;Context</p>\n<h3 id=\"Servlet\"><a href=\"#Servlet\" class=\"headerlink\" title=\"Servlet\"></a>Servlet</h3><p>Servlet（Server Applet），全称Java Servlet，是用Java编写的服务器端程序。 其主要功能在于交互式地浏览和修改数据，生成动态Web内容。</p>\n<p>Servlet生命周期<br>Servlet 通过调用 init () 方法进行初始化。<br>Servlet 调用 service() 方法来处理客户端的请求。<br>Servlet 通过调用 destroy() 方法终止（结束）。<br>最后，Servlet 是由 JVM 的垃圾回收器进行垃圾回收的。</p>\n<h3 id=\"Servlet简单使用\"><a href=\"#Servlet简单使用\" class=\"headerlink\" title=\"Servlet简单使用\"></a>Servlet简单使用</h3><p>1.新建一个HelloServlet类继承HttpServlet<br>2.重写doGet()或者doPost()方法<br>3.在web.xml中注册Servlet<br>4.在jsp中写一个访问servlet的超链接</p>\n<p>在一个请求当中，实际流程是 网页servlet别名–&gt;web.xml中<servlet-mapping>的<url-pattern>–&gt;<servlet-name>访问<servlet>中的<servlet-name>中的<servlet-class><br>也就是说假如前端是POST请求，查看网页源码可以看到ACTION的路径，但是这个路径一般不与类名相同，可以避免一些安全问题。</servlet-class></servlet-name></servlet></servlet-name></url-pattern></servlet-mapping></p>\n<p>当然在工程右键直接新建一个Servlet，像MyEclipse这样的工具直接帮你写好web.xml的配置。</p>\n<h3 id=\"Tomcat装载Servlet的三种情况\"><a href=\"#Tomcat装载Servlet的三种情况\" class=\"headerlink\" title=\"Tomcat装载Servlet的三种情况\"></a>Tomcat装载Servlet的三种情况</h3><p>1.在web.xml中注册的。<br>    在<servlet></servlet>节点下添加<loadon-startup>1</loadon-startup>，中间数字越小优先级别越高。<br>2.在Servlet容器启动后，客户端首次向其发送请求。<br>3.Servlet类文件被更新后，将重新装载Servlet。</p>\n<p>注：当Servlet容器把Servlet实例加载后将创建Servlet实例并调用init()方法，在整个Servlet整个生命周期内，init()方法只被调用一次且Servlet实例是常驻于内存的。</p>\n<p>当第一次请求Servlet时：<br>Servlet容器实例化Servlet之后是–&gt;构造方法–&gt;init()–&gt;doGet()或doPsost() 当服务器停止工作时执行onDestroy()方法。</p>\n<p>当在web.xml中配置loadon-startup时<br>先执行数字小的Servlet，并且也是先执行构造方法然后执行初始化方法。</p>\n<p>当项目已经部署到服务器且服务器正常工作时<br>修改源码会自动编译并且自动装载Servlet。</p>\n<h3 id=\"JSP九大内置对象与Servlet\"><a href=\"#JSP九大内置对象与Servlet\" class=\"headerlink\" title=\"JSP九大内置对象与Servlet\"></a>JSP九大内置对象与Servlet</h3><table>\n<thead>\n<tr>\n<th>JSP对象</th>\n<th>Servlet</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>out</td>\n<td>resp.getWrite</td>\n</tr>\n<tr>\n<td>request</td>\n<td>service方法中的req参数</td>\n</tr>\n<tr>\n<td>response</td>\n<td>service方法中的resp参数</td>\n</tr>\n<tr>\n<td>session</td>\n<td>req.getSession()方法</td>\n</tr>\n<tr>\n<td>application</td>\n<td>getServletContext()方法</td>\n</tr>\n<tr>\n<td>exception</td>\n<td>Throwable</td>\n</tr>\n<tr>\n<td>page</td>\n<td>this</td>\n</tr>\n<tr>\n<td>pageContext</td>\n<td>PageContext</td>\n</tr>\n<tr>\n<td>Config</td>\n<td>getServletConfig()方法</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Servlet路径跳转\"><a href=\"#Servlet路径跳转\" class=\"headerlink\" title=\"Servlet路径跳转\"></a>Servlet路径跳转</h3><p>绝对路径：放之四海而皆准的路径<br>相对路径：相对于当前资源的路径</p>\n<h4 id=\"1-jsp跳转到Servlet\"><a href=\"#1-jsp跳转到Servlet\" class=\"headerlink\" title=\"1.jsp跳转到Servlet\"></a>1.jsp跳转到Servlet</h4><p>相对路径：<br>下面第一个斜线是指服务器根目录，但是在<url-pattern>必须以斜线开头<br><a href=\"/servlet/HelloServlet\">访问HelloServlet</a><br>绝对路径：<br>path变量代表的是项目的根目录<br><a href=\"<%=path%>/servlet/HelloServlet\"></a></url-pattern></p>\n<h4 id=\"2-Servlet跳转到JSP\"><a href=\"#2-Servlet跳转到JSP\" class=\"headerlink\" title=\"2.Servlet跳转到JSP\"></a>2.Servlet跳转到JSP</h4><p>请求重定向方式跳转到test.jsp，当前路径是ServletPathDirection/servlet<br>response.sendRedirect(resquest.getContextPath() + “/test.jsp”);<br>服务器内部跳转,斜线代表项目根目录<br>request.getRequestDispatcher(“/test.jsp”).forward(request,response);</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>Java Servlet，是用Java编写的服务器端程序。 其主要功能在于交互式地浏览和修改数据，生成动态Web内容。</p>\n</blockquote>","more":"<p>再学Servlet之前先了解基础的服务器相关。。</p>\n<h3 id=\"Tomcat目录结构\"><a href=\"#Tomcat目录结构\" class=\"headerlink\" title=\"Tomcat目录结构\"></a>Tomcat目录结构</h3><p>/bin 存放各种平台下用于启动和停止服务器命令文件 （startup.bat开启服务器，shutdown.bat关闭）<br>/config 存放各种配置文件<br>/lib 存放服务器所需的JAR文件<br>/logs 没啥好说的<br>/temp 临时文件<br>/webapps 要发布的应用文件夹<br>/work 存放根据Servlet生成的字节码文件。</p>\n<h3 id=\"WEB-INF目录\"><a href=\"#WEB-INF目录\" class=\"headerlink\" title=\"WEB-INF目录\"></a>WEB-INF目录</h3><p>1.客户端无法访问其内部文件<br>2.web.xml为项目配置文件<br>3.classes文件夹用于放置*.class文件<br>4.lib文件夹用户存放jar包</p>\n<h3 id=\"Tomcat容器等级\"><a href=\"#Tomcat容器等级\" class=\"headerlink\" title=\"Tomcat容器等级\"></a>Tomcat容器等级</h3><p>Tomcat的容器分为四个等级，Servlet的容器管理Context容器，一个Context对应一个Web工程。<br>                                                    –&gt;Context<br>Tomcat–&gt;Container容器–&gt;Engine–&gt;HOST–&gt;Servlet容器<br>                                                    –&gt;Context</p>\n<h3 id=\"Servlet\"><a href=\"#Servlet\" class=\"headerlink\" title=\"Servlet\"></a>Servlet</h3><p>Servlet（Server Applet），全称Java Servlet，是用Java编写的服务器端程序。 其主要功能在于交互式地浏览和修改数据，生成动态Web内容。</p>\n<p>Servlet生命周期<br>Servlet 通过调用 init () 方法进行初始化。<br>Servlet 调用 service() 方法来处理客户端的请求。<br>Servlet 通过调用 destroy() 方法终止（结束）。<br>最后，Servlet 是由 JVM 的垃圾回收器进行垃圾回收的。</p>\n<h3 id=\"Servlet简单使用\"><a href=\"#Servlet简单使用\" class=\"headerlink\" title=\"Servlet简单使用\"></a>Servlet简单使用</h3><p>1.新建一个HelloServlet类继承HttpServlet<br>2.重写doGet()或者doPost()方法<br>3.在web.xml中注册Servlet<br>4.在jsp中写一个访问servlet的超链接</p>\n<p>在一个请求当中，实际流程是 网页servlet别名–&gt;web.xml中<servlet-mapping>的<url-pattern>–&gt;<servlet-name>访问<servlet>中的<servlet-name>中的<servlet-class><br>也就是说假如前端是POST请求，查看网页源码可以看到ACTION的路径，但是这个路径一般不与类名相同，可以避免一些安全问题。</servlet-class></servlet-name></servlet></servlet-name></url-pattern></servlet-mapping></p>\n<p>当然在工程右键直接新建一个Servlet，像MyEclipse这样的工具直接帮你写好web.xml的配置。</p>\n<h3 id=\"Tomcat装载Servlet的三种情况\"><a href=\"#Tomcat装载Servlet的三种情况\" class=\"headerlink\" title=\"Tomcat装载Servlet的三种情况\"></a>Tomcat装载Servlet的三种情况</h3><p>1.在web.xml中注册的。<br>    在<servlet></servlet>节点下添加<loadon-startup>1</loadon-startup>，中间数字越小优先级别越高。<br>2.在Servlet容器启动后，客户端首次向其发送请求。<br>3.Servlet类文件被更新后，将重新装载Servlet。</p>\n<p>注：当Servlet容器把Servlet实例加载后将创建Servlet实例并调用init()方法，在整个Servlet整个生命周期内，init()方法只被调用一次且Servlet实例是常驻于内存的。</p>\n<p>当第一次请求Servlet时：<br>Servlet容器实例化Servlet之后是–&gt;构造方法–&gt;init()–&gt;doGet()或doPsost() 当服务器停止工作时执行onDestroy()方法。</p>\n<p>当在web.xml中配置loadon-startup时<br>先执行数字小的Servlet，并且也是先执行构造方法然后执行初始化方法。</p>\n<p>当项目已经部署到服务器且服务器正常工作时<br>修改源码会自动编译并且自动装载Servlet。</p>\n<h3 id=\"JSP九大内置对象与Servlet\"><a href=\"#JSP九大内置对象与Servlet\" class=\"headerlink\" title=\"JSP九大内置对象与Servlet\"></a>JSP九大内置对象与Servlet</h3><table>\n<thead>\n<tr>\n<th>JSP对象</th>\n<th>Servlet</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>out</td>\n<td>resp.getWrite</td>\n</tr>\n<tr>\n<td>request</td>\n<td>service方法中的req参数</td>\n</tr>\n<tr>\n<td>response</td>\n<td>service方法中的resp参数</td>\n</tr>\n<tr>\n<td>session</td>\n<td>req.getSession()方法</td>\n</tr>\n<tr>\n<td>application</td>\n<td>getServletContext()方法</td>\n</tr>\n<tr>\n<td>exception</td>\n<td>Throwable</td>\n</tr>\n<tr>\n<td>page</td>\n<td>this</td>\n</tr>\n<tr>\n<td>pageContext</td>\n<td>PageContext</td>\n</tr>\n<tr>\n<td>Config</td>\n<td>getServletConfig()方法</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Servlet路径跳转\"><a href=\"#Servlet路径跳转\" class=\"headerlink\" title=\"Servlet路径跳转\"></a>Servlet路径跳转</h3><p>绝对路径：放之四海而皆准的路径<br>相对路径：相对于当前资源的路径</p>\n<h4 id=\"1-jsp跳转到Servlet\"><a href=\"#1-jsp跳转到Servlet\" class=\"headerlink\" title=\"1.jsp跳转到Servlet\"></a>1.jsp跳转到Servlet</h4><p>相对路径：<br>下面第一个斜线是指服务器根目录，但是在<url-pattern>必须以斜线开头<br><a href=\"/servlet/HelloServlet\">访问HelloServlet</a><br>绝对路径：<br>path变量代表的是项目的根目录<br><a href=\"<%=path%>/servlet/HelloServlet\"></a></url-pattern></p>\n<h4 id=\"2-Servlet跳转到JSP\"><a href=\"#2-Servlet跳转到JSP\" class=\"headerlink\" title=\"2.Servlet跳转到JSP\"></a>2.Servlet跳转到JSP</h4><p>请求重定向方式跳转到test.jsp，当前路径是ServletPathDirection/servlet<br>response.sendRedirect(resquest.getContextPath() + “/test.jsp”);<br>服务器内部跳转,斜线代表项目根目录<br>request.getRequestDispatcher(“/test.jsp”).forward(request,response);</p>"},{"title":"Samba的简单使用","abbrlink":"1053f1a2","date":"2017-05-10T06:37:40.000Z","_content":"\n{% cq %}Samba是在Linux和UNIX系统上实现的SMB协议的一个免费软件，由服务器和客户端程序构成，简称smb。{% endcq %}\n\n<!-- more --> \n\n跟FTP差不多，smb也是实现文件传输的。\n\n### 环境\n\nRed Hat Enterprise Linux 5 \n\n### 安装\n\n#### 检查是否安装\n\n```bash\n[root@localhost ~]# rpm -qa|grep samba\nsamba-common-3.0.33-3.14.el5\nsamba-3.0.33-3.14.el5\nsamba-swat-3.0.33-3.14.el5\nsamba-client-3.0.33-3.14.el5\n```\n\n如果显示为上面内容，代表samba已经安装。\n\n#### 安装\n\nrpm下载对应的安装包，然后安装。。平时一般都是用的centos，有空研究下red hat 的，只是学校机房电脑已经安装好了，所以我就省事了。\n\n### 运行控制\n\n开始、停止、重启、重新加载，smb.conf更改后要重启smb。\n\n在windows文件管理器地址输入\"\\\\\\Linux ip地址\"，若果访问不到的话，看一下防火墙及SeLinux。\n\n```shell\nservice smb start|stop|restart|reload\n```\n\n开机自启动\n\n```shell\nchkconfig --leave 345 smb on|off\n```\n\n### 匿名文件共享\n\n```shell\n[public]\n\tcomment = Public share directory\n\tpath = /user/share/mydoc\n\tpublic = yes\n\twritable = yes\n\tguest ok = yes\n```\n\n### 非匿名文件共享\n\n1. 创建Linux用户\n   `useradd smb1`\n\n2. 设置Linux密码\n   `passwd kiuber`\n\n3. 把Linux用户添加到smb用户\n   `smbpasswd -a smb1`\n\n4. 配置smb.conf\n   ```shell\n   [user]\n   \tcomment = Public share directory\n   \tpath = /user/share/mydoc\n   \tvalid user = smb1\n   \tpublic = no\n   \twritable = yes\n   \tguest ok = no\n   ```\n\n5. 验证smb并重启smb\n\n   ```shell\n   testparm -v\n   service smb restart\n   ```\n\n   ​\n\n   ​\n\n","source":"_posts/linux-first-use-smb.md","raw":"---\ntitle: Samba的简单使用\ntags:\n  - Samba\ncategories: Linux\nabbrlink: 1053f1a2\ndate: 2017-05-10 14:37:40\n---\n\n{% cq %}Samba是在Linux和UNIX系统上实现的SMB协议的一个免费软件，由服务器和客户端程序构成，简称smb。{% endcq %}\n\n<!-- more --> \n\n跟FTP差不多，smb也是实现文件传输的。\n\n### 环境\n\nRed Hat Enterprise Linux 5 \n\n### 安装\n\n#### 检查是否安装\n\n```bash\n[root@localhost ~]# rpm -qa|grep samba\nsamba-common-3.0.33-3.14.el5\nsamba-3.0.33-3.14.el5\nsamba-swat-3.0.33-3.14.el5\nsamba-client-3.0.33-3.14.el5\n```\n\n如果显示为上面内容，代表samba已经安装。\n\n#### 安装\n\nrpm下载对应的安装包，然后安装。。平时一般都是用的centos，有空研究下red hat 的，只是学校机房电脑已经安装好了，所以我就省事了。\n\n### 运行控制\n\n开始、停止、重启、重新加载，smb.conf更改后要重启smb。\n\n在windows文件管理器地址输入\"\\\\\\Linux ip地址\"，若果访问不到的话，看一下防火墙及SeLinux。\n\n```shell\nservice smb start|stop|restart|reload\n```\n\n开机自启动\n\n```shell\nchkconfig --leave 345 smb on|off\n```\n\n### 匿名文件共享\n\n```shell\n[public]\n\tcomment = Public share directory\n\tpath = /user/share/mydoc\n\tpublic = yes\n\twritable = yes\n\tguest ok = yes\n```\n\n### 非匿名文件共享\n\n1. 创建Linux用户\n   `useradd smb1`\n\n2. 设置Linux密码\n   `passwd kiuber`\n\n3. 把Linux用户添加到smb用户\n   `smbpasswd -a smb1`\n\n4. 配置smb.conf\n   ```shell\n   [user]\n   \tcomment = Public share directory\n   \tpath = /user/share/mydoc\n   \tvalid user = smb1\n   \tpublic = no\n   \twritable = yes\n   \tguest ok = no\n   ```\n\n5. 验证smb并重启smb\n\n   ```shell\n   testparm -v\n   service smb restart\n   ```\n\n   ​\n\n   ​\n\n","slug":"linux-first-use-smb","published":1,"updated":"2017-10-28T08:32:19.366Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih2t001zsv1frzj0bda7","content":"<blockquote class=\"blockquote-center\"><p>Samba是在Linux和UNIX系统上实现的SMB协议的一个免费软件，由服务器和客户端程序构成，简称smb。</p>\n</blockquote>\n<a id=\"more\"></a> \n<p>跟FTP差不多，smb也是实现文件传输的。</p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>Red Hat Enterprise Linux 5 </p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"检查是否安装\"><a href=\"#检查是否安装\" class=\"headerlink\" title=\"检查是否安装\"></a>检查是否安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># rpm -qa|grep samba</span></div><div class=\"line\">samba-common-3.0.33-3.14.el5</div><div class=\"line\">samba-3.0.33-3.14.el5</div><div class=\"line\">samba-swat-3.0.33-3.14.el5</div><div class=\"line\">samba-client-3.0.33-3.14.el5</div></pre></td></tr></table></figure>\n<p>如果显示为上面内容，代表samba已经安装。</p>\n<h4 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>rpm下载对应的安装包，然后安装。。平时一般都是用的centos，有空研究下red hat 的，只是学校机房电脑已经安装好了，所以我就省事了。</p>\n<h3 id=\"运行控制\"><a href=\"#运行控制\" class=\"headerlink\" title=\"运行控制\"></a>运行控制</h3><p>开始、停止、重启、重新加载，smb.conf更改后要重启smb。</p>\n<p>在windows文件管理器地址输入”\\\\Linux ip地址”，若果访问不到的话，看一下防火墙及SeLinux。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service smb start|stop|restart|reload</div></pre></td></tr></table></figure>\n<p>开机自启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig --leave 345 smb on|off</div></pre></td></tr></table></figure>\n<h3 id=\"匿名文件共享\"><a href=\"#匿名文件共享\" class=\"headerlink\" title=\"匿名文件共享\"></a>匿名文件共享</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[public]</div><div class=\"line\">\tcomment = Public share directory</div><div class=\"line\">\tpath = /user/share/mydoc</div><div class=\"line\">\tpublic = yes</div><div class=\"line\">\twritable = yes</div><div class=\"line\">\tguest ok = yes</div></pre></td></tr></table></figure>\n<h3 id=\"非匿名文件共享\"><a href=\"#非匿名文件共享\" class=\"headerlink\" title=\"非匿名文件共享\"></a>非匿名文件共享</h3><ol>\n<li><p>创建Linux用户<br><code>useradd smb1</code></p>\n</li>\n<li><p>设置Linux密码<br><code>passwd kiuber</code></p>\n</li>\n<li><p>把Linux用户添加到smb用户<br><code>smbpasswd -a smb1</code></p>\n</li>\n<li><p>配置smb.conf</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[user]</div><div class=\"line\">\tcomment = Public share directory</div><div class=\"line\">\tpath = /user/share/mydoc</div><div class=\"line\">\tvalid user = smb1</div><div class=\"line\">\tpublic = no</div><div class=\"line\">\twritable = yes</div><div class=\"line\">\tguest ok = no</div></pre></td></tr></table></figure>\n</li>\n<li><p>验证smb并重启smb</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">testparm -v</div><div class=\"line\">service smb restart</div></pre></td></tr></table></figure>\n<p>​</p>\n<p>​</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>Samba是在Linux和UNIX系统上实现的SMB协议的一个免费软件，由服务器和客户端程序构成，简称smb。</p>\n</blockquote>","more":"<p>跟FTP差不多，smb也是实现文件传输的。</p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>Red Hat Enterprise Linux 5 </p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"检查是否安装\"><a href=\"#检查是否安装\" class=\"headerlink\" title=\"检查是否安装\"></a>检查是否安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># rpm -qa|grep samba</span></div><div class=\"line\">samba-common-3.0.33-3.14.el5</div><div class=\"line\">samba-3.0.33-3.14.el5</div><div class=\"line\">samba-swat-3.0.33-3.14.el5</div><div class=\"line\">samba-client-3.0.33-3.14.el5</div></pre></td></tr></table></figure>\n<p>如果显示为上面内容，代表samba已经安装。</p>\n<h4 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>rpm下载对应的安装包，然后安装。。平时一般都是用的centos，有空研究下red hat 的，只是学校机房电脑已经安装好了，所以我就省事了。</p>\n<h3 id=\"运行控制\"><a href=\"#运行控制\" class=\"headerlink\" title=\"运行控制\"></a>运行控制</h3><p>开始、停止、重启、重新加载，smb.conf更改后要重启smb。</p>\n<p>在windows文件管理器地址输入”\\\\Linux ip地址”，若果访问不到的话，看一下防火墙及SeLinux。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service smb start|stop|restart|reload</div></pre></td></tr></table></figure>\n<p>开机自启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig --leave 345 smb on|off</div></pre></td></tr></table></figure>\n<h3 id=\"匿名文件共享\"><a href=\"#匿名文件共享\" class=\"headerlink\" title=\"匿名文件共享\"></a>匿名文件共享</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[public]</div><div class=\"line\">\tcomment = Public share directory</div><div class=\"line\">\tpath = /user/share/mydoc</div><div class=\"line\">\tpublic = yes</div><div class=\"line\">\twritable = yes</div><div class=\"line\">\tguest ok = yes</div></pre></td></tr></table></figure>\n<h3 id=\"非匿名文件共享\"><a href=\"#非匿名文件共享\" class=\"headerlink\" title=\"非匿名文件共享\"></a>非匿名文件共享</h3><ol>\n<li><p>创建Linux用户<br><code>useradd smb1</code></p>\n</li>\n<li><p>设置Linux密码<br><code>passwd kiuber</code></p>\n</li>\n<li><p>把Linux用户添加到smb用户<br><code>smbpasswd -a smb1</code></p>\n</li>\n<li><p>配置smb.conf</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[user]</div><div class=\"line\">\tcomment = Public share directory</div><div class=\"line\">\tpath = /user/share/mydoc</div><div class=\"line\">\tvalid user = smb1</div><div class=\"line\">\tpublic = no</div><div class=\"line\">\twritable = yes</div><div class=\"line\">\tguest ok = no</div></pre></td></tr></table></figure>\n</li>\n<li><p>验证smb并重启smb</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">testparm -v</div><div class=\"line\">service smb restart</div></pre></td></tr></table></figure>\n<p>​</p>\n<p>​</p>\n</li>\n</ol>"},{"title":"【转】MarkDown常用的语法","abbrlink":"4d8e068d","date":"2016-05-09T12:38:26.000Z","_content":"\n{% cq %}汇总一些MarkDown常用的语法，以便日后用。{% endcq %}\n\n<!--more-->\n\n### 强调\n```\n星号与下划线都可以，单是斜体，双是粗体，符号可跨行，符号可加空格\n\n**一个人来到田纳西**\n\n__毫无疑问__\n*我做的馅饼\n是全天下*\n_最好吃的_\n```\n**一个人来到田纳西**\n\n__毫无疑问__\n*我做的馅饼\n是全天下*\n_最好吃的_\n### 分割线\n```\n三个或更多-_*，必须单独一行，可含空格\n\n---\n```\n### 引用\n```\n翻译成html就是<blockquote></blockquote>，符号后的空格可不要\n\n> 引用\n```\n> 引用\n```\n内层符号前的空格必须要\n\n>引用\n >>引用中的引用\n```\n>引用\n>>引用中的引用\n\n### 标题：Setext方式\n```\n三个或更多\n\n大标题\n===\n小标题\n---\n```\n大标题\n===\n小标题\n---\n### 标题：Atx方式\n```\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n### 无序列表\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表，内容可超长\n\n- 无序列表\n- 无序列表\n- 无序列表\n- 无序列表：我很长。我也很长！那比一比啊？比就比！我有这么长，你有我长吗？我有这么这么长！好吧，你赢了！\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表，内容可超长\n\n- 无序列表\n- 无序列表\n- 无序列表\n- 无序列表：我很长。我也很长！那比一比啊？比就比！我有这么长，你有我长吗？我有这么这么长！好吧，你赢了！\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表\n\n+ 无序列表\n+ 无序列表\n+ 无序列表\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表\n\n+ 无序列表\n+ 无序列表\n+ 无序列表\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表\n\n* 无序列表\n* 无序列表\n* 无序列表\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表\n\n* 无序列表\n* 无序列表\n* 无序列表\n### 有序列表\n```\n数字不能省略但可无序，点号之后的空格不能少\n\n1. 有序列表\n2. 有序列表\n3. 有序列表\n8. 有序列表\n```\n数字不能省略但可无序，点号之后的空格不能少\n\n1. 有序列表\n2. 有序列表\n3. 有序列表\n4. 有序列表\n### 嵌套列表\n```\n-+*可循环使用，但符号之后的空格不能少，符号之前的空格也不能少\n\n- 嵌套列表\n + 嵌套列表\n + 嵌套列表\n  - 嵌套列表\n   * 嵌套列表\n- 嵌套列表\n```\n-+*可循环使用，但符号之后的空格不能少，符号之前的空格也不能少\n\n- 嵌套列表\n + 嵌套列表\n + 嵌套列表\n  - 嵌套列表\n   * 嵌套列表\n- 嵌套列表\n### 文字超链：Inline方式\n```\nTooltips可省略\n\n[不如](http://bruce-sha.github.io \"不如的博客\")\n```\nTooltips可省略\n\n[不如](http://bruce-sha.github.io \"不如的博客\")\n### 图片超链\n```\n多个感叹号，Tooltips可省略，要设置大小只能借助HTML标记\n\n![GitHub Mark](http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png \"GitHub Mark\")\n```\n多个感叹号，Tooltips可省略，要设置大小只能借助HTML标记\n\n![GitHub Mark](http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png \"GitHub Mark\")\n### 索引超链：Reference方式\n```\n索引，1 2可以是任意字符\n\n[不如][1]\n![GitHub Octocat][2]\n\n[1]:http://bruce-sha.github.io\n[2]:http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png\n```\n### 自动链接\n```\n尖括号\n\n<http://ibruce.info>\n<bu.ru@qq.com>\n```\n尖括号\n\n<http://ibruce.info>\n<bu.ru@qq.com>\n### 代码：行内代码\n```\n在第一行后指定编程语言，也可以不指定\n\n<!--￼0-->\n```\n```\nval s = \"hello Markdown\"\nprintln( s )\n```\n### 代码：段落代码\n```\n每行文字前加4个空格或者1个Tab\n\nval s = \"hello Markdown\"\nprintln( s )\n```\n### 代码：hexo\n```\n可指定编程语言，『』代表左右大括号\n\n『% codeblock [title] [lang:language] [url] [link text] %』\n\tcode snippet\n『% endcodeblock %』\n```\n### 注释\n```\n用html的注释，好像只有这样？\n\n<!-- 注释 -->\n```\n### 转义字符\n```\n用html的注释，好像只有这样？\n\nMarkdown中的转义字符为\\，转义的有：\n\\\\ 反斜杠\n\\` 反引号\n\\* 星号\n\\_ 下划线\n\\{\\} 大括号\n\\[\\] 中括号\n\\(\\) 小括号\n\\# 井号\n\\+ 加号\n\\- 减号\n\\. 英文句号\n\\! 感叹号\n```\n### 其它\n```\n文本中可直接用html标签，但是要前后加上空行。\n```\n### one more thing：表格\n```\nMarkdown的扩展语法，hexo不支持\n\n|| *Year* || *Temperature (low)* || *Temperature (high)* ||\n|| 1900 || -10 || 25 ||\n|| 1910 || -15 || 30 ||\n|| 1920 || -10 || 32 ||\n```\n转载自[markdown简明语法](http://ibruce.info/2013/11/26/markdown/)\n","source":"_posts/md-code.md","raw":"---\ntitle: 【转】MarkDown常用的语法\ntags:\n  - MarkDown\n  - 汇总\ncategories: MarkDown\nabbrlink: 4d8e068d\ndate: 2016-05-09 20:38:26\n---\n\n{% cq %}汇总一些MarkDown常用的语法，以便日后用。{% endcq %}\n\n<!--more-->\n\n### 强调\n```\n星号与下划线都可以，单是斜体，双是粗体，符号可跨行，符号可加空格\n\n**一个人来到田纳西**\n\n__毫无疑问__\n*我做的馅饼\n是全天下*\n_最好吃的_\n```\n**一个人来到田纳西**\n\n__毫无疑问__\n*我做的馅饼\n是全天下*\n_最好吃的_\n### 分割线\n```\n三个或更多-_*，必须单独一行，可含空格\n\n---\n```\n### 引用\n```\n翻译成html就是<blockquote></blockquote>，符号后的空格可不要\n\n> 引用\n```\n> 引用\n```\n内层符号前的空格必须要\n\n>引用\n >>引用中的引用\n```\n>引用\n>>引用中的引用\n\n### 标题：Setext方式\n```\n三个或更多\n\n大标题\n===\n小标题\n---\n```\n大标题\n===\n小标题\n---\n### 标题：Atx方式\n```\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n### 无序列表\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表，内容可超长\n\n- 无序列表\n- 无序列表\n- 无序列表\n- 无序列表：我很长。我也很长！那比一比啊？比就比！我有这么长，你有我长吗？我有这么这么长！好吧，你赢了！\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表，内容可超长\n\n- 无序列表\n- 无序列表\n- 无序列表\n- 无序列表：我很长。我也很长！那比一比啊？比就比！我有这么长，你有我长吗？我有这么这么长！好吧，你赢了！\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表\n\n+ 无序列表\n+ 无序列表\n+ 无序列表\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表\n\n+ 无序列表\n+ 无序列表\n+ 无序列表\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表\n\n* 无序列表\n* 无序列表\n* 无序列表\n```\n符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表\n\n* 无序列表\n* 无序列表\n* 无序列表\n### 有序列表\n```\n数字不能省略但可无序，点号之后的空格不能少\n\n1. 有序列表\n2. 有序列表\n3. 有序列表\n8. 有序列表\n```\n数字不能省略但可无序，点号之后的空格不能少\n\n1. 有序列表\n2. 有序列表\n3. 有序列表\n4. 有序列表\n### 嵌套列表\n```\n-+*可循环使用，但符号之后的空格不能少，符号之前的空格也不能少\n\n- 嵌套列表\n + 嵌套列表\n + 嵌套列表\n  - 嵌套列表\n   * 嵌套列表\n- 嵌套列表\n```\n-+*可循环使用，但符号之后的空格不能少，符号之前的空格也不能少\n\n- 嵌套列表\n + 嵌套列表\n + 嵌套列表\n  - 嵌套列表\n   * 嵌套列表\n- 嵌套列表\n### 文字超链：Inline方式\n```\nTooltips可省略\n\n[不如](http://bruce-sha.github.io \"不如的博客\")\n```\nTooltips可省略\n\n[不如](http://bruce-sha.github.io \"不如的博客\")\n### 图片超链\n```\n多个感叹号，Tooltips可省略，要设置大小只能借助HTML标记\n\n![GitHub Mark](http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png \"GitHub Mark\")\n```\n多个感叹号，Tooltips可省略，要设置大小只能借助HTML标记\n\n![GitHub Mark](http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png \"GitHub Mark\")\n### 索引超链：Reference方式\n```\n索引，1 2可以是任意字符\n\n[不如][1]\n![GitHub Octocat][2]\n\n[1]:http://bruce-sha.github.io\n[2]:http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png\n```\n### 自动链接\n```\n尖括号\n\n<http://ibruce.info>\n<bu.ru@qq.com>\n```\n尖括号\n\n<http://ibruce.info>\n<bu.ru@qq.com>\n### 代码：行内代码\n```\n在第一行后指定编程语言，也可以不指定\n\n<!--￼0-->\n```\n```\nval s = \"hello Markdown\"\nprintln( s )\n```\n### 代码：段落代码\n```\n每行文字前加4个空格或者1个Tab\n\nval s = \"hello Markdown\"\nprintln( s )\n```\n### 代码：hexo\n```\n可指定编程语言，『』代表左右大括号\n\n『% codeblock [title] [lang:language] [url] [link text] %』\n\tcode snippet\n『% endcodeblock %』\n```\n### 注释\n```\n用html的注释，好像只有这样？\n\n<!-- 注释 -->\n```\n### 转义字符\n```\n用html的注释，好像只有这样？\n\nMarkdown中的转义字符为\\，转义的有：\n\\\\ 反斜杠\n\\` 反引号\n\\* 星号\n\\_ 下划线\n\\{\\} 大括号\n\\[\\] 中括号\n\\(\\) 小括号\n\\# 井号\n\\+ 加号\n\\- 减号\n\\. 英文句号\n\\! 感叹号\n```\n### 其它\n```\n文本中可直接用html标签，但是要前后加上空行。\n```\n### one more thing：表格\n```\nMarkdown的扩展语法，hexo不支持\n\n|| *Year* || *Temperature (low)* || *Temperature (high)* ||\n|| 1900 || -10 || 25 ||\n|| 1910 || -15 || 30 ||\n|| 1920 || -10 || 32 ||\n```\n转载自[markdown简明语法](http://ibruce.info/2013/11/26/markdown/)\n","slug":"md-code","published":1,"updated":"2017-06-08T12:20:29.306Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih2v0022sv1feirlu5dw","content":"<blockquote class=\"blockquote-center\"><p>汇总一些MarkDown常用的语法，以便日后用。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"强调\"><a href=\"#强调\" class=\"headerlink\" title=\"强调\"></a>强调</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">星号与下划线都可以，单是斜体，双是粗体，符号可跨行，符号可加空格</div><div class=\"line\"></div><div class=\"line\">**一个人来到田纳西**</div><div class=\"line\"></div><div class=\"line\">__毫无疑问__</div><div class=\"line\">*我做的馅饼</div><div class=\"line\">是全天下*</div><div class=\"line\">_最好吃的_</div></pre></td></tr></table></figure>\n<p><strong>一个人来到田纳西</strong></p>\n<p><strong>毫无疑问</strong><br><em>我做的馅饼<br>是全天下</em><br><em>最好吃的</em></p>\n<h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">三个或更多-_*，必须单独一行，可含空格</div><div class=\"line\"></div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">翻译成html就是&lt;blockquote&gt;&lt;/blockquote&gt;，符号后的空格可不要</div><div class=\"line\"></div><div class=\"line\">&gt; 引用</div></pre></td></tr></table></figure>\n<blockquote>\n<p>引用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">内层符号前的空格必须要</div><div class=\"line\"></div><div class=\"line\">&gt;引用</div><div class=\"line\"> &gt;&gt;引用中的引用</div></pre></td></tr></table></figure></p>\n<p>引用</p>\n<blockquote>\n<p>引用中的引用</p>\n</blockquote>\n</blockquote>\n<h3 id=\"标题：Setext方式\"><a href=\"#标题：Setext方式\" class=\"headerlink\" title=\"标题：Setext方式\"></a>标题：Setext方式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">三个或更多</div><div class=\"line\"></div><div class=\"line\">大标题</div><div class=\"line\">===</div><div class=\"line\">小标题</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h1 id=\"大标题\"><a href=\"#大标题\" class=\"headerlink\" title=\"大标题\"></a>大标题</h1><h2 id=\"小标题\"><a href=\"#小标题\" class=\"headerlink\" title=\"小标题\"></a>小标题</h2><h3 id=\"标题：Atx方式\"><a href=\"#标题：Atx方式\" class=\"headerlink\" title=\"标题：Atx方式\"></a>标题：Atx方式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 一级标题</div><div class=\"line\">## 二级标题</div><div class=\"line\">### 三级标题</div><div class=\"line\">#### 四级标题</div><div class=\"line\">##### 五级标题</div><div class=\"line\">###### 六级标题</div></pre></td></tr></table></figure>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表，内容可超长</div><div class=\"line\"></div><div class=\"line\">- 无序列表</div><div class=\"line\">- 无序列表</div><div class=\"line\">- 无序列表</div><div class=\"line\">- 无序列表：我很长。我也很长！那比一比啊？比就比！我有这么长，你有我长吗？我有这么这么长！好吧，你赢了！</div></pre></td></tr></table></figure>\n<p>符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表，内容可超长</p>\n<ul>\n<li>无序列表</li>\n<li>无序列表</li>\n<li>无序列表</li>\n<li>无序列表：我很长。我也很长！那比一比啊？比就比！我有这么长，你有我长吗？我有这么这么长！好吧，你赢了！<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表</div><div class=\"line\"></div><div class=\"line\">+ 无序列表</div><div class=\"line\">+ 无序列表</div><div class=\"line\">+ 无序列表</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表</p>\n<ul>\n<li>无序列表</li>\n<li>无序列表</li>\n<li>无序列表<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表</div><div class=\"line\"></div><div class=\"line\">* 无序列表</div><div class=\"line\">* 无序列表</div><div class=\"line\">* 无序列表</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表</p>\n<ul>\n<li>无序列表</li>\n<li>无序列表</li>\n<li>无序列表<h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">数字不能省略但可无序，点号之后的空格不能少</div><div class=\"line\"></div><div class=\"line\">1. 有序列表</div><div class=\"line\">2. 有序列表</div><div class=\"line\">3. 有序列表</div><div class=\"line\">8. 有序列表</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>数字不能省略但可无序，点号之后的空格不能少</p>\n<ol>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表<h3 id=\"嵌套列表\"><a href=\"#嵌套列表\" class=\"headerlink\" title=\"嵌套列表\"></a>嵌套列表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">-+*可循环使用，但符号之后的空格不能少，符号之前的空格也不能少</div><div class=\"line\"></div><div class=\"line\">- 嵌套列表</div><div class=\"line\"> + 嵌套列表</div><div class=\"line\"> + 嵌套列表</div><div class=\"line\">  - 嵌套列表</div><div class=\"line\">   * 嵌套列表</div><div class=\"line\">- 嵌套列表</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>-+*可循环使用，但符号之后的空格不能少，符号之前的空格也不能少</p>\n<ul>\n<li>嵌套列表<ul>\n<li>嵌套列表</li>\n<li>嵌套列表</li>\n</ul>\n<ul>\n<li>嵌套列表<ul>\n<li>嵌套列表</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>嵌套列表<h3 id=\"文字超链：Inline方式\"><a href=\"#文字超链：Inline方式\" class=\"headerlink\" title=\"文字超链：Inline方式\"></a>文字超链：Inline方式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Tooltips可省略</div><div class=\"line\"></div><div class=\"line\">[不如](http://bruce-sha.github.io &quot;不如的博客&quot;)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tooltips可省略</p>\n<p><a href=\"http://bruce-sha.github.io\" title=\"不如的博客\" target=\"_blank\" rel=\"external\">不如</a></p>\n<h3 id=\"图片超链\"><a href=\"#图片超链\" class=\"headerlink\" title=\"图片超链\"></a>图片超链</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">多个感叹号，Tooltips可省略，要设置大小只能借助HTML标记</div><div class=\"line\"></div><div class=\"line\">![GitHub Mark](http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png &quot;GitHub Mark&quot;)</div></pre></td></tr></table></figure>\n<p>多个感叹号，Tooltips可省略，要设置大小只能借助HTML标记</p>\n<p><img src=\"http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png\" alt=\"GitHub Mark\" title=\"GitHub Mark\"></p>\n<h3 id=\"索引超链：Reference方式\"><a href=\"#索引超链：Reference方式\" class=\"headerlink\" title=\"索引超链：Reference方式\"></a>索引超链：Reference方式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">索引，1 2可以是任意字符</div><div class=\"line\"></div><div class=\"line\">[不如][1]</div><div class=\"line\">![GitHub Octocat][2]</div><div class=\"line\"></div><div class=\"line\">[1]:http://bruce-sha.github.io</div><div class=\"line\">[2]:http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png</div></pre></td></tr></table></figure>\n<h3 id=\"自动链接\"><a href=\"#自动链接\" class=\"headerlink\" title=\"自动链接\"></a>自动链接</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">尖括号</div><div class=\"line\"></div><div class=\"line\">&lt;http://ibruce.info&gt;</div><div class=\"line\">&lt;bu.ru@qq.com&gt;</div></pre></td></tr></table></figure>\n<p>尖括号</p>\n<p><a href=\"http://ibruce.info\" target=\"_blank\" rel=\"external\">http://ibruce.info</a></p>\n<p><a href=\"&#109;&#97;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#98;&#117;&#x2e;&#x72;&#117;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;\">&#98;&#117;&#x2e;&#x72;&#117;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;</a></p>\n<h3 id=\"代码：行内代码\"><a href=\"#代码：行内代码\" class=\"headerlink\" title=\"代码：行内代码\"></a>代码：行内代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">在第一行后指定编程语言，也可以不指定</div><div class=\"line\"></div><div class=\"line\">undefined</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">val s = &quot;hello Markdown&quot;</div><div class=\"line\">println( s )</div></pre></td></tr></table></figure>\n<h3 id=\"代码：段落代码\"><a href=\"#代码：段落代码\" class=\"headerlink\" title=\"代码：段落代码\"></a>代码：段落代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">每行文字前加4个空格或者1个Tab</div><div class=\"line\"></div><div class=\"line\">val s = &quot;hello Markdown&quot;</div><div class=\"line\">println( s )</div></pre></td></tr></table></figure>\n<h3 id=\"代码：hexo\"><a href=\"#代码：hexo\" class=\"headerlink\" title=\"代码：hexo\"></a>代码：hexo</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">可指定编程语言，『』代表左右大括号</div><div class=\"line\"></div><div class=\"line\">『% codeblock [title] [lang:language] [url] [link text] %』</div><div class=\"line\">\tcode snippet</div><div class=\"line\">『% endcodeblock %』</div></pre></td></tr></table></figure>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">用html的注释，好像只有这样？</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 注释 --&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">用html的注释，好像只有这样？</div><div class=\"line\"></div><div class=\"line\">Markdown中的转义字符为\\，转义的有：</div><div class=\"line\">\\\\ 反斜杠</div><div class=\"line\">\\` 反引号</div><div class=\"line\">\\* 星号</div><div class=\"line\">\\_ 下划线</div><div class=\"line\">\\&#123;\\&#125; 大括号</div><div class=\"line\">\\[\\] 中括号</div><div class=\"line\">\\(\\) 小括号</div><div class=\"line\">\\# 井号</div><div class=\"line\">\\+ 加号</div><div class=\"line\">\\- 减号</div><div class=\"line\">\\. 英文句号</div><div class=\"line\">\\! 感叹号</div></pre></td></tr></table></figure>\n<h3 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">文本中可直接用html标签，但是要前后加上空行。</div></pre></td></tr></table></figure>\n<h3 id=\"one-more-thing：表格\"><a href=\"#one-more-thing：表格\" class=\"headerlink\" title=\"one more thing：表格\"></a>one more thing：表格</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Markdown的扩展语法，hexo不支持</div><div class=\"line\"></div><div class=\"line\">|| *Year* || *Temperature (low)* || *Temperature (high)* ||</div><div class=\"line\">|| 1900 || -10 || 25 ||</div><div class=\"line\">|| 1910 || -15 || 30 ||</div><div class=\"line\">|| 1920 || -10 || 32 ||</div></pre></td></tr></table></figure>\n<p>转载自<a href=\"http://ibruce.info/2013/11/26/markdown/\" target=\"_blank\" rel=\"external\">markdown简明语法</a></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>汇总一些MarkDown常用的语法，以便日后用。</p>\n</blockquote>","more":"<h3 id=\"强调\"><a href=\"#强调\" class=\"headerlink\" title=\"强调\"></a>强调</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">星号与下划线都可以，单是斜体，双是粗体，符号可跨行，符号可加空格</div><div class=\"line\"></div><div class=\"line\">**一个人来到田纳西**</div><div class=\"line\"></div><div class=\"line\">__毫无疑问__</div><div class=\"line\">*我做的馅饼</div><div class=\"line\">是全天下*</div><div class=\"line\">_最好吃的_</div></pre></td></tr></table></figure>\n<p><strong>一个人来到田纳西</strong></p>\n<p><strong>毫无疑问</strong><br><em>我做的馅饼<br>是全天下</em><br><em>最好吃的</em></p>\n<h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">三个或更多-_*，必须单独一行，可含空格</div><div class=\"line\"></div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">翻译成html就是&lt;blockquote&gt;&lt;/blockquote&gt;，符号后的空格可不要</div><div class=\"line\"></div><div class=\"line\">&gt; 引用</div></pre></td></tr></table></figure>\n<blockquote>\n<p>引用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">内层符号前的空格必须要</div><div class=\"line\"></div><div class=\"line\">&gt;引用</div><div class=\"line\"> &gt;&gt;引用中的引用</div></pre></td></tr></table></figure></p>\n<p>引用</p>\n<blockquote>\n<p>引用中的引用</p>\n</blockquote>\n</blockquote>\n<h3 id=\"标题：Setext方式\"><a href=\"#标题：Setext方式\" class=\"headerlink\" title=\"标题：Setext方式\"></a>标题：Setext方式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">三个或更多</div><div class=\"line\"></div><div class=\"line\">大标题</div><div class=\"line\">===</div><div class=\"line\">小标题</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h1 id=\"大标题\"><a href=\"#大标题\" class=\"headerlink\" title=\"大标题\"></a>大标题</h1><h2 id=\"小标题\"><a href=\"#小标题\" class=\"headerlink\" title=\"小标题\"></a>小标题</h2><h3 id=\"标题：Atx方式\"><a href=\"#标题：Atx方式\" class=\"headerlink\" title=\"标题：Atx方式\"></a>标题：Atx方式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 一级标题</div><div class=\"line\">## 二级标题</div><div class=\"line\">### 三级标题</div><div class=\"line\">#### 四级标题</div><div class=\"line\">##### 五级标题</div><div class=\"line\">###### 六级标题</div></pre></td></tr></table></figure>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表，内容可超长</div><div class=\"line\"></div><div class=\"line\">- 无序列表</div><div class=\"line\">- 无序列表</div><div class=\"line\">- 无序列表</div><div class=\"line\">- 无序列表：我很长。我也很长！那比一比啊？比就比！我有这么长，你有我长吗？我有这么这么长！好吧，你赢了！</div></pre></td></tr></table></figure>\n<p>符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表，内容可超长</p>\n<ul>\n<li>无序列表</li>\n<li>无序列表</li>\n<li>无序列表</li>\n<li>无序列表：我很长。我也很长！那比一比啊？比就比！我有这么长，你有我长吗？我有这么这么长！好吧，你赢了！<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表</div><div class=\"line\"></div><div class=\"line\">+ 无序列表</div><div class=\"line\">+ 无序列表</div><div class=\"line\">+ 无序列表</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表</p>\n<ul>\n<li>无序列表</li>\n<li>无序列表</li>\n<li>无序列表<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表</div><div class=\"line\"></div><div class=\"line\">* 无序列表</div><div class=\"line\">* 无序列表</div><div class=\"line\">* 无序列表</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>符号之后的空格不能少，-+*效果一样，但不能混合使用，因混合是嵌套列表</p>\n<ul>\n<li>无序列表</li>\n<li>无序列表</li>\n<li>无序列表<h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">数字不能省略但可无序，点号之后的空格不能少</div><div class=\"line\"></div><div class=\"line\">1. 有序列表</div><div class=\"line\">2. 有序列表</div><div class=\"line\">3. 有序列表</div><div class=\"line\">8. 有序列表</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>数字不能省略但可无序，点号之后的空格不能少</p>\n<ol>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表<h3 id=\"嵌套列表\"><a href=\"#嵌套列表\" class=\"headerlink\" title=\"嵌套列表\"></a>嵌套列表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">-+*可循环使用，但符号之后的空格不能少，符号之前的空格也不能少</div><div class=\"line\"></div><div class=\"line\">- 嵌套列表</div><div class=\"line\"> + 嵌套列表</div><div class=\"line\"> + 嵌套列表</div><div class=\"line\">  - 嵌套列表</div><div class=\"line\">   * 嵌套列表</div><div class=\"line\">- 嵌套列表</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>-+*可循环使用，但符号之后的空格不能少，符号之前的空格也不能少</p>\n<ul>\n<li>嵌套列表<ul>\n<li>嵌套列表</li>\n<li>嵌套列表</li>\n</ul>\n<ul>\n<li>嵌套列表<ul>\n<li>嵌套列表</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>嵌套列表<h3 id=\"文字超链：Inline方式\"><a href=\"#文字超链：Inline方式\" class=\"headerlink\" title=\"文字超链：Inline方式\"></a>文字超链：Inline方式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Tooltips可省略</div><div class=\"line\"></div><div class=\"line\">[不如](http://bruce-sha.github.io &quot;不如的博客&quot;)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tooltips可省略</p>\n<p><a href=\"http://bruce-sha.github.io\" title=\"不如的博客\" target=\"_blank\" rel=\"external\">不如</a></p>\n<h3 id=\"图片超链\"><a href=\"#图片超链\" class=\"headerlink\" title=\"图片超链\"></a>图片超链</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">多个感叹号，Tooltips可省略，要设置大小只能借助HTML标记</div><div class=\"line\"></div><div class=\"line\">![GitHub Mark](http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png &quot;GitHub Mark&quot;)</div></pre></td></tr></table></figure>\n<p>多个感叹号，Tooltips可省略，要设置大小只能借助HTML标记</p>\n<p><img src=\"http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png\" alt=\"GitHub Mark\" title=\"GitHub Mark\"></p>\n<h3 id=\"索引超链：Reference方式\"><a href=\"#索引超链：Reference方式\" class=\"headerlink\" title=\"索引超链：Reference方式\"></a>索引超链：Reference方式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">索引，1 2可以是任意字符</div><div class=\"line\"></div><div class=\"line\">[不如][1]</div><div class=\"line\">![GitHub Octocat][2]</div><div class=\"line\"></div><div class=\"line\">[1]:http://bruce-sha.github.io</div><div class=\"line\">[2]:http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png</div></pre></td></tr></table></figure>\n<h3 id=\"自动链接\"><a href=\"#自动链接\" class=\"headerlink\" title=\"自动链接\"></a>自动链接</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">尖括号</div><div class=\"line\"></div><div class=\"line\">&lt;http://ibruce.info&gt;</div><div class=\"line\">&lt;bu.ru@qq.com&gt;</div></pre></td></tr></table></figure>\n<p>尖括号</p>\n<p><a href=\"http://ibruce.info\" target=\"_blank\" rel=\"external\">http://ibruce.info</a></p>\n<p><a href=\"&#109;&#97;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#98;&#117;&#x2e;&#x72;&#117;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;\">&#98;&#117;&#x2e;&#x72;&#117;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;</a></p>\n<h3 id=\"代码：行内代码\"><a href=\"#代码：行内代码\" class=\"headerlink\" title=\"代码：行内代码\"></a>代码：行内代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">在第一行后指定编程语言，也可以不指定</div><div class=\"line\"></div><div class=\"line\">undefined</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">val s = &quot;hello Markdown&quot;</div><div class=\"line\">println( s )</div></pre></td></tr></table></figure>\n<h3 id=\"代码：段落代码\"><a href=\"#代码：段落代码\" class=\"headerlink\" title=\"代码：段落代码\"></a>代码：段落代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">每行文字前加4个空格或者1个Tab</div><div class=\"line\"></div><div class=\"line\">val s = &quot;hello Markdown&quot;</div><div class=\"line\">println( s )</div></pre></td></tr></table></figure>\n<h3 id=\"代码：hexo\"><a href=\"#代码：hexo\" class=\"headerlink\" title=\"代码：hexo\"></a>代码：hexo</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">可指定编程语言，『』代表左右大括号</div><div class=\"line\"></div><div class=\"line\">『% codeblock [title] [lang:language] [url] [link text] %』</div><div class=\"line\">\tcode snippet</div><div class=\"line\">『% endcodeblock %』</div></pre></td></tr></table></figure>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">用html的注释，好像只有这样？</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 注释 --&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">用html的注释，好像只有这样？</div><div class=\"line\"></div><div class=\"line\">Markdown中的转义字符为\\，转义的有：</div><div class=\"line\">\\\\ 反斜杠</div><div class=\"line\">\\` 反引号</div><div class=\"line\">\\* 星号</div><div class=\"line\">\\_ 下划线</div><div class=\"line\">\\&#123;\\&#125; 大括号</div><div class=\"line\">\\[\\] 中括号</div><div class=\"line\">\\(\\) 小括号</div><div class=\"line\">\\# 井号</div><div class=\"line\">\\+ 加号</div><div class=\"line\">\\- 减号</div><div class=\"line\">\\. 英文句号</div><div class=\"line\">\\! 感叹号</div></pre></td></tr></table></figure>\n<h3 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">文本中可直接用html标签，但是要前后加上空行。</div></pre></td></tr></table></figure>\n<h3 id=\"one-more-thing：表格\"><a href=\"#one-more-thing：表格\" class=\"headerlink\" title=\"one more thing：表格\"></a>one more thing：表格</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Markdown的扩展语法，hexo不支持</div><div class=\"line\"></div><div class=\"line\">|| *Year* || *Temperature (low)* || *Temperature (high)* ||</div><div class=\"line\">|| 1900 || -10 || 25 ||</div><div class=\"line\">|| 1910 || -15 || 30 ||</div><div class=\"line\">|| 1920 || -10 || 32 ||</div></pre></td></tr></table></figure>\n<p>转载自<a href=\"http://ibruce.info/2013/11/26/markdown/\" target=\"_blank\" rel=\"external\">markdown简明语法</a></p>"},{"title":"Excel常用功能","abbrlink":"70f3446a","date":"2016-10-25T13:42:21.000Z","_content":"\n{% cq %}对于复杂数据常用的Excel小功能。{% endcq %}\n\n\n<!--more-->\n\n-->环境：Office2016\n\nExcel常用来做一些统计，咱们就根据需求进行函数介绍。\n\n# 需求一\n\n老师统计了一些平时不做作业，上课不认真听讲的同学名单，想看下他们的上学期的成绩。\n\n最简单的就是按照名字一个个复制，名字多的时候就有点尴尬了。\n\n|      | 姓名             |\n| ---- | -------------- |\n| 不认真  | 张三、李四、王五、赵六、孙七 |\n\n成绩表\n\n| 姓名   | 成绩   |\n| ---- | ---- |\n| 张三   | 61   |\n| 王二麻子 | 88   |\n| 李四   | 60.2 |\n| 赵六   | 60.9 |\n| 王五   | 60.2 |\n| 孙七   | 60.1 |\n\n最终结果\n\n| 姓名   | 成绩   |\n| ---- | ---- |\n| 张三   | 61   |\n| 李四   | 60.1 |\n| 王五   | 60.2 |\n| 赵六   | 60.2 |\n| 孙七   | 60.9 |\n\n## 实现\n\n先将一个单元格内容分成多个单元格，然后将多个横排的单元格转换成竖排的，最后根据名字去成绩表中查找对应的成绩。\n\n1. 选中名字单元格-->数据-->数据工具-->分列\n2. 选中分列后的多个单元格右键-->粘贴-->转置\n3. 用VLOOKUP（纵向查找函数）进行查找，参数分别为lookup_value、table_array、col_index_num、[range_lookup]\n\n| 姓名   | 成绩                           |\n| ---- | ---------------------------- |\n| 张三   | =VLOOKUP(A2,D$1:E$7,2,FALSE) |\n| 李四   | =VLOOKUP(A3,D$1:E$7,2,FALSE) |\n| 王五   | =VLOOKUP(A4,D$1:E$7,2,FALSE) |\n| 赵六   | =VLOOKUP(A5,D$1:E$7,2,FALSE) |\n| 孙七   | =VLOOKUP(A6,D$1:E$7,2,FALSE) |\n\n一定不要忘记在table_array区域填\"$\"对数据区域进行绝对引用。\n\n# 需求二\n\n根据旷课记录表查看以下表中的人是否有旷课记录。\n\n| 姓名   | 是否旷课 |\n| ---- | ---- |\n| 张三   | 是    |\n| 李四   | 是    |\n| 孙七   | 否    |\n\n旷课表\n\n| 信息与艺术设计系旷课记录表 |                      |\n| ------------- | -------------------- |\n| 姓名            | 课程名                  |\n| 王二麻子          | ASP.NET项目开发实战        |\n| 王二麻子          | ASP.NET项目开发实战        |\n| 李四            | ASP.NET项目开发实战        |\n| 王二麻子          | Android移动应用基础教程      |\n| 张三            | Android移动应用基础教程      |\n| 王二麻子          | 毛泽东思想和中国特色社会主义理论体系概论 |\n\n最终表\n\n| 姓名   | 是否旷课 |\n| ---- | ---- |\n| 张三   | 是    |\n| 李四   | 是    |\n| 孙七   | 否    |\n\n## 实现\n\n其实这种也是用VLOOKUP来实现。\n\n| 姓名   | 是否旷课                           |\n| ---- | ------------------------------ |\n| 张三   | =VLOOKUP(A2,C$13:D$19,2,FALSE) |\n| 李四   | =VLOOKUP(A3,C$13:D$19,2,FALSE) |\n\n如果有返回值不为“#N/A”，即代表有旷课记录，用Ctrl+R替换下数据就可，但是这样还不是最简单的，有没有一步到位的，有旷课记录的话直接返回“是“，没有的话返回”否“。\n\n| 姓名   | 是否旷课                                     |\n| ---- | ---------------------------------------- |\n| 张三   | =IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),\"否\",\"是\") |\n| 李四   | =IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),\"否\",\"是\") |\n| 孙七   | =IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),\"否\",\"是\") |\n\n","source":"_posts/often-excel.md","raw":"---\ntitle: Excel常用功能\ntags:\n  - 统计\ncategories:\n  - Excel\nabbrlink: 70f3446a\ndate: 2016-10-25 21:42:21\n---\n\n{% cq %}对于复杂数据常用的Excel小功能。{% endcq %}\n\n\n<!--more-->\n\n-->环境：Office2016\n\nExcel常用来做一些统计，咱们就根据需求进行函数介绍。\n\n# 需求一\n\n老师统计了一些平时不做作业，上课不认真听讲的同学名单，想看下他们的上学期的成绩。\n\n最简单的就是按照名字一个个复制，名字多的时候就有点尴尬了。\n\n|      | 姓名             |\n| ---- | -------------- |\n| 不认真  | 张三、李四、王五、赵六、孙七 |\n\n成绩表\n\n| 姓名   | 成绩   |\n| ---- | ---- |\n| 张三   | 61   |\n| 王二麻子 | 88   |\n| 李四   | 60.2 |\n| 赵六   | 60.9 |\n| 王五   | 60.2 |\n| 孙七   | 60.1 |\n\n最终结果\n\n| 姓名   | 成绩   |\n| ---- | ---- |\n| 张三   | 61   |\n| 李四   | 60.1 |\n| 王五   | 60.2 |\n| 赵六   | 60.2 |\n| 孙七   | 60.9 |\n\n## 实现\n\n先将一个单元格内容分成多个单元格，然后将多个横排的单元格转换成竖排的，最后根据名字去成绩表中查找对应的成绩。\n\n1. 选中名字单元格-->数据-->数据工具-->分列\n2. 选中分列后的多个单元格右键-->粘贴-->转置\n3. 用VLOOKUP（纵向查找函数）进行查找，参数分别为lookup_value、table_array、col_index_num、[range_lookup]\n\n| 姓名   | 成绩                           |\n| ---- | ---------------------------- |\n| 张三   | =VLOOKUP(A2,D$1:E$7,2,FALSE) |\n| 李四   | =VLOOKUP(A3,D$1:E$7,2,FALSE) |\n| 王五   | =VLOOKUP(A4,D$1:E$7,2,FALSE) |\n| 赵六   | =VLOOKUP(A5,D$1:E$7,2,FALSE) |\n| 孙七   | =VLOOKUP(A6,D$1:E$7,2,FALSE) |\n\n一定不要忘记在table_array区域填\"$\"对数据区域进行绝对引用。\n\n# 需求二\n\n根据旷课记录表查看以下表中的人是否有旷课记录。\n\n| 姓名   | 是否旷课 |\n| ---- | ---- |\n| 张三   | 是    |\n| 李四   | 是    |\n| 孙七   | 否    |\n\n旷课表\n\n| 信息与艺术设计系旷课记录表 |                      |\n| ------------- | -------------------- |\n| 姓名            | 课程名                  |\n| 王二麻子          | ASP.NET项目开发实战        |\n| 王二麻子          | ASP.NET项目开发实战        |\n| 李四            | ASP.NET项目开发实战        |\n| 王二麻子          | Android移动应用基础教程      |\n| 张三            | Android移动应用基础教程      |\n| 王二麻子          | 毛泽东思想和中国特色社会主义理论体系概论 |\n\n最终表\n\n| 姓名   | 是否旷课 |\n| ---- | ---- |\n| 张三   | 是    |\n| 李四   | 是    |\n| 孙七   | 否    |\n\n## 实现\n\n其实这种也是用VLOOKUP来实现。\n\n| 姓名   | 是否旷课                           |\n| ---- | ------------------------------ |\n| 张三   | =VLOOKUP(A2,C$13:D$19,2,FALSE) |\n| 李四   | =VLOOKUP(A3,C$13:D$19,2,FALSE) |\n\n如果有返回值不为“#N/A”，即代表有旷课记录，用Ctrl+R替换下数据就可，但是这样还不是最简单的，有没有一步到位的，有旷课记录的话直接返回“是“，没有的话返回”否“。\n\n| 姓名   | 是否旷课                                     |\n| ---- | ---------------------------------------- |\n| 张三   | =IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),\"否\",\"是\") |\n| 李四   | =IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),\"否\",\"是\") |\n| 孙七   | =IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),\"否\",\"是\") |\n\n","slug":"often-excel","published":1,"updated":"2017-06-08T12:20:29.307Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih2y0025sv1figemrrfk","content":"<blockquote class=\"blockquote-center\"><p>对于复杂数据常用的Excel小功能。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>–&gt;环境：Office2016</p>\n<p>Excel常用来做一些统计，咱们就根据需求进行函数介绍。</p>\n<h1 id=\"需求一\"><a href=\"#需求一\" class=\"headerlink\" title=\"需求一\"></a>需求一</h1><p>老师统计了一些平时不做作业，上课不认真听讲的同学名单，想看下他们的上学期的成绩。</p>\n<p>最简单的就是按照名字一个个复制，名字多的时候就有点尴尬了。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>姓名</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>不认真</td>\n<td>张三、李四、王五、赵六、孙七</td>\n</tr>\n</tbody>\n</table>\n<p>成绩表</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>61</td>\n</tr>\n<tr>\n<td>王二麻子</td>\n<td>88</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>60.2</td>\n</tr>\n<tr>\n<td>赵六</td>\n<td>60.9</td>\n</tr>\n<tr>\n<td>王五</td>\n<td>60.2</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>60.1</td>\n</tr>\n</tbody>\n</table>\n<p>最终结果</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>61</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>60.1</td>\n</tr>\n<tr>\n<td>王五</td>\n<td>60.2</td>\n</tr>\n<tr>\n<td>赵六</td>\n<td>60.2</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>60.9</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>先将一个单元格内容分成多个单元格，然后将多个横排的单元格转换成竖排的，最后根据名字去成绩表中查找对应的成绩。</p>\n<ol>\n<li>选中名字单元格–&gt;数据–&gt;数据工具–&gt;分列</li>\n<li>选中分列后的多个单元格右键–&gt;粘贴–&gt;转置</li>\n<li>用VLOOKUP（纵向查找函数）进行查找，参数分别为lookup_value、table_array、col_index_num、[range_lookup]</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>=VLOOKUP(A2,D$1:E$7,2,FALSE)</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>=VLOOKUP(A3,D$1:E$7,2,FALSE)</td>\n</tr>\n<tr>\n<td>王五</td>\n<td>=VLOOKUP(A4,D$1:E$7,2,FALSE)</td>\n</tr>\n<tr>\n<td>赵六</td>\n<td>=VLOOKUP(A5,D$1:E$7,2,FALSE)</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>=VLOOKUP(A6,D$1:E$7,2,FALSE)</td>\n</tr>\n</tbody>\n</table>\n<p>一定不要忘记在table_array区域填”$”对数据区域进行绝对引用。</p>\n<h1 id=\"需求二\"><a href=\"#需求二\" class=\"headerlink\" title=\"需求二\"></a>需求二</h1><p>根据旷课记录表查看以下表中的人是否有旷课记录。</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>是否旷课</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>是</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>是</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<p>旷课表</p>\n<table>\n<thead>\n<tr>\n<th>信息与艺术设计系旷课记录表</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>姓名</td>\n<td>课程名</td>\n</tr>\n<tr>\n<td>王二麻子</td>\n<td>ASP.NET项目开发实战</td>\n</tr>\n<tr>\n<td>王二麻子</td>\n<td>ASP.NET项目开发实战</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>ASP.NET项目开发实战</td>\n</tr>\n<tr>\n<td>王二麻子</td>\n<td>Android移动应用基础教程</td>\n</tr>\n<tr>\n<td>张三</td>\n<td>Android移动应用基础教程</td>\n</tr>\n<tr>\n<td>王二麻子</td>\n<td>毛泽东思想和中国特色社会主义理论体系概论</td>\n</tr>\n</tbody>\n</table>\n<p>最终表</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>是否旷课</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>是</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>是</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"实现-1\"><a href=\"#实现-1\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>其实这种也是用VLOOKUP来实现。</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>是否旷课</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>=VLOOKUP(A2,C$13:D$19,2,FALSE)</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>=VLOOKUP(A3,C$13:D$19,2,FALSE)</td>\n</tr>\n</tbody>\n</table>\n<p>如果有返回值不为“#N/A”，即代表有旷课记录，用Ctrl+R替换下数据就可，但是这样还不是最简单的，有没有一步到位的，有旷课记录的话直接返回“是“，没有的话返回”否“。</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>是否旷课</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>=IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),”否”,”是”)</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>=IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),”否”,”是”)</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>=IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),”否”,”是”)</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>对于复杂数据常用的Excel小功能。</p>\n</blockquote>","more":"<p>–&gt;环境：Office2016</p>\n<p>Excel常用来做一些统计，咱们就根据需求进行函数介绍。</p>\n<h1 id=\"需求一\"><a href=\"#需求一\" class=\"headerlink\" title=\"需求一\"></a>需求一</h1><p>老师统计了一些平时不做作业，上课不认真听讲的同学名单，想看下他们的上学期的成绩。</p>\n<p>最简单的就是按照名字一个个复制，名字多的时候就有点尴尬了。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>姓名</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>不认真</td>\n<td>张三、李四、王五、赵六、孙七</td>\n</tr>\n</tbody>\n</table>\n<p>成绩表</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>61</td>\n</tr>\n<tr>\n<td>王二麻子</td>\n<td>88</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>60.2</td>\n</tr>\n<tr>\n<td>赵六</td>\n<td>60.9</td>\n</tr>\n<tr>\n<td>王五</td>\n<td>60.2</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>60.1</td>\n</tr>\n</tbody>\n</table>\n<p>最终结果</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>61</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>60.1</td>\n</tr>\n<tr>\n<td>王五</td>\n<td>60.2</td>\n</tr>\n<tr>\n<td>赵六</td>\n<td>60.2</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>60.9</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>先将一个单元格内容分成多个单元格，然后将多个横排的单元格转换成竖排的，最后根据名字去成绩表中查找对应的成绩。</p>\n<ol>\n<li>选中名字单元格–&gt;数据–&gt;数据工具–&gt;分列</li>\n<li>选中分列后的多个单元格右键–&gt;粘贴–&gt;转置</li>\n<li>用VLOOKUP（纵向查找函数）进行查找，参数分别为lookup_value、table_array、col_index_num、[range_lookup]</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>=VLOOKUP(A2,D$1:E$7,2,FALSE)</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>=VLOOKUP(A3,D$1:E$7,2,FALSE)</td>\n</tr>\n<tr>\n<td>王五</td>\n<td>=VLOOKUP(A4,D$1:E$7,2,FALSE)</td>\n</tr>\n<tr>\n<td>赵六</td>\n<td>=VLOOKUP(A5,D$1:E$7,2,FALSE)</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>=VLOOKUP(A6,D$1:E$7,2,FALSE)</td>\n</tr>\n</tbody>\n</table>\n<p>一定不要忘记在table_array区域填”$”对数据区域进行绝对引用。</p>\n<h1 id=\"需求二\"><a href=\"#需求二\" class=\"headerlink\" title=\"需求二\"></a>需求二</h1><p>根据旷课记录表查看以下表中的人是否有旷课记录。</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>是否旷课</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>是</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>是</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<p>旷课表</p>\n<table>\n<thead>\n<tr>\n<th>信息与艺术设计系旷课记录表</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>姓名</td>\n<td>课程名</td>\n</tr>\n<tr>\n<td>王二麻子</td>\n<td>ASP.NET项目开发实战</td>\n</tr>\n<tr>\n<td>王二麻子</td>\n<td>ASP.NET项目开发实战</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>ASP.NET项目开发实战</td>\n</tr>\n<tr>\n<td>王二麻子</td>\n<td>Android移动应用基础教程</td>\n</tr>\n<tr>\n<td>张三</td>\n<td>Android移动应用基础教程</td>\n</tr>\n<tr>\n<td>王二麻子</td>\n<td>毛泽东思想和中国特色社会主义理论体系概论</td>\n</tr>\n</tbody>\n</table>\n<p>最终表</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>是否旷课</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>是</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>是</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"实现-1\"><a href=\"#实现-1\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>其实这种也是用VLOOKUP来实现。</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>是否旷课</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>=VLOOKUP(A2,C$13:D$19,2,FALSE)</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>=VLOOKUP(A3,C$13:D$19,2,FALSE)</td>\n</tr>\n</tbody>\n</table>\n<p>如果有返回值不为“#N/A”，即代表有旷课记录，用Ctrl+R替换下数据就可，但是这样还不是最简单的，有没有一步到位的，有旷课记录的话直接返回“是“，没有的话返回”否“。</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>是否旷课</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td>=IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),”否”,”是”)</td>\n</tr>\n<tr>\n<td>李四</td>\n<td>=IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),”否”,”是”)</td>\n</tr>\n<tr>\n<td>孙七</td>\n<td>=IF(ISERROR(VLOOKUP(A2,C$13:D$19,2,FALSE)),”否”,”是”)</td>\n</tr>\n</tbody>\n</table>"},{"title":"一些十六进制的颜色","abbrlink":"e569fa5","date":"2016-04-27T05:54:26.000Z","_content":"\n{% cq %}整理于网络{% endcq %}\n\n<!--more-->\n\n\t<color name=\"white\">#FFFFFF</color><!--白色 -->\n\n    <color name=\"ivory\">#FFFFF0</color><!--象牙色 -->\n\n    <color name=\"lightyellow\">#FFFFE0</color><!--亮黄色 -->\n\n    <color name=\"yellow\">#FFFF00</color><!--黄色 -->\n\n    <color name=\"snow\">#FFFAFA</color><!--雪白色 -->\n\n    <color name=\"floralwhite\">#FFFAF0</color><!--花白色 -->\n\n    <color name=\"lemonchiffon\">#FFFACD</color><!--柠檬绸色 -->\n\n    <color name=\"cornsilk\">#FFF8DC</color><!--米绸色 -->\n\n    <color name=\"seashell\">#FFF5EE</color><!--海贝色 -->\n\n    <color name=\"lavenderblush\">#FFF0F5</color><!--淡紫红 -->\n\n    <color name=\"papayawhip\">#FFEFD5</color><!--番木色 -->\n\n    <color name=\"blanchedalmond\">#FFEBCD</color><!--白杏色 -->\n\n    <color name=\"mistyrose\">#FFE4E1</color><!--浅玫瑰色 -->\n\n    <color name=\"text_color\">#717171</color><!--浅玫瑰色 -->\n\n    <color name=\"bisque\">#FFE4C4</color><!--桔黄色 -->\n\n    <color name=\"moccasin\">#FFE4B5</color><!--鹿皮色 -->\n\n    <color name=\"navajowhite\">#FFDEAD</color><!--纳瓦白 -->\n\n    <color name=\"peachpuff\">#FFDAB9</color><!--桃色 -->\n\n    <color name=\"gold\">#FFD700</color><!--金色 -->\n\n    <color name=\"pink\">#FFC0CB</color><!--粉红色 -->\n\n    <color name=\"lightpink\">#FFB6C1</color><!--亮粉红色 -->\n\n    <color name=\"orange\">#FFA500</color><!--橙色 -->\n\n    <color name=\"lightsalmon\">#FFA07A</color><!--亮肉色 -->\n\n    <color name=\"darkorange\">#FF8C00</color><!--暗桔黄色 -->\n\n    <color name=\"coral\">#FF7F50</color><!--珊瑚色 -->\n\n    <color name=\"hotpink\">#FF69B4</color><!--热粉红色 -->\n\n    <color name=\"tomato\">#FF6347</color><!--西红柿色 -->\n\n    <color name=\"orangered\">#FF4500</color><!--红橙色 -->\n\n    <color name=\"deeppink\">#FF1493</color><!--深粉红色 -->\n\n    <color name=\"fuchsia\">#FF00FF</color><!--紫红色 -->\n\n    <color name=\"magenta\">#FF00FF</color><!--红紫色 -->\n\n    <color name=\"red\">#FF0000</color><!--红色 -->\n\n    <color name=\"oldlace\">#FDF5E6</color><!--老花色 -->\n\n    <color name=\"lightgoldenrodyellow\">#FAFAD2</color><!--亮金黄色 -->\n\n    <color name=\"linen\">#FAF0E6</color><!--亚麻色 -->\n\n    <color name=\"antiquewhite\">#FAEBD7</color><!--古董白 -->\n\n    <color name=\"salmon\">#FA8072</color><!--鲜肉色 -->\n\n    <color name=\"ghostwhite\">#F8F8FF</color><!--幽灵白 -->\n\n    <color name=\"mintcream\">#F5FFFA</color><!--薄荷色 -->\n\n    <color name=\"whitesmoke\">#F5F5F5</color><!--烟白色 -->\n\n    <color name=\"beige\">#F5F5DC</color><!--米色 -->\n\n    <color name=\"wheat\">#F5DEB3</color><!--浅黄色 -->\n\n    <color name=\"sandybrown\">#F4A460</color><!--沙褐色 -->\n\n    <color name=\"azure\">#F0FFFF</color><!--天蓝色 -->\n\n    <color name=\"honeydew\">#F0FFF0</color><!--蜜色 -->\n\n    <color name=\"aliceblue\">#F0F8FF</color><!--艾利斯兰 -->\n\n    <color name=\"khaki\">#F0E68C</color><!--黄褐色 -->\n\n    <color name=\"lightcoral\">#F08080</color><!--亮珊瑚色 -->\n\n    <color name=\"palegoldenrod\">#EEE8AA</color><!--苍麒麟色 -->\n\n    <color name=\"violet\">#EE82EE</color><!--紫罗兰色 -->\n\n    <color name=\"darksalmon\">#E9967A</color><!--暗肉色 -->\n\n    <color name=\"lavender\">#E6E6FA</color><!--淡紫色 -->\n\n    <color name=\"lightcyan\">#E0FFFF</color><!--亮青色 -->\n\n    <color name=\"burlywood\">#DEB887</color><!--实木色 -->\n\n    <color name=\"plum\">#DDA0DD</color><!--洋李色 -->\n\n    <color name=\"gainsboro\">#DCDCDC</color><!--淡灰色 -->\n\n    <color name=\"crimson\">#DC143C</color><!--暗深红色 -->\n\n    <color name=\"palevioletred\">#DB7093</color><!--苍紫罗兰色-->\n\n    <color name=\"goldenrod\">#DAA520</color><!--金麒麟色 -->\n\n    <color name=\"orchid\">#DA70D6</color><!--淡紫色 -->\n\n    <color name=\"thistle\">#D8BFD8</color><!--蓟色 -->\n\n    <color name=\"lightgray\">#D3D3D3</color><!--亮灰色 -->\n\n    <color name=\"lightgrey\">#D3D3D3</color><!--亮灰色 -->\n\n    <color name=\"tan\">#D2B48C</color><!--茶色 -->\n\n    <color name=\"chocolate\">#D2691E</color><!--巧可力色 -->\n\n    <color name=\"peru\">#CD853F</color><!--秘鲁色 -->\n\n    <color name=\"indianred\">#CD5C5C</color><!--印第安红 -->\n\n    <color name=\"mediumvioletred\">#C71585</color><!--中紫罗兰色 -->\n\n    <color name=\"silver\">#C0C0C0</color><!--银色 -->\n\n    <color name=\"darkkhaki\">#BDB76B</color><!-- 暗黄褐色 -->\n\n    <color name=\"rosybrown\">#BC8F8F</color><!--褐玫瑰红-->\n\n    <color name=\"mediumorchid\">#BA55D3</color><!--中粉紫色 -->\n\n    <color name=\"darkgoldenrod\">#B8860B</color><!--暗金黄色 -->\n\n    <color name=\"firebrick\">#B22222</color><!--火砖色 -->\n\n    <color name=\"powderblue\">#B0E0E6</color><!--粉蓝色 -->\n\n    <color name=\"lightsteelblue\">#B0C4DE</color><!--亮钢兰色 -->\n\n    <color name=\"paleturquoise\">#AFEEEE</color><!--苍宝石绿 -->\n\n    <color name=\"greenyellow\">#ADFF2F</color><!--黄绿色 -->\n\n    <color name=\"lightblue\">#ADD8E6</color><!--亮蓝色 -->\n\n    <color name=\"darkgray\">#A9A9A9</color><!--暗灰色 -->\n\n    <color name=\"darkgrey\">#A9A9A9</color><!--暗灰色 -->\n\n    <color name=\"brown\">#A52A2A</color><!--褐色 -->\n\n    <color name=\"sienna\">#A0522D</color><!--赭色 -->\n\n    <color name=\"darkorchid\">#9932CC</color><!--暗紫色 -->\n\n    <color name=\"palegreen\">#98FB98</color><!--苍绿色 -->\n\n    <color name=\"darkviolet\">#9400D3</color><!--暗紫罗兰色 -->\n\n    <color name=\"mediumpurple\">#9370DB</color><!--中紫色 -->\n\n    <color name=\"lightgreen\">#90EE90</color><!--亮绿色 -->\n\n    <color name=\"darkseagreen\">#8FBC8F</color><!--暗海兰色 -->\n\n    <color name=\"saddlebrown\">#8B4513</color><!--重褐色 -->\n\n    <color name=\"darkmagenta\">#8B008B</color><!--暗洋红 -->\n\n    <color name=\"darkred\">#8B0000</color><!--暗红色 -->\n\n    <color name=\"blueviolet\">#8A2BE2</color><!-- 紫罗兰蓝色-->\n\n    <color name=\"lightskyblue\">#87CEFA</color><!--亮天蓝色-->\n\n    <color name=\"skyblue\">#87CEEB</color><!--天蓝色 -->\n\n    <color name=\"gray\">#808080</color><!--灰色 -->\n\n    <color name=\"grey\">#808080</color><!--灰色 -->\n\n    <color name=\"olive\">#808000</color><!--橄榄色 -->\n\n    <color name=\"purple\">#800080</color><!--紫色 -->\n\n    <color name=\"maroon\">#800000</color><!--粟色 -->\n\n    <color name=\"aquamarine\">#7FFFD4</color><!--碧绿色 -->\n\n    <color name=\"chartreuse\">#7FFF00</color><!--黄绿色 -->\n\n    <color name=\"lawngreen\">#7CFC00</color><!--草绿色 -->\n\n    <color name=\"mediumslateblue\">#7B68EE</color><!--中暗蓝色 -->\n\n    <color name=\"lightslategray\">#778899</color><!--亮蓝灰 -->\n\n    <color name=\"lightslategrey\">#778899</color><!--亮蓝灰 -->\n\n    <color name=\"slategray\">#708090</color><!--灰石色 -->\n\n    <color name=\"slategrey\">#708090</color><!--灰石色 -->\n\n    <color name=\"olivedrab\">#6B8E23</color><!--深绿褐色 -->\n\n    <color name=\"slateblue\">#6A5ACD</color><!--石蓝色 -->\n\n    <color name=\"dimgray\">#696969</color><!--暗灰色 -->\n\n    <color name=\"dimgrey\">#696969</color><!--暗灰色 -->\n\n    <color name=\"mediumaquamarine\">#66CDAA</color><!--中绿色-->\n\n    <color name=\"cornflowerblue\">#6495ED</color><!--菊兰色 -->\n\n    <color name=\"cadetblue\">#5F9EA0</color><!--军兰色 -->\n\n    <color name=\"darkolivegreen\">#556B2F</color><!-- 暗橄榄绿 -->\n\n    <color name=\"indigo\">#4B0082</color><!--靛青色 -->\n\n    <color name=\"mediumturquoise\">#48D1CC</color><!--中绿宝石-->\n\n    <color name=\"darkslateblue\">#483D8B</color><!--暗灰蓝色 -->\n\n    <color name=\"steelblue\">#4682B4</color><!--钢兰色 -->\n\n    <color name=\"royalblue\">#4169E1</color><!--皇家蓝 -->\n\n    <color name=\"turquoise\">#40E0D0</color><!--青绿色 -->\n\n    <color name=\"mediumseagreen\">#3CB371</color><!--中海蓝 -->\n\n    <color name=\"limegreen\">#32CD32</color><!--橙绿色 -->\n\n    <color name=\"darkslategray\">#2F4F4F</color><!--暗瓦灰色 -->\n\n    <color name=\"darkslategrey\">#2F4F4F</color><!--暗瓦灰色 -->\n\n    <color name=\"seagreen\">#2E8B57</color><!--海绿色 -->\n\n    <color name=\"forestgreen\">#228B22</color><!--森林绿 -->\n\n    <color name=\"lightseagreen\">#20B2AA</color><!--亮海蓝色 -->\n\n    <color name=\"dodgerblue\">#1E90FF</color><!--闪兰色 -->\n\n    <color name=\"midnightblue\">#191970</color><!--中灰兰色 -->\n\n    <color name=\"aqua\">#00FFFF</color><!--浅绿色 -->\n\n    <color name=\"cyan\">#00FFFF</color><!--青色 -->\n\n    <color name=\"springgreen\">#00FF7F</color><!--春绿色 -->\n\n    <color name=\"lime\">#00FF00</color><!--酸橙色 -->\n\n    <color name=\"mediumspringgreen\">#00FA9A</color><!--中春绿色 -->\n\n    <color name=\"darkturquoise\">#00CED1</color><!--暗宝石绿 -->\n\n    <color name=\"deepskyblue\">#00BFFF</color><!--深天蓝色 -->\n\n    <color name=\"darkcyan\">#008B8B</color><!--暗青色 -->\n\n    <color name=\"teal\">#008080</color><!--水鸭色 -->\n\n    <color name=\"green\">#008000</color><!--绿色 -->\n\n    <color name=\"darkgreen\">#006400</color><!--暗绿色 -->\n\n    <color name=\"blue\">#0000FF</color><!--蓝色 -->\n\n    <color name=\"mediumblue\">#0000CD</color><!--中兰色 -->\n\n    <color name=\"darkblue\">#00008B</color><!--暗蓝色 -->\n\n    <color name=\"navy\">#000080</color><!--海军色 -->\n\n    <color name=\"black\">#000000</color><!--黑色 -->","source":"_posts/some-hex-color.md","raw":"---\ntitle: 一些十六进制的颜色\ntags:\n  - 常用颜色\ncategories: 整理\nabbrlink: e569fa5\ndate: 2016-04-27 13:54:26\n---\n\n{% cq %}整理于网络{% endcq %}\n\n<!--more-->\n\n\t<color name=\"white\">#FFFFFF</color><!--白色 -->\n\n    <color name=\"ivory\">#FFFFF0</color><!--象牙色 -->\n\n    <color name=\"lightyellow\">#FFFFE0</color><!--亮黄色 -->\n\n    <color name=\"yellow\">#FFFF00</color><!--黄色 -->\n\n    <color name=\"snow\">#FFFAFA</color><!--雪白色 -->\n\n    <color name=\"floralwhite\">#FFFAF0</color><!--花白色 -->\n\n    <color name=\"lemonchiffon\">#FFFACD</color><!--柠檬绸色 -->\n\n    <color name=\"cornsilk\">#FFF8DC</color><!--米绸色 -->\n\n    <color name=\"seashell\">#FFF5EE</color><!--海贝色 -->\n\n    <color name=\"lavenderblush\">#FFF0F5</color><!--淡紫红 -->\n\n    <color name=\"papayawhip\">#FFEFD5</color><!--番木色 -->\n\n    <color name=\"blanchedalmond\">#FFEBCD</color><!--白杏色 -->\n\n    <color name=\"mistyrose\">#FFE4E1</color><!--浅玫瑰色 -->\n\n    <color name=\"text_color\">#717171</color><!--浅玫瑰色 -->\n\n    <color name=\"bisque\">#FFE4C4</color><!--桔黄色 -->\n\n    <color name=\"moccasin\">#FFE4B5</color><!--鹿皮色 -->\n\n    <color name=\"navajowhite\">#FFDEAD</color><!--纳瓦白 -->\n\n    <color name=\"peachpuff\">#FFDAB9</color><!--桃色 -->\n\n    <color name=\"gold\">#FFD700</color><!--金色 -->\n\n    <color name=\"pink\">#FFC0CB</color><!--粉红色 -->\n\n    <color name=\"lightpink\">#FFB6C1</color><!--亮粉红色 -->\n\n    <color name=\"orange\">#FFA500</color><!--橙色 -->\n\n    <color name=\"lightsalmon\">#FFA07A</color><!--亮肉色 -->\n\n    <color name=\"darkorange\">#FF8C00</color><!--暗桔黄色 -->\n\n    <color name=\"coral\">#FF7F50</color><!--珊瑚色 -->\n\n    <color name=\"hotpink\">#FF69B4</color><!--热粉红色 -->\n\n    <color name=\"tomato\">#FF6347</color><!--西红柿色 -->\n\n    <color name=\"orangered\">#FF4500</color><!--红橙色 -->\n\n    <color name=\"deeppink\">#FF1493</color><!--深粉红色 -->\n\n    <color name=\"fuchsia\">#FF00FF</color><!--紫红色 -->\n\n    <color name=\"magenta\">#FF00FF</color><!--红紫色 -->\n\n    <color name=\"red\">#FF0000</color><!--红色 -->\n\n    <color name=\"oldlace\">#FDF5E6</color><!--老花色 -->\n\n    <color name=\"lightgoldenrodyellow\">#FAFAD2</color><!--亮金黄色 -->\n\n    <color name=\"linen\">#FAF0E6</color><!--亚麻色 -->\n\n    <color name=\"antiquewhite\">#FAEBD7</color><!--古董白 -->\n\n    <color name=\"salmon\">#FA8072</color><!--鲜肉色 -->\n\n    <color name=\"ghostwhite\">#F8F8FF</color><!--幽灵白 -->\n\n    <color name=\"mintcream\">#F5FFFA</color><!--薄荷色 -->\n\n    <color name=\"whitesmoke\">#F5F5F5</color><!--烟白色 -->\n\n    <color name=\"beige\">#F5F5DC</color><!--米色 -->\n\n    <color name=\"wheat\">#F5DEB3</color><!--浅黄色 -->\n\n    <color name=\"sandybrown\">#F4A460</color><!--沙褐色 -->\n\n    <color name=\"azure\">#F0FFFF</color><!--天蓝色 -->\n\n    <color name=\"honeydew\">#F0FFF0</color><!--蜜色 -->\n\n    <color name=\"aliceblue\">#F0F8FF</color><!--艾利斯兰 -->\n\n    <color name=\"khaki\">#F0E68C</color><!--黄褐色 -->\n\n    <color name=\"lightcoral\">#F08080</color><!--亮珊瑚色 -->\n\n    <color name=\"palegoldenrod\">#EEE8AA</color><!--苍麒麟色 -->\n\n    <color name=\"violet\">#EE82EE</color><!--紫罗兰色 -->\n\n    <color name=\"darksalmon\">#E9967A</color><!--暗肉色 -->\n\n    <color name=\"lavender\">#E6E6FA</color><!--淡紫色 -->\n\n    <color name=\"lightcyan\">#E0FFFF</color><!--亮青色 -->\n\n    <color name=\"burlywood\">#DEB887</color><!--实木色 -->\n\n    <color name=\"plum\">#DDA0DD</color><!--洋李色 -->\n\n    <color name=\"gainsboro\">#DCDCDC</color><!--淡灰色 -->\n\n    <color name=\"crimson\">#DC143C</color><!--暗深红色 -->\n\n    <color name=\"palevioletred\">#DB7093</color><!--苍紫罗兰色-->\n\n    <color name=\"goldenrod\">#DAA520</color><!--金麒麟色 -->\n\n    <color name=\"orchid\">#DA70D6</color><!--淡紫色 -->\n\n    <color name=\"thistle\">#D8BFD8</color><!--蓟色 -->\n\n    <color name=\"lightgray\">#D3D3D3</color><!--亮灰色 -->\n\n    <color name=\"lightgrey\">#D3D3D3</color><!--亮灰色 -->\n\n    <color name=\"tan\">#D2B48C</color><!--茶色 -->\n\n    <color name=\"chocolate\">#D2691E</color><!--巧可力色 -->\n\n    <color name=\"peru\">#CD853F</color><!--秘鲁色 -->\n\n    <color name=\"indianred\">#CD5C5C</color><!--印第安红 -->\n\n    <color name=\"mediumvioletred\">#C71585</color><!--中紫罗兰色 -->\n\n    <color name=\"silver\">#C0C0C0</color><!--银色 -->\n\n    <color name=\"darkkhaki\">#BDB76B</color><!-- 暗黄褐色 -->\n\n    <color name=\"rosybrown\">#BC8F8F</color><!--褐玫瑰红-->\n\n    <color name=\"mediumorchid\">#BA55D3</color><!--中粉紫色 -->\n\n    <color name=\"darkgoldenrod\">#B8860B</color><!--暗金黄色 -->\n\n    <color name=\"firebrick\">#B22222</color><!--火砖色 -->\n\n    <color name=\"powderblue\">#B0E0E6</color><!--粉蓝色 -->\n\n    <color name=\"lightsteelblue\">#B0C4DE</color><!--亮钢兰色 -->\n\n    <color name=\"paleturquoise\">#AFEEEE</color><!--苍宝石绿 -->\n\n    <color name=\"greenyellow\">#ADFF2F</color><!--黄绿色 -->\n\n    <color name=\"lightblue\">#ADD8E6</color><!--亮蓝色 -->\n\n    <color name=\"darkgray\">#A9A9A9</color><!--暗灰色 -->\n\n    <color name=\"darkgrey\">#A9A9A9</color><!--暗灰色 -->\n\n    <color name=\"brown\">#A52A2A</color><!--褐色 -->\n\n    <color name=\"sienna\">#A0522D</color><!--赭色 -->\n\n    <color name=\"darkorchid\">#9932CC</color><!--暗紫色 -->\n\n    <color name=\"palegreen\">#98FB98</color><!--苍绿色 -->\n\n    <color name=\"darkviolet\">#9400D3</color><!--暗紫罗兰色 -->\n\n    <color name=\"mediumpurple\">#9370DB</color><!--中紫色 -->\n\n    <color name=\"lightgreen\">#90EE90</color><!--亮绿色 -->\n\n    <color name=\"darkseagreen\">#8FBC8F</color><!--暗海兰色 -->\n\n    <color name=\"saddlebrown\">#8B4513</color><!--重褐色 -->\n\n    <color name=\"darkmagenta\">#8B008B</color><!--暗洋红 -->\n\n    <color name=\"darkred\">#8B0000</color><!--暗红色 -->\n\n    <color name=\"blueviolet\">#8A2BE2</color><!-- 紫罗兰蓝色-->\n\n    <color name=\"lightskyblue\">#87CEFA</color><!--亮天蓝色-->\n\n    <color name=\"skyblue\">#87CEEB</color><!--天蓝色 -->\n\n    <color name=\"gray\">#808080</color><!--灰色 -->\n\n    <color name=\"grey\">#808080</color><!--灰色 -->\n\n    <color name=\"olive\">#808000</color><!--橄榄色 -->\n\n    <color name=\"purple\">#800080</color><!--紫色 -->\n\n    <color name=\"maroon\">#800000</color><!--粟色 -->\n\n    <color name=\"aquamarine\">#7FFFD4</color><!--碧绿色 -->\n\n    <color name=\"chartreuse\">#7FFF00</color><!--黄绿色 -->\n\n    <color name=\"lawngreen\">#7CFC00</color><!--草绿色 -->\n\n    <color name=\"mediumslateblue\">#7B68EE</color><!--中暗蓝色 -->\n\n    <color name=\"lightslategray\">#778899</color><!--亮蓝灰 -->\n\n    <color name=\"lightslategrey\">#778899</color><!--亮蓝灰 -->\n\n    <color name=\"slategray\">#708090</color><!--灰石色 -->\n\n    <color name=\"slategrey\">#708090</color><!--灰石色 -->\n\n    <color name=\"olivedrab\">#6B8E23</color><!--深绿褐色 -->\n\n    <color name=\"slateblue\">#6A5ACD</color><!--石蓝色 -->\n\n    <color name=\"dimgray\">#696969</color><!--暗灰色 -->\n\n    <color name=\"dimgrey\">#696969</color><!--暗灰色 -->\n\n    <color name=\"mediumaquamarine\">#66CDAA</color><!--中绿色-->\n\n    <color name=\"cornflowerblue\">#6495ED</color><!--菊兰色 -->\n\n    <color name=\"cadetblue\">#5F9EA0</color><!--军兰色 -->\n\n    <color name=\"darkolivegreen\">#556B2F</color><!-- 暗橄榄绿 -->\n\n    <color name=\"indigo\">#4B0082</color><!--靛青色 -->\n\n    <color name=\"mediumturquoise\">#48D1CC</color><!--中绿宝石-->\n\n    <color name=\"darkslateblue\">#483D8B</color><!--暗灰蓝色 -->\n\n    <color name=\"steelblue\">#4682B4</color><!--钢兰色 -->\n\n    <color name=\"royalblue\">#4169E1</color><!--皇家蓝 -->\n\n    <color name=\"turquoise\">#40E0D0</color><!--青绿色 -->\n\n    <color name=\"mediumseagreen\">#3CB371</color><!--中海蓝 -->\n\n    <color name=\"limegreen\">#32CD32</color><!--橙绿色 -->\n\n    <color name=\"darkslategray\">#2F4F4F</color><!--暗瓦灰色 -->\n\n    <color name=\"darkslategrey\">#2F4F4F</color><!--暗瓦灰色 -->\n\n    <color name=\"seagreen\">#2E8B57</color><!--海绿色 -->\n\n    <color name=\"forestgreen\">#228B22</color><!--森林绿 -->\n\n    <color name=\"lightseagreen\">#20B2AA</color><!--亮海蓝色 -->\n\n    <color name=\"dodgerblue\">#1E90FF</color><!--闪兰色 -->\n\n    <color name=\"midnightblue\">#191970</color><!--中灰兰色 -->\n\n    <color name=\"aqua\">#00FFFF</color><!--浅绿色 -->\n\n    <color name=\"cyan\">#00FFFF</color><!--青色 -->\n\n    <color name=\"springgreen\">#00FF7F</color><!--春绿色 -->\n\n    <color name=\"lime\">#00FF00</color><!--酸橙色 -->\n\n    <color name=\"mediumspringgreen\">#00FA9A</color><!--中春绿色 -->\n\n    <color name=\"darkturquoise\">#00CED1</color><!--暗宝石绿 -->\n\n    <color name=\"deepskyblue\">#00BFFF</color><!--深天蓝色 -->\n\n    <color name=\"darkcyan\">#008B8B</color><!--暗青色 -->\n\n    <color name=\"teal\">#008080</color><!--水鸭色 -->\n\n    <color name=\"green\">#008000</color><!--绿色 -->\n\n    <color name=\"darkgreen\">#006400</color><!--暗绿色 -->\n\n    <color name=\"blue\">#0000FF</color><!--蓝色 -->\n\n    <color name=\"mediumblue\">#0000CD</color><!--中兰色 -->\n\n    <color name=\"darkblue\">#00008B</color><!--暗蓝色 -->\n\n    <color name=\"navy\">#000080</color><!--海军色 -->\n\n    <color name=\"black\">#000000</color><!--黑色 -->","slug":"some-hex-color","published":1,"updated":"2017-06-08T12:20:29.310Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih330029sv1f6sptlogw","content":"<blockquote class=\"blockquote-center\"><p>整理于网络</p>\n</blockquote>\n<a id=\"more\"></a>\n<pre><code>&lt;color name=&quot;white&quot;&gt;#FFFFFF&lt;/color&gt;&lt;!--白色 --&gt;\n\n&lt;color name=&quot;ivory&quot;&gt;#FFFFF0&lt;/color&gt;&lt;!--象牙色 --&gt;\n\n&lt;color name=&quot;lightyellow&quot;&gt;#FFFFE0&lt;/color&gt;&lt;!--亮黄色 --&gt;\n\n&lt;color name=&quot;yellow&quot;&gt;#FFFF00&lt;/color&gt;&lt;!--黄色 --&gt;\n\n&lt;color name=&quot;snow&quot;&gt;#FFFAFA&lt;/color&gt;&lt;!--雪白色 --&gt;\n\n&lt;color name=&quot;floralwhite&quot;&gt;#FFFAF0&lt;/color&gt;&lt;!--花白色 --&gt;\n\n&lt;color name=&quot;lemonchiffon&quot;&gt;#FFFACD&lt;/color&gt;&lt;!--柠檬绸色 --&gt;\n\n&lt;color name=&quot;cornsilk&quot;&gt;#FFF8DC&lt;/color&gt;&lt;!--米绸色 --&gt;\n\n&lt;color name=&quot;seashell&quot;&gt;#FFF5EE&lt;/color&gt;&lt;!--海贝色 --&gt;\n\n&lt;color name=&quot;lavenderblush&quot;&gt;#FFF0F5&lt;/color&gt;&lt;!--淡紫红 --&gt;\n\n&lt;color name=&quot;papayawhip&quot;&gt;#FFEFD5&lt;/color&gt;&lt;!--番木色 --&gt;\n\n&lt;color name=&quot;blanchedalmond&quot;&gt;#FFEBCD&lt;/color&gt;&lt;!--白杏色 --&gt;\n\n&lt;color name=&quot;mistyrose&quot;&gt;#FFE4E1&lt;/color&gt;&lt;!--浅玫瑰色 --&gt;\n\n&lt;color name=&quot;text_color&quot;&gt;#717171&lt;/color&gt;&lt;!--浅玫瑰色 --&gt;\n\n&lt;color name=&quot;bisque&quot;&gt;#FFE4C4&lt;/color&gt;&lt;!--桔黄色 --&gt;\n\n&lt;color name=&quot;moccasin&quot;&gt;#FFE4B5&lt;/color&gt;&lt;!--鹿皮色 --&gt;\n\n&lt;color name=&quot;navajowhite&quot;&gt;#FFDEAD&lt;/color&gt;&lt;!--纳瓦白 --&gt;\n\n&lt;color name=&quot;peachpuff&quot;&gt;#FFDAB9&lt;/color&gt;&lt;!--桃色 --&gt;\n\n&lt;color name=&quot;gold&quot;&gt;#FFD700&lt;/color&gt;&lt;!--金色 --&gt;\n\n&lt;color name=&quot;pink&quot;&gt;#FFC0CB&lt;/color&gt;&lt;!--粉红色 --&gt;\n\n&lt;color name=&quot;lightpink&quot;&gt;#FFB6C1&lt;/color&gt;&lt;!--亮粉红色 --&gt;\n\n&lt;color name=&quot;orange&quot;&gt;#FFA500&lt;/color&gt;&lt;!--橙色 --&gt;\n\n&lt;color name=&quot;lightsalmon&quot;&gt;#FFA07A&lt;/color&gt;&lt;!--亮肉色 --&gt;\n\n&lt;color name=&quot;darkorange&quot;&gt;#FF8C00&lt;/color&gt;&lt;!--暗桔黄色 --&gt;\n\n&lt;color name=&quot;coral&quot;&gt;#FF7F50&lt;/color&gt;&lt;!--珊瑚色 --&gt;\n\n&lt;color name=&quot;hotpink&quot;&gt;#FF69B4&lt;/color&gt;&lt;!--热粉红色 --&gt;\n\n&lt;color name=&quot;tomato&quot;&gt;#FF6347&lt;/color&gt;&lt;!--西红柿色 --&gt;\n\n&lt;color name=&quot;orangered&quot;&gt;#FF4500&lt;/color&gt;&lt;!--红橙色 --&gt;\n\n&lt;color name=&quot;deeppink&quot;&gt;#FF1493&lt;/color&gt;&lt;!--深粉红色 --&gt;\n\n&lt;color name=&quot;fuchsia&quot;&gt;#FF00FF&lt;/color&gt;&lt;!--紫红色 --&gt;\n\n&lt;color name=&quot;magenta&quot;&gt;#FF00FF&lt;/color&gt;&lt;!--红紫色 --&gt;\n\n&lt;color name=&quot;red&quot;&gt;#FF0000&lt;/color&gt;&lt;!--红色 --&gt;\n\n&lt;color name=&quot;oldlace&quot;&gt;#FDF5E6&lt;/color&gt;&lt;!--老花色 --&gt;\n\n&lt;color name=&quot;lightgoldenrodyellow&quot;&gt;#FAFAD2&lt;/color&gt;&lt;!--亮金黄色 --&gt;\n\n&lt;color name=&quot;linen&quot;&gt;#FAF0E6&lt;/color&gt;&lt;!--亚麻色 --&gt;\n\n&lt;color name=&quot;antiquewhite&quot;&gt;#FAEBD7&lt;/color&gt;&lt;!--古董白 --&gt;\n\n&lt;color name=&quot;salmon&quot;&gt;#FA8072&lt;/color&gt;&lt;!--鲜肉色 --&gt;\n\n&lt;color name=&quot;ghostwhite&quot;&gt;#F8F8FF&lt;/color&gt;&lt;!--幽灵白 --&gt;\n\n&lt;color name=&quot;mintcream&quot;&gt;#F5FFFA&lt;/color&gt;&lt;!--薄荷色 --&gt;\n\n&lt;color name=&quot;whitesmoke&quot;&gt;#F5F5F5&lt;/color&gt;&lt;!--烟白色 --&gt;\n\n&lt;color name=&quot;beige&quot;&gt;#F5F5DC&lt;/color&gt;&lt;!--米色 --&gt;\n\n&lt;color name=&quot;wheat&quot;&gt;#F5DEB3&lt;/color&gt;&lt;!--浅黄色 --&gt;\n\n&lt;color name=&quot;sandybrown&quot;&gt;#F4A460&lt;/color&gt;&lt;!--沙褐色 --&gt;\n\n&lt;color name=&quot;azure&quot;&gt;#F0FFFF&lt;/color&gt;&lt;!--天蓝色 --&gt;\n\n&lt;color name=&quot;honeydew&quot;&gt;#F0FFF0&lt;/color&gt;&lt;!--蜜色 --&gt;\n\n&lt;color name=&quot;aliceblue&quot;&gt;#F0F8FF&lt;/color&gt;&lt;!--艾利斯兰 --&gt;\n\n&lt;color name=&quot;khaki&quot;&gt;#F0E68C&lt;/color&gt;&lt;!--黄褐色 --&gt;\n\n&lt;color name=&quot;lightcoral&quot;&gt;#F08080&lt;/color&gt;&lt;!--亮珊瑚色 --&gt;\n\n&lt;color name=&quot;palegoldenrod&quot;&gt;#EEE8AA&lt;/color&gt;&lt;!--苍麒麟色 --&gt;\n\n&lt;color name=&quot;violet&quot;&gt;#EE82EE&lt;/color&gt;&lt;!--紫罗兰色 --&gt;\n\n&lt;color name=&quot;darksalmon&quot;&gt;#E9967A&lt;/color&gt;&lt;!--暗肉色 --&gt;\n\n&lt;color name=&quot;lavender&quot;&gt;#E6E6FA&lt;/color&gt;&lt;!--淡紫色 --&gt;\n\n&lt;color name=&quot;lightcyan&quot;&gt;#E0FFFF&lt;/color&gt;&lt;!--亮青色 --&gt;\n\n&lt;color name=&quot;burlywood&quot;&gt;#DEB887&lt;/color&gt;&lt;!--实木色 --&gt;\n\n&lt;color name=&quot;plum&quot;&gt;#DDA0DD&lt;/color&gt;&lt;!--洋李色 --&gt;\n\n&lt;color name=&quot;gainsboro&quot;&gt;#DCDCDC&lt;/color&gt;&lt;!--淡灰色 --&gt;\n\n&lt;color name=&quot;crimson&quot;&gt;#DC143C&lt;/color&gt;&lt;!--暗深红色 --&gt;\n\n&lt;color name=&quot;palevioletred&quot;&gt;#DB7093&lt;/color&gt;&lt;!--苍紫罗兰色--&gt;\n\n&lt;color name=&quot;goldenrod&quot;&gt;#DAA520&lt;/color&gt;&lt;!--金麒麟色 --&gt;\n\n&lt;color name=&quot;orchid&quot;&gt;#DA70D6&lt;/color&gt;&lt;!--淡紫色 --&gt;\n\n&lt;color name=&quot;thistle&quot;&gt;#D8BFD8&lt;/color&gt;&lt;!--蓟色 --&gt;\n\n&lt;color name=&quot;lightgray&quot;&gt;#D3D3D3&lt;/color&gt;&lt;!--亮灰色 --&gt;\n\n&lt;color name=&quot;lightgrey&quot;&gt;#D3D3D3&lt;/color&gt;&lt;!--亮灰色 --&gt;\n\n&lt;color name=&quot;tan&quot;&gt;#D2B48C&lt;/color&gt;&lt;!--茶色 --&gt;\n\n&lt;color name=&quot;chocolate&quot;&gt;#D2691E&lt;/color&gt;&lt;!--巧可力色 --&gt;\n\n&lt;color name=&quot;peru&quot;&gt;#CD853F&lt;/color&gt;&lt;!--秘鲁色 --&gt;\n\n&lt;color name=&quot;indianred&quot;&gt;#CD5C5C&lt;/color&gt;&lt;!--印第安红 --&gt;\n\n&lt;color name=&quot;mediumvioletred&quot;&gt;#C71585&lt;/color&gt;&lt;!--中紫罗兰色 --&gt;\n\n&lt;color name=&quot;silver&quot;&gt;#C0C0C0&lt;/color&gt;&lt;!--银色 --&gt;\n\n&lt;color name=&quot;darkkhaki&quot;&gt;#BDB76B&lt;/color&gt;&lt;!-- 暗黄褐色 --&gt;\n\n&lt;color name=&quot;rosybrown&quot;&gt;#BC8F8F&lt;/color&gt;&lt;!--褐玫瑰红--&gt;\n\n&lt;color name=&quot;mediumorchid&quot;&gt;#BA55D3&lt;/color&gt;&lt;!--中粉紫色 --&gt;\n\n&lt;color name=&quot;darkgoldenrod&quot;&gt;#B8860B&lt;/color&gt;&lt;!--暗金黄色 --&gt;\n\n&lt;color name=&quot;firebrick&quot;&gt;#B22222&lt;/color&gt;&lt;!--火砖色 --&gt;\n\n&lt;color name=&quot;powderblue&quot;&gt;#B0E0E6&lt;/color&gt;&lt;!--粉蓝色 --&gt;\n\n&lt;color name=&quot;lightsteelblue&quot;&gt;#B0C4DE&lt;/color&gt;&lt;!--亮钢兰色 --&gt;\n\n&lt;color name=&quot;paleturquoise&quot;&gt;#AFEEEE&lt;/color&gt;&lt;!--苍宝石绿 --&gt;\n\n&lt;color name=&quot;greenyellow&quot;&gt;#ADFF2F&lt;/color&gt;&lt;!--黄绿色 --&gt;\n\n&lt;color name=&quot;lightblue&quot;&gt;#ADD8E6&lt;/color&gt;&lt;!--亮蓝色 --&gt;\n\n&lt;color name=&quot;darkgray&quot;&gt;#A9A9A9&lt;/color&gt;&lt;!--暗灰色 --&gt;\n\n&lt;color name=&quot;darkgrey&quot;&gt;#A9A9A9&lt;/color&gt;&lt;!--暗灰色 --&gt;\n\n&lt;color name=&quot;brown&quot;&gt;#A52A2A&lt;/color&gt;&lt;!--褐色 --&gt;\n\n&lt;color name=&quot;sienna&quot;&gt;#A0522D&lt;/color&gt;&lt;!--赭色 --&gt;\n\n&lt;color name=&quot;darkorchid&quot;&gt;#9932CC&lt;/color&gt;&lt;!--暗紫色 --&gt;\n\n&lt;color name=&quot;palegreen&quot;&gt;#98FB98&lt;/color&gt;&lt;!--苍绿色 --&gt;\n\n&lt;color name=&quot;darkviolet&quot;&gt;#9400D3&lt;/color&gt;&lt;!--暗紫罗兰色 --&gt;\n\n&lt;color name=&quot;mediumpurple&quot;&gt;#9370DB&lt;/color&gt;&lt;!--中紫色 --&gt;\n\n&lt;color name=&quot;lightgreen&quot;&gt;#90EE90&lt;/color&gt;&lt;!--亮绿色 --&gt;\n\n&lt;color name=&quot;darkseagreen&quot;&gt;#8FBC8F&lt;/color&gt;&lt;!--暗海兰色 --&gt;\n\n&lt;color name=&quot;saddlebrown&quot;&gt;#8B4513&lt;/color&gt;&lt;!--重褐色 --&gt;\n\n&lt;color name=&quot;darkmagenta&quot;&gt;#8B008B&lt;/color&gt;&lt;!--暗洋红 --&gt;\n\n&lt;color name=&quot;darkred&quot;&gt;#8B0000&lt;/color&gt;&lt;!--暗红色 --&gt;\n\n&lt;color name=&quot;blueviolet&quot;&gt;#8A2BE2&lt;/color&gt;&lt;!-- 紫罗兰蓝色--&gt;\n\n&lt;color name=&quot;lightskyblue&quot;&gt;#87CEFA&lt;/color&gt;&lt;!--亮天蓝色--&gt;\n\n&lt;color name=&quot;skyblue&quot;&gt;#87CEEB&lt;/color&gt;&lt;!--天蓝色 --&gt;\n\n&lt;color name=&quot;gray&quot;&gt;#808080&lt;/color&gt;&lt;!--灰色 --&gt;\n\n&lt;color name=&quot;grey&quot;&gt;#808080&lt;/color&gt;&lt;!--灰色 --&gt;\n\n&lt;color name=&quot;olive&quot;&gt;#808000&lt;/color&gt;&lt;!--橄榄色 --&gt;\n\n&lt;color name=&quot;purple&quot;&gt;#800080&lt;/color&gt;&lt;!--紫色 --&gt;\n\n&lt;color name=&quot;maroon&quot;&gt;#800000&lt;/color&gt;&lt;!--粟色 --&gt;\n\n&lt;color name=&quot;aquamarine&quot;&gt;#7FFFD4&lt;/color&gt;&lt;!--碧绿色 --&gt;\n\n&lt;color name=&quot;chartreuse&quot;&gt;#7FFF00&lt;/color&gt;&lt;!--黄绿色 --&gt;\n\n&lt;color name=&quot;lawngreen&quot;&gt;#7CFC00&lt;/color&gt;&lt;!--草绿色 --&gt;\n\n&lt;color name=&quot;mediumslateblue&quot;&gt;#7B68EE&lt;/color&gt;&lt;!--中暗蓝色 --&gt;\n\n&lt;color name=&quot;lightslategray&quot;&gt;#778899&lt;/color&gt;&lt;!--亮蓝灰 --&gt;\n\n&lt;color name=&quot;lightslategrey&quot;&gt;#778899&lt;/color&gt;&lt;!--亮蓝灰 --&gt;\n\n&lt;color name=&quot;slategray&quot;&gt;#708090&lt;/color&gt;&lt;!--灰石色 --&gt;\n\n&lt;color name=&quot;slategrey&quot;&gt;#708090&lt;/color&gt;&lt;!--灰石色 --&gt;\n\n&lt;color name=&quot;olivedrab&quot;&gt;#6B8E23&lt;/color&gt;&lt;!--深绿褐色 --&gt;\n\n&lt;color name=&quot;slateblue&quot;&gt;#6A5ACD&lt;/color&gt;&lt;!--石蓝色 --&gt;\n\n&lt;color name=&quot;dimgray&quot;&gt;#696969&lt;/color&gt;&lt;!--暗灰色 --&gt;\n\n&lt;color name=&quot;dimgrey&quot;&gt;#696969&lt;/color&gt;&lt;!--暗灰色 --&gt;\n\n&lt;color name=&quot;mediumaquamarine&quot;&gt;#66CDAA&lt;/color&gt;&lt;!--中绿色--&gt;\n\n&lt;color name=&quot;cornflowerblue&quot;&gt;#6495ED&lt;/color&gt;&lt;!--菊兰色 --&gt;\n\n&lt;color name=&quot;cadetblue&quot;&gt;#5F9EA0&lt;/color&gt;&lt;!--军兰色 --&gt;\n\n&lt;color name=&quot;darkolivegreen&quot;&gt;#556B2F&lt;/color&gt;&lt;!-- 暗橄榄绿 --&gt;\n\n&lt;color name=&quot;indigo&quot;&gt;#4B0082&lt;/color&gt;&lt;!--靛青色 --&gt;\n\n&lt;color name=&quot;mediumturquoise&quot;&gt;#48D1CC&lt;/color&gt;&lt;!--中绿宝石--&gt;\n\n&lt;color name=&quot;darkslateblue&quot;&gt;#483D8B&lt;/color&gt;&lt;!--暗灰蓝色 --&gt;\n\n&lt;color name=&quot;steelblue&quot;&gt;#4682B4&lt;/color&gt;&lt;!--钢兰色 --&gt;\n\n&lt;color name=&quot;royalblue&quot;&gt;#4169E1&lt;/color&gt;&lt;!--皇家蓝 --&gt;\n\n&lt;color name=&quot;turquoise&quot;&gt;#40E0D0&lt;/color&gt;&lt;!--青绿色 --&gt;\n\n&lt;color name=&quot;mediumseagreen&quot;&gt;#3CB371&lt;/color&gt;&lt;!--中海蓝 --&gt;\n\n&lt;color name=&quot;limegreen&quot;&gt;#32CD32&lt;/color&gt;&lt;!--橙绿色 --&gt;\n\n&lt;color name=&quot;darkslategray&quot;&gt;#2F4F4F&lt;/color&gt;&lt;!--暗瓦灰色 --&gt;\n\n&lt;color name=&quot;darkslategrey&quot;&gt;#2F4F4F&lt;/color&gt;&lt;!--暗瓦灰色 --&gt;\n\n&lt;color name=&quot;seagreen&quot;&gt;#2E8B57&lt;/color&gt;&lt;!--海绿色 --&gt;\n\n&lt;color name=&quot;forestgreen&quot;&gt;#228B22&lt;/color&gt;&lt;!--森林绿 --&gt;\n\n&lt;color name=&quot;lightseagreen&quot;&gt;#20B2AA&lt;/color&gt;&lt;!--亮海蓝色 --&gt;\n\n&lt;color name=&quot;dodgerblue&quot;&gt;#1E90FF&lt;/color&gt;&lt;!--闪兰色 --&gt;\n\n&lt;color name=&quot;midnightblue&quot;&gt;#191970&lt;/color&gt;&lt;!--中灰兰色 --&gt;\n\n&lt;color name=&quot;aqua&quot;&gt;#00FFFF&lt;/color&gt;&lt;!--浅绿色 --&gt;\n\n&lt;color name=&quot;cyan&quot;&gt;#00FFFF&lt;/color&gt;&lt;!--青色 --&gt;\n\n&lt;color name=&quot;springgreen&quot;&gt;#00FF7F&lt;/color&gt;&lt;!--春绿色 --&gt;\n\n&lt;color name=&quot;lime&quot;&gt;#00FF00&lt;/color&gt;&lt;!--酸橙色 --&gt;\n\n&lt;color name=&quot;mediumspringgreen&quot;&gt;#00FA9A&lt;/color&gt;&lt;!--中春绿色 --&gt;\n\n&lt;color name=&quot;darkturquoise&quot;&gt;#00CED1&lt;/color&gt;&lt;!--暗宝石绿 --&gt;\n\n&lt;color name=&quot;deepskyblue&quot;&gt;#00BFFF&lt;/color&gt;&lt;!--深天蓝色 --&gt;\n\n&lt;color name=&quot;darkcyan&quot;&gt;#008B8B&lt;/color&gt;&lt;!--暗青色 --&gt;\n\n&lt;color name=&quot;teal&quot;&gt;#008080&lt;/color&gt;&lt;!--水鸭色 --&gt;\n\n&lt;color name=&quot;green&quot;&gt;#008000&lt;/color&gt;&lt;!--绿色 --&gt;\n\n&lt;color name=&quot;darkgreen&quot;&gt;#006400&lt;/color&gt;&lt;!--暗绿色 --&gt;\n\n&lt;color name=&quot;blue&quot;&gt;#0000FF&lt;/color&gt;&lt;!--蓝色 --&gt;\n\n&lt;color name=&quot;mediumblue&quot;&gt;#0000CD&lt;/color&gt;&lt;!--中兰色 --&gt;\n\n&lt;color name=&quot;darkblue&quot;&gt;#00008B&lt;/color&gt;&lt;!--暗蓝色 --&gt;\n\n&lt;color name=&quot;navy&quot;&gt;#000080&lt;/color&gt;&lt;!--海军色 --&gt;\n\n&lt;color name=&quot;black&quot;&gt;#000000&lt;/color&gt;&lt;!--黑色 --&gt;\n</code></pre>","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>整理于网络</p>\n</blockquote>","more":"<pre><code>&lt;color name=&quot;white&quot;&gt;#FFFFFF&lt;/color&gt;&lt;!--白色 --&gt;\n\n&lt;color name=&quot;ivory&quot;&gt;#FFFFF0&lt;/color&gt;&lt;!--象牙色 --&gt;\n\n&lt;color name=&quot;lightyellow&quot;&gt;#FFFFE0&lt;/color&gt;&lt;!--亮黄色 --&gt;\n\n&lt;color name=&quot;yellow&quot;&gt;#FFFF00&lt;/color&gt;&lt;!--黄色 --&gt;\n\n&lt;color name=&quot;snow&quot;&gt;#FFFAFA&lt;/color&gt;&lt;!--雪白色 --&gt;\n\n&lt;color name=&quot;floralwhite&quot;&gt;#FFFAF0&lt;/color&gt;&lt;!--花白色 --&gt;\n\n&lt;color name=&quot;lemonchiffon&quot;&gt;#FFFACD&lt;/color&gt;&lt;!--柠檬绸色 --&gt;\n\n&lt;color name=&quot;cornsilk&quot;&gt;#FFF8DC&lt;/color&gt;&lt;!--米绸色 --&gt;\n\n&lt;color name=&quot;seashell&quot;&gt;#FFF5EE&lt;/color&gt;&lt;!--海贝色 --&gt;\n\n&lt;color name=&quot;lavenderblush&quot;&gt;#FFF0F5&lt;/color&gt;&lt;!--淡紫红 --&gt;\n\n&lt;color name=&quot;papayawhip&quot;&gt;#FFEFD5&lt;/color&gt;&lt;!--番木色 --&gt;\n\n&lt;color name=&quot;blanchedalmond&quot;&gt;#FFEBCD&lt;/color&gt;&lt;!--白杏色 --&gt;\n\n&lt;color name=&quot;mistyrose&quot;&gt;#FFE4E1&lt;/color&gt;&lt;!--浅玫瑰色 --&gt;\n\n&lt;color name=&quot;text_color&quot;&gt;#717171&lt;/color&gt;&lt;!--浅玫瑰色 --&gt;\n\n&lt;color name=&quot;bisque&quot;&gt;#FFE4C4&lt;/color&gt;&lt;!--桔黄色 --&gt;\n\n&lt;color name=&quot;moccasin&quot;&gt;#FFE4B5&lt;/color&gt;&lt;!--鹿皮色 --&gt;\n\n&lt;color name=&quot;navajowhite&quot;&gt;#FFDEAD&lt;/color&gt;&lt;!--纳瓦白 --&gt;\n\n&lt;color name=&quot;peachpuff&quot;&gt;#FFDAB9&lt;/color&gt;&lt;!--桃色 --&gt;\n\n&lt;color name=&quot;gold&quot;&gt;#FFD700&lt;/color&gt;&lt;!--金色 --&gt;\n\n&lt;color name=&quot;pink&quot;&gt;#FFC0CB&lt;/color&gt;&lt;!--粉红色 --&gt;\n\n&lt;color name=&quot;lightpink&quot;&gt;#FFB6C1&lt;/color&gt;&lt;!--亮粉红色 --&gt;\n\n&lt;color name=&quot;orange&quot;&gt;#FFA500&lt;/color&gt;&lt;!--橙色 --&gt;\n\n&lt;color name=&quot;lightsalmon&quot;&gt;#FFA07A&lt;/color&gt;&lt;!--亮肉色 --&gt;\n\n&lt;color name=&quot;darkorange&quot;&gt;#FF8C00&lt;/color&gt;&lt;!--暗桔黄色 --&gt;\n\n&lt;color name=&quot;coral&quot;&gt;#FF7F50&lt;/color&gt;&lt;!--珊瑚色 --&gt;\n\n&lt;color name=&quot;hotpink&quot;&gt;#FF69B4&lt;/color&gt;&lt;!--热粉红色 --&gt;\n\n&lt;color name=&quot;tomato&quot;&gt;#FF6347&lt;/color&gt;&lt;!--西红柿色 --&gt;\n\n&lt;color name=&quot;orangered&quot;&gt;#FF4500&lt;/color&gt;&lt;!--红橙色 --&gt;\n\n&lt;color name=&quot;deeppink&quot;&gt;#FF1493&lt;/color&gt;&lt;!--深粉红色 --&gt;\n\n&lt;color name=&quot;fuchsia&quot;&gt;#FF00FF&lt;/color&gt;&lt;!--紫红色 --&gt;\n\n&lt;color name=&quot;magenta&quot;&gt;#FF00FF&lt;/color&gt;&lt;!--红紫色 --&gt;\n\n&lt;color name=&quot;red&quot;&gt;#FF0000&lt;/color&gt;&lt;!--红色 --&gt;\n\n&lt;color name=&quot;oldlace&quot;&gt;#FDF5E6&lt;/color&gt;&lt;!--老花色 --&gt;\n\n&lt;color name=&quot;lightgoldenrodyellow&quot;&gt;#FAFAD2&lt;/color&gt;&lt;!--亮金黄色 --&gt;\n\n&lt;color name=&quot;linen&quot;&gt;#FAF0E6&lt;/color&gt;&lt;!--亚麻色 --&gt;\n\n&lt;color name=&quot;antiquewhite&quot;&gt;#FAEBD7&lt;/color&gt;&lt;!--古董白 --&gt;\n\n&lt;color name=&quot;salmon&quot;&gt;#FA8072&lt;/color&gt;&lt;!--鲜肉色 --&gt;\n\n&lt;color name=&quot;ghostwhite&quot;&gt;#F8F8FF&lt;/color&gt;&lt;!--幽灵白 --&gt;\n\n&lt;color name=&quot;mintcream&quot;&gt;#F5FFFA&lt;/color&gt;&lt;!--薄荷色 --&gt;\n\n&lt;color name=&quot;whitesmoke&quot;&gt;#F5F5F5&lt;/color&gt;&lt;!--烟白色 --&gt;\n\n&lt;color name=&quot;beige&quot;&gt;#F5F5DC&lt;/color&gt;&lt;!--米色 --&gt;\n\n&lt;color name=&quot;wheat&quot;&gt;#F5DEB3&lt;/color&gt;&lt;!--浅黄色 --&gt;\n\n&lt;color name=&quot;sandybrown&quot;&gt;#F4A460&lt;/color&gt;&lt;!--沙褐色 --&gt;\n\n&lt;color name=&quot;azure&quot;&gt;#F0FFFF&lt;/color&gt;&lt;!--天蓝色 --&gt;\n\n&lt;color name=&quot;honeydew&quot;&gt;#F0FFF0&lt;/color&gt;&lt;!--蜜色 --&gt;\n\n&lt;color name=&quot;aliceblue&quot;&gt;#F0F8FF&lt;/color&gt;&lt;!--艾利斯兰 --&gt;\n\n&lt;color name=&quot;khaki&quot;&gt;#F0E68C&lt;/color&gt;&lt;!--黄褐色 --&gt;\n\n&lt;color name=&quot;lightcoral&quot;&gt;#F08080&lt;/color&gt;&lt;!--亮珊瑚色 --&gt;\n\n&lt;color name=&quot;palegoldenrod&quot;&gt;#EEE8AA&lt;/color&gt;&lt;!--苍麒麟色 --&gt;\n\n&lt;color name=&quot;violet&quot;&gt;#EE82EE&lt;/color&gt;&lt;!--紫罗兰色 --&gt;\n\n&lt;color name=&quot;darksalmon&quot;&gt;#E9967A&lt;/color&gt;&lt;!--暗肉色 --&gt;\n\n&lt;color name=&quot;lavender&quot;&gt;#E6E6FA&lt;/color&gt;&lt;!--淡紫色 --&gt;\n\n&lt;color name=&quot;lightcyan&quot;&gt;#E0FFFF&lt;/color&gt;&lt;!--亮青色 --&gt;\n\n&lt;color name=&quot;burlywood&quot;&gt;#DEB887&lt;/color&gt;&lt;!--实木色 --&gt;\n\n&lt;color name=&quot;plum&quot;&gt;#DDA0DD&lt;/color&gt;&lt;!--洋李色 --&gt;\n\n&lt;color name=&quot;gainsboro&quot;&gt;#DCDCDC&lt;/color&gt;&lt;!--淡灰色 --&gt;\n\n&lt;color name=&quot;crimson&quot;&gt;#DC143C&lt;/color&gt;&lt;!--暗深红色 --&gt;\n\n&lt;color name=&quot;palevioletred&quot;&gt;#DB7093&lt;/color&gt;&lt;!--苍紫罗兰色--&gt;\n\n&lt;color name=&quot;goldenrod&quot;&gt;#DAA520&lt;/color&gt;&lt;!--金麒麟色 --&gt;\n\n&lt;color name=&quot;orchid&quot;&gt;#DA70D6&lt;/color&gt;&lt;!--淡紫色 --&gt;\n\n&lt;color name=&quot;thistle&quot;&gt;#D8BFD8&lt;/color&gt;&lt;!--蓟色 --&gt;\n\n&lt;color name=&quot;lightgray&quot;&gt;#D3D3D3&lt;/color&gt;&lt;!--亮灰色 --&gt;\n\n&lt;color name=&quot;lightgrey&quot;&gt;#D3D3D3&lt;/color&gt;&lt;!--亮灰色 --&gt;\n\n&lt;color name=&quot;tan&quot;&gt;#D2B48C&lt;/color&gt;&lt;!--茶色 --&gt;\n\n&lt;color name=&quot;chocolate&quot;&gt;#D2691E&lt;/color&gt;&lt;!--巧可力色 --&gt;\n\n&lt;color name=&quot;peru&quot;&gt;#CD853F&lt;/color&gt;&lt;!--秘鲁色 --&gt;\n\n&lt;color name=&quot;indianred&quot;&gt;#CD5C5C&lt;/color&gt;&lt;!--印第安红 --&gt;\n\n&lt;color name=&quot;mediumvioletred&quot;&gt;#C71585&lt;/color&gt;&lt;!--中紫罗兰色 --&gt;\n\n&lt;color name=&quot;silver&quot;&gt;#C0C0C0&lt;/color&gt;&lt;!--银色 --&gt;\n\n&lt;color name=&quot;darkkhaki&quot;&gt;#BDB76B&lt;/color&gt;&lt;!-- 暗黄褐色 --&gt;\n\n&lt;color name=&quot;rosybrown&quot;&gt;#BC8F8F&lt;/color&gt;&lt;!--褐玫瑰红--&gt;\n\n&lt;color name=&quot;mediumorchid&quot;&gt;#BA55D3&lt;/color&gt;&lt;!--中粉紫色 --&gt;\n\n&lt;color name=&quot;darkgoldenrod&quot;&gt;#B8860B&lt;/color&gt;&lt;!--暗金黄色 --&gt;\n\n&lt;color name=&quot;firebrick&quot;&gt;#B22222&lt;/color&gt;&lt;!--火砖色 --&gt;\n\n&lt;color name=&quot;powderblue&quot;&gt;#B0E0E6&lt;/color&gt;&lt;!--粉蓝色 --&gt;\n\n&lt;color name=&quot;lightsteelblue&quot;&gt;#B0C4DE&lt;/color&gt;&lt;!--亮钢兰色 --&gt;\n\n&lt;color name=&quot;paleturquoise&quot;&gt;#AFEEEE&lt;/color&gt;&lt;!--苍宝石绿 --&gt;\n\n&lt;color name=&quot;greenyellow&quot;&gt;#ADFF2F&lt;/color&gt;&lt;!--黄绿色 --&gt;\n\n&lt;color name=&quot;lightblue&quot;&gt;#ADD8E6&lt;/color&gt;&lt;!--亮蓝色 --&gt;\n\n&lt;color name=&quot;darkgray&quot;&gt;#A9A9A9&lt;/color&gt;&lt;!--暗灰色 --&gt;\n\n&lt;color name=&quot;darkgrey&quot;&gt;#A9A9A9&lt;/color&gt;&lt;!--暗灰色 --&gt;\n\n&lt;color name=&quot;brown&quot;&gt;#A52A2A&lt;/color&gt;&lt;!--褐色 --&gt;\n\n&lt;color name=&quot;sienna&quot;&gt;#A0522D&lt;/color&gt;&lt;!--赭色 --&gt;\n\n&lt;color name=&quot;darkorchid&quot;&gt;#9932CC&lt;/color&gt;&lt;!--暗紫色 --&gt;\n\n&lt;color name=&quot;palegreen&quot;&gt;#98FB98&lt;/color&gt;&lt;!--苍绿色 --&gt;\n\n&lt;color name=&quot;darkviolet&quot;&gt;#9400D3&lt;/color&gt;&lt;!--暗紫罗兰色 --&gt;\n\n&lt;color name=&quot;mediumpurple&quot;&gt;#9370DB&lt;/color&gt;&lt;!--中紫色 --&gt;\n\n&lt;color name=&quot;lightgreen&quot;&gt;#90EE90&lt;/color&gt;&lt;!--亮绿色 --&gt;\n\n&lt;color name=&quot;darkseagreen&quot;&gt;#8FBC8F&lt;/color&gt;&lt;!--暗海兰色 --&gt;\n\n&lt;color name=&quot;saddlebrown&quot;&gt;#8B4513&lt;/color&gt;&lt;!--重褐色 --&gt;\n\n&lt;color name=&quot;darkmagenta&quot;&gt;#8B008B&lt;/color&gt;&lt;!--暗洋红 --&gt;\n\n&lt;color name=&quot;darkred&quot;&gt;#8B0000&lt;/color&gt;&lt;!--暗红色 --&gt;\n\n&lt;color name=&quot;blueviolet&quot;&gt;#8A2BE2&lt;/color&gt;&lt;!-- 紫罗兰蓝色--&gt;\n\n&lt;color name=&quot;lightskyblue&quot;&gt;#87CEFA&lt;/color&gt;&lt;!--亮天蓝色--&gt;\n\n&lt;color name=&quot;skyblue&quot;&gt;#87CEEB&lt;/color&gt;&lt;!--天蓝色 --&gt;\n\n&lt;color name=&quot;gray&quot;&gt;#808080&lt;/color&gt;&lt;!--灰色 --&gt;\n\n&lt;color name=&quot;grey&quot;&gt;#808080&lt;/color&gt;&lt;!--灰色 --&gt;\n\n&lt;color name=&quot;olive&quot;&gt;#808000&lt;/color&gt;&lt;!--橄榄色 --&gt;\n\n&lt;color name=&quot;purple&quot;&gt;#800080&lt;/color&gt;&lt;!--紫色 --&gt;\n\n&lt;color name=&quot;maroon&quot;&gt;#800000&lt;/color&gt;&lt;!--粟色 --&gt;\n\n&lt;color name=&quot;aquamarine&quot;&gt;#7FFFD4&lt;/color&gt;&lt;!--碧绿色 --&gt;\n\n&lt;color name=&quot;chartreuse&quot;&gt;#7FFF00&lt;/color&gt;&lt;!--黄绿色 --&gt;\n\n&lt;color name=&quot;lawngreen&quot;&gt;#7CFC00&lt;/color&gt;&lt;!--草绿色 --&gt;\n\n&lt;color name=&quot;mediumslateblue&quot;&gt;#7B68EE&lt;/color&gt;&lt;!--中暗蓝色 --&gt;\n\n&lt;color name=&quot;lightslategray&quot;&gt;#778899&lt;/color&gt;&lt;!--亮蓝灰 --&gt;\n\n&lt;color name=&quot;lightslategrey&quot;&gt;#778899&lt;/color&gt;&lt;!--亮蓝灰 --&gt;\n\n&lt;color name=&quot;slategray&quot;&gt;#708090&lt;/color&gt;&lt;!--灰石色 --&gt;\n\n&lt;color name=&quot;slategrey&quot;&gt;#708090&lt;/color&gt;&lt;!--灰石色 --&gt;\n\n&lt;color name=&quot;olivedrab&quot;&gt;#6B8E23&lt;/color&gt;&lt;!--深绿褐色 --&gt;\n\n&lt;color name=&quot;slateblue&quot;&gt;#6A5ACD&lt;/color&gt;&lt;!--石蓝色 --&gt;\n\n&lt;color name=&quot;dimgray&quot;&gt;#696969&lt;/color&gt;&lt;!--暗灰色 --&gt;\n\n&lt;color name=&quot;dimgrey&quot;&gt;#696969&lt;/color&gt;&lt;!--暗灰色 --&gt;\n\n&lt;color name=&quot;mediumaquamarine&quot;&gt;#66CDAA&lt;/color&gt;&lt;!--中绿色--&gt;\n\n&lt;color name=&quot;cornflowerblue&quot;&gt;#6495ED&lt;/color&gt;&lt;!--菊兰色 --&gt;\n\n&lt;color name=&quot;cadetblue&quot;&gt;#5F9EA0&lt;/color&gt;&lt;!--军兰色 --&gt;\n\n&lt;color name=&quot;darkolivegreen&quot;&gt;#556B2F&lt;/color&gt;&lt;!-- 暗橄榄绿 --&gt;\n\n&lt;color name=&quot;indigo&quot;&gt;#4B0082&lt;/color&gt;&lt;!--靛青色 --&gt;\n\n&lt;color name=&quot;mediumturquoise&quot;&gt;#48D1CC&lt;/color&gt;&lt;!--中绿宝石--&gt;\n\n&lt;color name=&quot;darkslateblue&quot;&gt;#483D8B&lt;/color&gt;&lt;!--暗灰蓝色 --&gt;\n\n&lt;color name=&quot;steelblue&quot;&gt;#4682B4&lt;/color&gt;&lt;!--钢兰色 --&gt;\n\n&lt;color name=&quot;royalblue&quot;&gt;#4169E1&lt;/color&gt;&lt;!--皇家蓝 --&gt;\n\n&lt;color name=&quot;turquoise&quot;&gt;#40E0D0&lt;/color&gt;&lt;!--青绿色 --&gt;\n\n&lt;color name=&quot;mediumseagreen&quot;&gt;#3CB371&lt;/color&gt;&lt;!--中海蓝 --&gt;\n\n&lt;color name=&quot;limegreen&quot;&gt;#32CD32&lt;/color&gt;&lt;!--橙绿色 --&gt;\n\n&lt;color name=&quot;darkslategray&quot;&gt;#2F4F4F&lt;/color&gt;&lt;!--暗瓦灰色 --&gt;\n\n&lt;color name=&quot;darkslategrey&quot;&gt;#2F4F4F&lt;/color&gt;&lt;!--暗瓦灰色 --&gt;\n\n&lt;color name=&quot;seagreen&quot;&gt;#2E8B57&lt;/color&gt;&lt;!--海绿色 --&gt;\n\n&lt;color name=&quot;forestgreen&quot;&gt;#228B22&lt;/color&gt;&lt;!--森林绿 --&gt;\n\n&lt;color name=&quot;lightseagreen&quot;&gt;#20B2AA&lt;/color&gt;&lt;!--亮海蓝色 --&gt;\n\n&lt;color name=&quot;dodgerblue&quot;&gt;#1E90FF&lt;/color&gt;&lt;!--闪兰色 --&gt;\n\n&lt;color name=&quot;midnightblue&quot;&gt;#191970&lt;/color&gt;&lt;!--中灰兰色 --&gt;\n\n&lt;color name=&quot;aqua&quot;&gt;#00FFFF&lt;/color&gt;&lt;!--浅绿色 --&gt;\n\n&lt;color name=&quot;cyan&quot;&gt;#00FFFF&lt;/color&gt;&lt;!--青色 --&gt;\n\n&lt;color name=&quot;springgreen&quot;&gt;#00FF7F&lt;/color&gt;&lt;!--春绿色 --&gt;\n\n&lt;color name=&quot;lime&quot;&gt;#00FF00&lt;/color&gt;&lt;!--酸橙色 --&gt;\n\n&lt;color name=&quot;mediumspringgreen&quot;&gt;#00FA9A&lt;/color&gt;&lt;!--中春绿色 --&gt;\n\n&lt;color name=&quot;darkturquoise&quot;&gt;#00CED1&lt;/color&gt;&lt;!--暗宝石绿 --&gt;\n\n&lt;color name=&quot;deepskyblue&quot;&gt;#00BFFF&lt;/color&gt;&lt;!--深天蓝色 --&gt;\n\n&lt;color name=&quot;darkcyan&quot;&gt;#008B8B&lt;/color&gt;&lt;!--暗青色 --&gt;\n\n&lt;color name=&quot;teal&quot;&gt;#008080&lt;/color&gt;&lt;!--水鸭色 --&gt;\n\n&lt;color name=&quot;green&quot;&gt;#008000&lt;/color&gt;&lt;!--绿色 --&gt;\n\n&lt;color name=&quot;darkgreen&quot;&gt;#006400&lt;/color&gt;&lt;!--暗绿色 --&gt;\n\n&lt;color name=&quot;blue&quot;&gt;#0000FF&lt;/color&gt;&lt;!--蓝色 --&gt;\n\n&lt;color name=&quot;mediumblue&quot;&gt;#0000CD&lt;/color&gt;&lt;!--中兰色 --&gt;\n\n&lt;color name=&quot;darkblue&quot;&gt;#00008B&lt;/color&gt;&lt;!--暗蓝色 --&gt;\n\n&lt;color name=&quot;navy&quot;&gt;#000080&lt;/color&gt;&lt;!--海军色 --&gt;\n\n&lt;color name=&quot;black&quot;&gt;#000000&lt;/color&gt;&lt;!--黑色 --&gt;\n</code></pre>"},{"title":"微信小程序访问httpsAPI","abbrlink":"827cc1d0","date":"2017-03-27T12:51:36.000Z","_content":"\n{% cq %}微信小程序在用户体验及用户信息安全方面确实做足了工作。{% endcq %}\n\n<!--more-->\n\n微信公众平台官网关于小程序介绍中，有一个单独的板块“设计”，这个板块是\n专门统一用户体验的，包含了一些字体大小、图标大小、topbar的信息等。\n\n安全方面微信API中明确说明开发者不能随便获取用户信息或者利用漏洞获取信息。\n而且小程序只能请求在公众平台配置的域名。域名不能写子域名、端口号而且必须是https，但是在实际的开发中小程序是能对不同端口号访问的，但是不能对子域名访问可能是申请https证书的时候就是唯一的域名。\n\n### 申请免费https证书\n我之前买的一个域名是在阿里云买的，当然腾讯也有免费的证书服务，在阿里云购买证书的话阿里云会自动将证书解析添加到解析面板。\n\n阿里云控制台-->安全（云盾）-->证书服务-->购买证书\n选择 免费型DV SSL ，然后去支付0.00元。。\n然后去证书服务控制台补全信息就行了~是不是很简单啊。\n\n### 配置证书\n证书服务下载证书中详细的不同的应用服务器配置文档。\n有一个坑是 官方配置中密钥路径是不完全的，在实际密钥配置中要填写密钥全路径。\n配置完成及得重启。\n重启后tomcat第一次启动可能会特别慢，浏览器一直处于与服务器连接状态也不会拒绝访问，等第一次请求完成后，以后刷新浏览器直接相应到，本以为是网络原因但是nginx重启后能接着访问，就排除了网络原因。\n\n实际上是tomcat在第一次启动时调用jvm的产生随机数,jvm是调用/dev/random产生随机数，这个/dev/random会返回小雨熵池噪声总数的随机字节，是同步阻塞式方法，假如熵池噪声数为空或者不够，tomcat就会一直卡在产生SessionID地方，自然而然卡住，直到产生足够的随机字节才能正常使用。\n\n> /dev/random是同步阻塞式。\n> /dev/urandom或/dev/./urandom是异步非阻塞式\n\n可以通过更改tomcat的catalina.sh中加入这么一行：-Djava.security.egd=file:/dev/./urandom或/dev/urandom，更改java中的random方法，/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/security/java.security中的securerandom.source=file:/dev/random改为/dev/./urandom或/dev/urandom，还有一种是增大噪音数。\n\n贴一下自己tomcat的https配置部分。通过yum安装的tomcat的安装路径为/usr/share/tomcat，配置文件路径在/etc/tomcat，server.xml也在其中。\n``` \n<Connector port=\"8443\"\nprotocol=\"org.apache.coyote.http11.Http11Protocol\"\nkeystoreFile=\"/etc/tomcat/cert/your-name.jks\"\nkeystorePass=\"214055589090202\"\nmaxThreads=\"150\"\nSSLEnabled=\"true\"\nscheme=\"https\"\nsecure=\"true\"\nclientAuth=\"false\"\nsslProtocol=\"TLS\" />\n```\n\n### 配置完成端口问题\n正在学习，直接修改server.xml中配置端口号怎么修改都不行。修改重启完就拒绝访问了。\n\n### 小程序访问服务器\n考虑到WEB服务API可能会变化，所以把API地址放到了Bmob云逻辑里，这样小程序先获取BmobAPI地址然后再实现业务逻辑，这样就实现了不用更新小程序就可以发布最新的API地址，也可以做一个固定的API地址来存放其他变化的API地址。\n```js\nwx.request({\n    url: address,\n    header: {\n        // \"Content-Type\":\"application/json\"\n    },\n    success: function (res) {\n        console.log(\"服务器测试数据：\" + res.data)\n    },\n    fail: function (err) {\n        console.log(err)\n        }\n    })\n```","source":"_posts/wechat-app-https.md","raw":"---\ntitle: 微信小程序访问httpsAPI\ntags:\n  - https\ncategories: Wechat App\nabbrlink: 827cc1d0\ndate: 2017-03-27 20:51:36\n---\n\n{% cq %}微信小程序在用户体验及用户信息安全方面确实做足了工作。{% endcq %}\n\n<!--more-->\n\n微信公众平台官网关于小程序介绍中，有一个单独的板块“设计”，这个板块是\n专门统一用户体验的，包含了一些字体大小、图标大小、topbar的信息等。\n\n安全方面微信API中明确说明开发者不能随便获取用户信息或者利用漏洞获取信息。\n而且小程序只能请求在公众平台配置的域名。域名不能写子域名、端口号而且必须是https，但是在实际的开发中小程序是能对不同端口号访问的，但是不能对子域名访问可能是申请https证书的时候就是唯一的域名。\n\n### 申请免费https证书\n我之前买的一个域名是在阿里云买的，当然腾讯也有免费的证书服务，在阿里云购买证书的话阿里云会自动将证书解析添加到解析面板。\n\n阿里云控制台-->安全（云盾）-->证书服务-->购买证书\n选择 免费型DV SSL ，然后去支付0.00元。。\n然后去证书服务控制台补全信息就行了~是不是很简单啊。\n\n### 配置证书\n证书服务下载证书中详细的不同的应用服务器配置文档。\n有一个坑是 官方配置中密钥路径是不完全的，在实际密钥配置中要填写密钥全路径。\n配置完成及得重启。\n重启后tomcat第一次启动可能会特别慢，浏览器一直处于与服务器连接状态也不会拒绝访问，等第一次请求完成后，以后刷新浏览器直接相应到，本以为是网络原因但是nginx重启后能接着访问，就排除了网络原因。\n\n实际上是tomcat在第一次启动时调用jvm的产生随机数,jvm是调用/dev/random产生随机数，这个/dev/random会返回小雨熵池噪声总数的随机字节，是同步阻塞式方法，假如熵池噪声数为空或者不够，tomcat就会一直卡在产生SessionID地方，自然而然卡住，直到产生足够的随机字节才能正常使用。\n\n> /dev/random是同步阻塞式。\n> /dev/urandom或/dev/./urandom是异步非阻塞式\n\n可以通过更改tomcat的catalina.sh中加入这么一行：-Djava.security.egd=file:/dev/./urandom或/dev/urandom，更改java中的random方法，/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/security/java.security中的securerandom.source=file:/dev/random改为/dev/./urandom或/dev/urandom，还有一种是增大噪音数。\n\n贴一下自己tomcat的https配置部分。通过yum安装的tomcat的安装路径为/usr/share/tomcat，配置文件路径在/etc/tomcat，server.xml也在其中。\n``` \n<Connector port=\"8443\"\nprotocol=\"org.apache.coyote.http11.Http11Protocol\"\nkeystoreFile=\"/etc/tomcat/cert/your-name.jks\"\nkeystorePass=\"214055589090202\"\nmaxThreads=\"150\"\nSSLEnabled=\"true\"\nscheme=\"https\"\nsecure=\"true\"\nclientAuth=\"false\"\nsslProtocol=\"TLS\" />\n```\n\n### 配置完成端口问题\n正在学习，直接修改server.xml中配置端口号怎么修改都不行。修改重启完就拒绝访问了。\n\n### 小程序访问服务器\n考虑到WEB服务API可能会变化，所以把API地址放到了Bmob云逻辑里，这样小程序先获取BmobAPI地址然后再实现业务逻辑，这样就实现了不用更新小程序就可以发布最新的API地址，也可以做一个固定的API地址来存放其他变化的API地址。\n```js\nwx.request({\n    url: address,\n    header: {\n        // \"Content-Type\":\"application/json\"\n    },\n    success: function (res) {\n        console.log(\"服务器测试数据：\" + res.data)\n    },\n    fail: function (err) {\n        console.log(err)\n        }\n    })\n```","slug":"wechat-app-https","published":1,"updated":"2017-06-08T12:20:29.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih3a002csv1fh24weupe","content":"<blockquote class=\"blockquote-center\"><p>微信小程序在用户体验及用户信息安全方面确实做足了工作。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>微信公众平台官网关于小程序介绍中，有一个单独的板块“设计”，这个板块是<br>专门统一用户体验的，包含了一些字体大小、图标大小、topbar的信息等。</p>\n<p>安全方面微信API中明确说明开发者不能随便获取用户信息或者利用漏洞获取信息。<br>而且小程序只能请求在公众平台配置的域名。域名不能写子域名、端口号而且必须是https，但是在实际的开发中小程序是能对不同端口号访问的，但是不能对子域名访问可能是申请https证书的时候就是唯一的域名。</p>\n<h3 id=\"申请免费https证书\"><a href=\"#申请免费https证书\" class=\"headerlink\" title=\"申请免费https证书\"></a>申请免费https证书</h3><p>我之前买的一个域名是在阿里云买的，当然腾讯也有免费的证书服务，在阿里云购买证书的话阿里云会自动将证书解析添加到解析面板。</p>\n<p>阿里云控制台–&gt;安全（云盾）–&gt;证书服务–&gt;购买证书<br>选择 免费型DV SSL ，然后去支付0.00元。。<br>然后去证书服务控制台补全信息就行了~是不是很简单啊。</p>\n<h3 id=\"配置证书\"><a href=\"#配置证书\" class=\"headerlink\" title=\"配置证书\"></a>配置证书</h3><p>证书服务下载证书中详细的不同的应用服务器配置文档。<br>有一个坑是 官方配置中密钥路径是不完全的，在实际密钥配置中要填写密钥全路径。<br>配置完成及得重启。<br>重启后tomcat第一次启动可能会特别慢，浏览器一直处于与服务器连接状态也不会拒绝访问，等第一次请求完成后，以后刷新浏览器直接相应到，本以为是网络原因但是nginx重启后能接着访问，就排除了网络原因。</p>\n<p>实际上是tomcat在第一次启动时调用jvm的产生随机数,jvm是调用/dev/random产生随机数，这个/dev/random会返回小雨熵池噪声总数的随机字节，是同步阻塞式方法，假如熵池噪声数为空或者不够，tomcat就会一直卡在产生SessionID地方，自然而然卡住，直到产生足够的随机字节才能正常使用。</p>\n<blockquote>\n<p>/dev/random是同步阻塞式。<br>/dev/urandom或/dev/./urandom是异步非阻塞式</p>\n</blockquote>\n<p>可以通过更改tomcat的catalina.sh中加入这么一行：-Djava.security.egd=file:/dev/./urandom或/dev/urandom，更改java中的random方法，/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/security/java.security中的securerandom.source=file:/dev/random改为/dev/./urandom或/dev/urandom，还有一种是增大噪音数。</p>\n<p>贴一下自己tomcat的https配置部分。通过yum安装的tomcat的安装路径为/usr/share/tomcat，配置文件路径在/etc/tomcat，server.xml也在其中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector port=&quot;8443&quot;</div><div class=\"line\">protocol=&quot;org.apache.coyote.http11.Http11Protocol&quot;</div><div class=\"line\">keystoreFile=&quot;/etc/tomcat/cert/your-name.jks&quot;</div><div class=\"line\">keystorePass=&quot;214055589090202&quot;</div><div class=\"line\">maxThreads=&quot;150&quot;</div><div class=\"line\">SSLEnabled=&quot;true&quot;</div><div class=\"line\">scheme=&quot;https&quot;</div><div class=\"line\">secure=&quot;true&quot;</div><div class=\"line\">clientAuth=&quot;false&quot;</div><div class=\"line\">sslProtocol=&quot;TLS&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"配置完成端口问题\"><a href=\"#配置完成端口问题\" class=\"headerlink\" title=\"配置完成端口问题\"></a>配置完成端口问题</h3><p>正在学习，直接修改server.xml中配置端口号怎么修改都不行。修改重启完就拒绝访问了。</p>\n<h3 id=\"小程序访问服务器\"><a href=\"#小程序访问服务器\" class=\"headerlink\" title=\"小程序访问服务器\"></a>小程序访问服务器</h3><p>考虑到WEB服务API可能会变化，所以把API地址放到了Bmob云逻辑里，这样小程序先获取BmobAPI地址然后再实现业务逻辑，这样就实现了不用更新小程序就可以发布最新的API地址，也可以做一个固定的API地址来存放其他变化的API地址。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">wx.request(&#123;</div><div class=\"line\">    url: address,</div><div class=\"line\">    header: &#123;</div><div class=\"line\">        <span class=\"comment\">// \"Content-Type\":\"application/json\"</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"服务器测试数据：\"</span> + res.data)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    fail: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(err)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>微信小程序在用户体验及用户信息安全方面确实做足了工作。</p>\n</blockquote>","more":"<p>微信公众平台官网关于小程序介绍中，有一个单独的板块“设计”，这个板块是<br>专门统一用户体验的，包含了一些字体大小、图标大小、topbar的信息等。</p>\n<p>安全方面微信API中明确说明开发者不能随便获取用户信息或者利用漏洞获取信息。<br>而且小程序只能请求在公众平台配置的域名。域名不能写子域名、端口号而且必须是https，但是在实际的开发中小程序是能对不同端口号访问的，但是不能对子域名访问可能是申请https证书的时候就是唯一的域名。</p>\n<h3 id=\"申请免费https证书\"><a href=\"#申请免费https证书\" class=\"headerlink\" title=\"申请免费https证书\"></a>申请免费https证书</h3><p>我之前买的一个域名是在阿里云买的，当然腾讯也有免费的证书服务，在阿里云购买证书的话阿里云会自动将证书解析添加到解析面板。</p>\n<p>阿里云控制台–&gt;安全（云盾）–&gt;证书服务–&gt;购买证书<br>选择 免费型DV SSL ，然后去支付0.00元。。<br>然后去证书服务控制台补全信息就行了~是不是很简单啊。</p>\n<h3 id=\"配置证书\"><a href=\"#配置证书\" class=\"headerlink\" title=\"配置证书\"></a>配置证书</h3><p>证书服务下载证书中详细的不同的应用服务器配置文档。<br>有一个坑是 官方配置中密钥路径是不完全的，在实际密钥配置中要填写密钥全路径。<br>配置完成及得重启。<br>重启后tomcat第一次启动可能会特别慢，浏览器一直处于与服务器连接状态也不会拒绝访问，等第一次请求完成后，以后刷新浏览器直接相应到，本以为是网络原因但是nginx重启后能接着访问，就排除了网络原因。</p>\n<p>实际上是tomcat在第一次启动时调用jvm的产生随机数,jvm是调用/dev/random产生随机数，这个/dev/random会返回小雨熵池噪声总数的随机字节，是同步阻塞式方法，假如熵池噪声数为空或者不够，tomcat就会一直卡在产生SessionID地方，自然而然卡住，直到产生足够的随机字节才能正常使用。</p>\n<blockquote>\n<p>/dev/random是同步阻塞式。<br>/dev/urandom或/dev/./urandom是异步非阻塞式</p>\n</blockquote>\n<p>可以通过更改tomcat的catalina.sh中加入这么一行：-Djava.security.egd=file:/dev/./urandom或/dev/urandom，更改java中的random方法，/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/security/java.security中的securerandom.source=file:/dev/random改为/dev/./urandom或/dev/urandom，还有一种是增大噪音数。</p>\n<p>贴一下自己tomcat的https配置部分。通过yum安装的tomcat的安装路径为/usr/share/tomcat，配置文件路径在/etc/tomcat，server.xml也在其中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector port=&quot;8443&quot;</div><div class=\"line\">protocol=&quot;org.apache.coyote.http11.Http11Protocol&quot;</div><div class=\"line\">keystoreFile=&quot;/etc/tomcat/cert/your-name.jks&quot;</div><div class=\"line\">keystorePass=&quot;214055589090202&quot;</div><div class=\"line\">maxThreads=&quot;150&quot;</div><div class=\"line\">SSLEnabled=&quot;true&quot;</div><div class=\"line\">scheme=&quot;https&quot;</div><div class=\"line\">secure=&quot;true&quot;</div><div class=\"line\">clientAuth=&quot;false&quot;</div><div class=\"line\">sslProtocol=&quot;TLS&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"配置完成端口问题\"><a href=\"#配置完成端口问题\" class=\"headerlink\" title=\"配置完成端口问题\"></a>配置完成端口问题</h3><p>正在学习，直接修改server.xml中配置端口号怎么修改都不行。修改重启完就拒绝访问了。</p>\n<h3 id=\"小程序访问服务器\"><a href=\"#小程序访问服务器\" class=\"headerlink\" title=\"小程序访问服务器\"></a>小程序访问服务器</h3><p>考虑到WEB服务API可能会变化，所以把API地址放到了Bmob云逻辑里，这样小程序先获取BmobAPI地址然后再实现业务逻辑，这样就实现了不用更新小程序就可以发布最新的API地址，也可以做一个固定的API地址来存放其他变化的API地址。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">wx.request(&#123;</div><div class=\"line\">    url: address,</div><div class=\"line\">    header: &#123;</div><div class=\"line\">        <span class=\"comment\">// \"Content-Type\":\"application/json\"</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"服务器测试数据：\"</span> + res.data)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    fail: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(err)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)</div></pre></td></tr></table></figure></p>"},{"title":"微信小程序开发小记","abbrlink":"e55c06f7","date":"2017-03-12T02:50:20.000Z","_content":"\n{% cq %}微信小程序开发小记{% endcq %}\n\n<!--more-->\n\n小程序从注册到上线确实是很严格，感觉小程序并不是很火，可能是相比小程序App用的比较多，小程序的出发点是发展线下推广，即扫即用，所以就目前API来说 不能分享到微信朋友圈，而且打开小程序不能通过长按二维码图片进入，比较好的线上宣传方式就是小程序右上角的分享了，分享到朋友或微信群其他人就可以直接点击进入。\n\n这里就不说基本的东西，基本的语法什么的可以去看公众平台，大部分是js跟css的东西。\n\n下面就说下遇到的坑还有一些经验吧。\n\n1. 写好的页面要在app.json中注册，app.json就相当于Android中的Manifest.xml文件，管着整个应用的。\n2. 某文件父文件夹有几个就写几个\"../\"可以退到对应文件夹。\n3. 在外层声明var that = this;可以在内层间接获取到this的数据。\n4. 页面中控件位置可以用css来控制，所以css要学好。\n5. 适当运用data-key这个属性，可以在wx.perview时用到。 \n6. 小程序不能分享到朋友圈也不能长按二维码图片进入。\n7. 小程序不支持http访问，而且访问公网的网站必须要在小程序官网配置上。\n8. 小程序审核时间在两天左右，周六周天不审核，感觉审核门槛还不算特别高。\n\n待补充~\n","source":"_posts/wechat-app.md","raw":"---\ntitle: 微信小程序开发小记\ntags:\n  - 山东微拼\ncategories: Wechat App\nabbrlink: e55c06f7\ndate: 2017-03-12 10:50:20\n---\n\n{% cq %}微信小程序开发小记{% endcq %}\n\n<!--more-->\n\n小程序从注册到上线确实是很严格，感觉小程序并不是很火，可能是相比小程序App用的比较多，小程序的出发点是发展线下推广，即扫即用，所以就目前API来说 不能分享到微信朋友圈，而且打开小程序不能通过长按二维码图片进入，比较好的线上宣传方式就是小程序右上角的分享了，分享到朋友或微信群其他人就可以直接点击进入。\n\n这里就不说基本的东西，基本的语法什么的可以去看公众平台，大部分是js跟css的东西。\n\n下面就说下遇到的坑还有一些经验吧。\n\n1. 写好的页面要在app.json中注册，app.json就相当于Android中的Manifest.xml文件，管着整个应用的。\n2. 某文件父文件夹有几个就写几个\"../\"可以退到对应文件夹。\n3. 在外层声明var that = this;可以在内层间接获取到this的数据。\n4. 页面中控件位置可以用css来控制，所以css要学好。\n5. 适当运用data-key这个属性，可以在wx.perview时用到。 \n6. 小程序不能分享到朋友圈也不能长按二维码图片进入。\n7. 小程序不支持http访问，而且访问公网的网站必须要在小程序官网配置上。\n8. 小程序审核时间在两天左右，周六周天不审核，感觉审核门槛还不算特别高。\n\n待补充~\n","slug":"wechat-app","published":1,"updated":"2017-06-08T12:20:29.312Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9fnih3i002gsv1fzhuougtu","content":"<blockquote class=\"blockquote-center\"><p>微信小程序开发小记</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>小程序从注册到上线确实是很严格，感觉小程序并不是很火，可能是相比小程序App用的比较多，小程序的出发点是发展线下推广，即扫即用，所以就目前API来说 不能分享到微信朋友圈，而且打开小程序不能通过长按二维码图片进入，比较好的线上宣传方式就是小程序右上角的分享了，分享到朋友或微信群其他人就可以直接点击进入。</p>\n<p>这里就不说基本的东西，基本的语法什么的可以去看公众平台，大部分是js跟css的东西。</p>\n<p>下面就说下遇到的坑还有一些经验吧。</p>\n<ol>\n<li>写好的页面要在app.json中注册，app.json就相当于Android中的Manifest.xml文件，管着整个应用的。</li>\n<li>某文件父文件夹有几个就写几个”../“可以退到对应文件夹。</li>\n<li>在外层声明var that = this;可以在内层间接获取到this的数据。</li>\n<li>页面中控件位置可以用css来控制，所以css要学好。</li>\n<li>适当运用data-key这个属性，可以在wx.perview时用到。 </li>\n<li>小程序不能分享到朋友圈也不能长按二维码图片进入。</li>\n<li>小程序不支持http访问，而且访问公网的网站必须要在小程序官网配置上。</li>\n<li>小程序审核时间在两天左右，周六周天不审核，感觉审核门槛还不算特别高。</li>\n</ol>\n<p>待补充~</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>微信小程序开发小记</p>\n</blockquote>","more":"<p>小程序从注册到上线确实是很严格，感觉小程序并不是很火，可能是相比小程序App用的比较多，小程序的出发点是发展线下推广，即扫即用，所以就目前API来说 不能分享到微信朋友圈，而且打开小程序不能通过长按二维码图片进入，比较好的线上宣传方式就是小程序右上角的分享了，分享到朋友或微信群其他人就可以直接点击进入。</p>\n<p>这里就不说基本的东西，基本的语法什么的可以去看公众平台，大部分是js跟css的东西。</p>\n<p>下面就说下遇到的坑还有一些经验吧。</p>\n<ol>\n<li>写好的页面要在app.json中注册，app.json就相当于Android中的Manifest.xml文件，管着整个应用的。</li>\n<li>某文件父文件夹有几个就写几个”../“可以退到对应文件夹。</li>\n<li>在外层声明var that = this;可以在内层间接获取到this的数据。</li>\n<li>页面中控件位置可以用css来控制，所以css要学好。</li>\n<li>适当运用data-key这个属性，可以在wx.perview时用到。 </li>\n<li>小程序不能分享到朋友圈也不能长按二维码图片进入。</li>\n<li>小程序不支持http访问，而且访问公网的网站必须要在小程序官网配置上。</li>\n<li>小程序审核时间在两天左右，周六周天不审核，感觉审核门槛还不算特别高。</li>\n</ol>\n<p>待补充~</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj9fnih0d0008sv1fui8e3wer","category_id":"cj9fnigzy0004sv1f3c5aj6nt","_id":"cj9fnih0w000gsv1f6i8lwn4l"},{"post_id":"cj9fnigz60000sv1fhcauz1a7","category_id":"cj9fnigzy0004sv1f3c5aj6nt","_id":"cj9fnih14000ksv1fixewijyn"},{"post_id":"cj9fnih0k000asv1fno6q2uoc","category_id":"cj9fnigzy0004sv1f3c5aj6nt","_id":"cj9fnih18000nsv1firb8duhu"},{"post_id":"cj9fnih0o000esv1fepi3of5l","category_id":"cj9fnigzy0004sv1f3c5aj6nt","_id":"cj9fnih1c000qsv1f2kd073ec"},{"post_id":"cj9fnigzn0002sv1fexx73vtc","category_id":"cj9fnih0m000bsv1fo9zjo2ke","_id":"cj9fnih1g000usv1fn2xxlhnp"},{"post_id":"cj9fnih0u000fsv1fcghyywg1","category_id":"cj9fnigzy0004sv1f3c5aj6nt","_id":"cj9fnih1j000xsv1fh2balll1"},{"post_id":"cj9fnih0z000jsv1fq8d8rdlr","category_id":"cj9fnigzy0004sv1f3c5aj6nt","_id":"cj9fnih1m0011sv1f2ms09amq"},{"post_id":"cj9fnih090006sv1fj1ev74lc","category_id":"cj9fnih0x000hsv1fc5sp7fzz","_id":"cj9fnih1p0013sv1f93a2ah4h"},{"post_id":"cj9fnih17000msv1fpcd5g4ih","category_id":"cj9fnih1d000ssv1fy0evktm7","_id":"cj9fnih1s0017sv1flbw8enty"},{"post_id":"cj9fnih1b000psv1fd0mbkbe5","category_id":"cj9fnih1m0010sv1f49jmt3ty","_id":"cj9fnih1z001csv1fkmfm970b"},{"post_id":"cj9fnih1q0016sv1fsgxz6zok","category_id":"cj9fnigzy0004sv1f3c5aj6nt","_id":"cj9fnih27001fsv1f2u443j72"},{"post_id":"cj9fnih1e000tsv1fxkzdp4m0","category_id":"cj9fnih1t0018sv1f7u0ghgq6","_id":"cj9fnih2f001ksv1f4jr7a2sq"},{"post_id":"cj9fnih1x001bsv1f5hurj2dj","category_id":"cj9fnigzy0004sv1f3c5aj6nt","_id":"cj9fnih2h001nsv1fisim05g2"},{"post_id":"cj9fnih25001esv1ffeowuax9","category_id":"cj9fnih0m000bsv1fo9zjo2ke","_id":"cj9fnih2k001rsv1fzyrd9tgk"},{"post_id":"cj9fnih1h000wsv1ffn985f9x","category_id":"cj9fnih1t0018sv1f7u0ghgq6","_id":"cj9fnih2o001tsv1fqpo5qv9s"},{"post_id":"cj9fnih2c001hsv1faxosg0xl","category_id":"cj9fnigzy0004sv1f3c5aj6nt","_id":"cj9fnih2s001wsv1fbo47ygpr"},{"post_id":"cj9fnih2g001lsv1f068mb6u5","category_id":"cj9fnigzy0004sv1f3c5aj6nt","_id":"cj9fnih2u0020sv1fsq025jvp"},{"post_id":"cj9fnih1k000zsv1fzo50oc5i","category_id":"cj9fnih1t0018sv1f7u0ghgq6","_id":"cj9fnih2w0024sv1fszikpvlr"},{"post_id":"cj9fnih2i001psv1fu00eohpb","category_id":"cj9fnih1t0018sv1f7u0ghgq6","_id":"cj9fnih320028sv1fq38up82p"},{"post_id":"cj9fnih1n0012sv1fogbuxwm5","category_id":"cj9fnih2j001qsv1fuz4wyl1j","_id":"cj9fnih38002asv1fa1kw95i2"},{"post_id":"cj9fnih2t001zsv1frzj0bda7","category_id":"cj9fnih1t0018sv1f7u0ghgq6","_id":"cj9fnih3h002fsv1fddeceif7"},{"post_id":"cj9fnih1u0019sv1fz1em3by1","category_id":"cj9fnih2t001xsv1fu6zxfnnj","_id":"cj9fnih3m002hsv1fi96qur6b"},{"post_id":"cj9fnih330029sv1f6sptlogw","category_id":"cj9fnih1d000ssv1fy0evktm7","_id":"cj9fnih3p002ksv1f4l4wi6h0"},{"post_id":"cj9fnih2k001ssv1fgzij4eut","category_id":"cj9fnih300026sv1fdowu8hdb","_id":"cj9fnih3p002msv1f3at4ukuo"},{"post_id":"cj9fnih2o001usv1fu35ybr43","category_id":"cj9fnih3g002dsv1f8hgauxh2","_id":"cj9fnih3r002osv1fpgqijpt5"},{"post_id":"cj9fnih2v0022sv1feirlu5dw","category_id":"cj9fnih3o002jsv1feffdhglh","_id":"cj9fnih3t002ssv1fz7pzqugl"},{"post_id":"cj9fnih2y0025sv1figemrrfk","category_id":"cj9fnih3r002psv1fm8j9i9tk","_id":"cj9fnih3u002vsv1fuuqapcf8"},{"post_id":"cj9fnih3a002csv1fh24weupe","category_id":"cj9fnih3t002tsv1fjnfpbb4s","_id":"cj9fnih3x0030sv1f66thceb8"},{"post_id":"cj9fnih3i002gsv1fzhuougtu","category_id":"cj9fnih3t002tsv1fjnfpbb4s","_id":"cj9fnih3z0032sv1fsikci5zx"}],"PostTag":[{"post_id":"cj9fnigz60000sv1fhcauz1a7","tag_id":"cj9fnih060005sv1f9ymndxen","_id":"cj9fnih0o000dsv1ft8pevr82"},{"post_id":"cj9fnigzn0002sv1fexx73vtc","tag_id":"cj9fnih0m000csv1fha1fpwns","_id":"cj9fnih15000lsv1fmlsp10ji"},{"post_id":"cj9fnih090006sv1fj1ev74lc","tag_id":"cj9fnih0y000isv1fjr5t48zn","_id":"cj9fnih1d000rsv1fvri7nvnf"},{"post_id":"cj9fnih0d0008sv1fui8e3wer","tag_id":"cj9fnih19000osv1f72x212r6","_id":"cj9fnih1j000ysv1flbfjf2xf"},{"post_id":"cj9fnih0k000asv1fno6q2uoc","tag_id":"cj9fnih1h000vsv1ft9ce15gp","_id":"cj9fnih1q0015sv1f9vasrw32"},{"post_id":"cj9fnih0o000esv1fepi3of5l","tag_id":"cj9fnih1p0014sv1fvvqkbs65","_id":"cj9fnih2e001isv1ftrmpomg4"},{"post_id":"cj9fnih0o000esv1fepi3of5l","tag_id":"cj9fnih1w001asv1fl1m3q92d","_id":"cj9fnih2h001msv1fzz7o6wyb"},{"post_id":"cj9fnih0u000fsv1fcghyywg1","tag_id":"cj9fnih27001gsv1f0mzlgqbs","_id":"cj9fnih2t001ysv1fvqn1hfw8"},{"post_id":"cj9fnih0u000fsv1fcghyywg1","tag_id":"cj9fnih2h001osv1futdmcybs","_id":"cj9fnih2v0021sv1fcfe4b85h"},{"post_id":"cj9fnih0z000jsv1fq8d8rdlr","tag_id":"cj9fnih2r001vsv1f15z7zmh3","_id":"cj9fnih300027sv1fkugav512"},{"post_id":"cj9fnih17000msv1fpcd5g4ih","tag_id":"cj9fnih2w0023sv1fcu30ob24","_id":"cj9fnih3h002esv1f03zgivoy"},{"post_id":"cj9fnih1b000psv1fd0mbkbe5","tag_id":"cj9fnih38002bsv1fgnmgt8rt","_id":"cj9fnih3p002lsv1fhc7rrql8"},{"post_id":"cj9fnih1e000tsv1fxkzdp4m0","tag_id":"cj9fnih3n002isv1fa24t5q0o","_id":"cj9fnih3s002qsv1fw9l4hyl8"},{"post_id":"cj9fnih1h000wsv1ffn985f9x","tag_id":"cj9fnih3q002nsv1fcljvgfez","_id":"cj9fnih3v002xsv1fvvdcyikz"},{"post_id":"cj9fnih1h000wsv1ffn985f9x","tag_id":"cj9fnih3s002rsv1f42npfp1e","_id":"cj9fnih3w002ysv1f64tdsc6x"},{"post_id":"cj9fnih1k000zsv1fzo50oc5i","tag_id":"cj9fnih3u002usv1fonm8drbf","_id":"cj9fnih400034sv1fo7bnhnbj"},{"post_id":"cj9fnih1k000zsv1fzo50oc5i","tag_id":"cj9fnih3x002zsv1f54c20b2z","_id":"cj9fnih400035sv1fqdkfc1f0"},{"post_id":"cj9fnih1k000zsv1fzo50oc5i","tag_id":"cj9fnih3y0031sv1fxja8drq2","_id":"cj9fnih400037sv1ffs0zt8ob"},{"post_id":"cj9fnih1n0012sv1fogbuxwm5","tag_id":"cj9fnih3z0033sv1fvh5k83hi","_id":"cj9fnih400038sv1f6o1tgnnf"},{"post_id":"cj9fnih1q0016sv1fsgxz6zok","tag_id":"cj9fnih400036sv1fzpqa2oaj","_id":"cj9fnih41003asv1fd4zewi15"},{"post_id":"cj9fnih1u0019sv1fz1em3by1","tag_id":"cj9fnih410039sv1f3qd5njvv","_id":"cj9fnih42003csv1fijhwz20k"},{"post_id":"cj9fnih1x001bsv1f5hurj2dj","tag_id":"cj9fnih42003bsv1f403v9r20","_id":"cj9fnih44003esv1fte640sd7"},{"post_id":"cj9fnih25001esv1ffeowuax9","tag_id":"cj9fnih43003dsv1ff7vprq0v","_id":"cj9fnih48003isv1frv0ls1ff"},{"post_id":"cj9fnih25001esv1ffeowuax9","tag_id":"cj9fnih45003fsv1fn4e9le0f","_id":"cj9fnih49003jsv1f91sa7wcj"},{"post_id":"cj9fnih25001esv1ffeowuax9","tag_id":"cj9fnih46003gsv1fmm33d8sk","_id":"cj9fnih4a003lsv1fgfrur0kh"},{"post_id":"cj9fnih2c001hsv1faxosg0xl","tag_id":"cj9fnih47003hsv1fpks1m35h","_id":"cj9fnih4e003qsv1f645ihh0t"},{"post_id":"cj9fnih2c001hsv1faxosg0xl","tag_id":"cj9fnih4a003ksv1fy1basve9","_id":"cj9fnih4e003rsv1fm0c8ef0t"},{"post_id":"cj9fnih2c001hsv1faxosg0xl","tag_id":"cj9fnih4a003msv1ffdbd2tla","_id":"cj9fnih4h003tsv1fsbww83h0"},{"post_id":"cj9fnih2c001hsv1faxosg0xl","tag_id":"cj9fnih4b003nsv1fke7mscrl","_id":"cj9fnih4i003usv1fq8akfcnn"},{"post_id":"cj9fnih2c001hsv1faxosg0xl","tag_id":"cj9fnih4c003osv1f5yrus2xz","_id":"cj9fnih4k003wsv1fr5qsl8oj"},{"post_id":"cj9fnih2g001lsv1f068mb6u5","tag_id":"cj9fnih4d003psv1fpie62vfl","_id":"cj9fnih4l003xsv1fxbw679t0"},{"post_id":"cj9fnih2g001lsv1f068mb6u5","tag_id":"cj9fnih4e003ssv1f60l3b0en","_id":"cj9fnih4m003zsv1f6x354vg6"},{"post_id":"cj9fnih2i001psv1fu00eohpb","tag_id":"cj9fnih3u002usv1fonm8drbf","_id":"cj9fnih4o0042sv1f7r227udt"},{"post_id":"cj9fnih2i001psv1fu00eohpb","tag_id":"cj9fnih3x002zsv1f54c20b2z","_id":"cj9fnih4p0043sv1fi7jalzur"},{"post_id":"cj9fnih2i001psv1fu00eohpb","tag_id":"cj9fnih4n0040sv1fmcqt9yl1","_id":"cj9fnih4p0045sv1fnhv871on"},{"post_id":"cj9fnih2k001ssv1fgzij4eut","tag_id":"cj9fnih4o0041sv1fiwj3vf8s","_id":"cj9fnih4p0046sv1fp5wqgo5s"},{"post_id":"cj9fnih2o001usv1fu35ybr43","tag_id":"cj9fnih4p0044sv1f9beo1an6","_id":"cj9fnih4q0048sv1fc4mxubvl"},{"post_id":"cj9fnih2t001zsv1frzj0bda7","tag_id":"cj9fnih4p0047sv1f48ys45yc","_id":"cj9fnih4r004asv1f2wmg5q1s"},{"post_id":"cj9fnih2v0022sv1feirlu5dw","tag_id":"cj9fnih4q0049sv1fi1w7zvz2","_id":"cj9fnih4t004dsv1fx1v2w5wf"},{"post_id":"cj9fnih2v0022sv1feirlu5dw","tag_id":"cj9fnih4r004bsv1fo6nn6dij","_id":"cj9fnih4t004esv1fjxxlqr1i"},{"post_id":"cj9fnih2y0025sv1figemrrfk","tag_id":"cj9fnih4a003ksv1fy1basve9","_id":"cj9fnih4w004gsv1fhdlkugqc"},{"post_id":"cj9fnih330029sv1f6sptlogw","tag_id":"cj9fnih4u004fsv1f77pvgbdd","_id":"cj9fnih4x004isv1f77hd3ryj"},{"post_id":"cj9fnih3a002csv1fh24weupe","tag_id":"cj9fnih4x004hsv1fmu82bv2f","_id":"cj9fnih4y004ksv1fd6jvyr5t"},{"post_id":"cj9fnih3i002gsv1fzhuougtu","tag_id":"cj9fnih4y004jsv1f7gm1lwo8","_id":"cj9fnih4y004lsv1fyst786lo"}],"Tag":[{"name":"ShareMy","_id":"cj9fnih060005sv1f9ymndxen"},{"name":"博客","_id":"cj9fnih0m000csv1fha1fpwns"},{"name":"爱壁纸","_id":"cj9fnih0y000isv1fjr5t48zn"},{"name":"Provider","_id":"cj9fnih19000osv1f72x212r6"},{"name":"Socket","_id":"cj9fnih1h000vsv1ft9ce15gp"},{"name":"ADB WIFI","_id":"cj9fnih1p0014sv1fvvqkbs65"},{"name":"Android Studio","_id":"cj9fnih1w001asv1fl1m3q92d"},{"name":".so","_id":"cj9fnih27001gsv1f0mzlgqbs"},{"name":"Bmob","_id":"cj9fnih2h001osv1futdmcybs"},{"name":"选项卡","_id":"cj9fnih2r001vsv1f15z7zmh3"},{"name":"Android","_id":"cj9fnih2w0023sv1fcu30ob24"},{"name":"搭建博客","_id":"cj9fnih38002bsv1fgnmgt8rt"},{"name":"远程连接","_id":"cj9fnih3n002isv1fa24t5q0o"},{"name":"MySql","_id":"cj9fnih3q002nsv1fcljvgfez"},{"name":"Navicat","_id":"cj9fnih3s002rsv1f42npfp1e"},{"name":"Linux","_id":"cj9fnih3u002usv1fonm8drbf"},{"name":"Ubuntu","_id":"cj9fnih3x002zsv1f54c20b2z"},{"name":"hostname","_id":"cj9fnih3y0031sv1fxja8drq2"},{"name":"快捷键","_id":"cj9fnih3z0033sv1fvh5k83hi"},{"name":"拍卖","_id":"cj9fnih400036sv1fzpqa2oaj"},{"name":"SQL","_id":"cj9fnih410039sv1f3qd5njvv"},{"name":"备忘悬浮","_id":"cj9fnih42003bsv1f403v9r20"},{"name":"HTML","_id":"cj9fnih43003dsv1ff7vprq0v"},{"name":"CSS","_id":"cj9fnih45003fsv1fn4e9le0f"},{"name":"PHP","_id":"cj9fnih46003gsv1fmm33d8sk"},{"name":"推送","_id":"cj9fnih47003hsv1fpks1m35h"},{"name":"统计","_id":"cj9fnih4a003ksv1fy1basve9"},{"name":"云存储","_id":"cj9fnih4a003msv1ffdbd2tla"},{"name":"短信验证码","_id":"cj9fnih4b003nsv1fke7mscrl"},{"name":"广告","_id":"cj9fnih4c003osv1f5yrus2xz"},{"name":"android","_id":"cj9fnih4d003psv1fpie62vfl"},{"name":"二维码","_id":"cj9fnih4e003ssv1f60l3b0en"},{"name":"nodejs","_id":"cj9fnih4n0040sv1fmcqt9yl1"},{"name":"正则","_id":"cj9fnih4o0041sv1fiwj3vf8s"},{"name":"Servlet","_id":"cj9fnih4p0044sv1f9beo1an6"},{"name":"Samba","_id":"cj9fnih4p0047sv1f48ys45yc"},{"name":"MarkDown","_id":"cj9fnih4q0049sv1fi1w7zvz2"},{"name":"汇总","_id":"cj9fnih4r004bsv1fo6nn6dij"},{"name":"常用颜色","_id":"cj9fnih4u004fsv1f77pvgbdd"},{"name":"https","_id":"cj9fnih4x004hsv1fmu82bv2f"},{"name":"山东微拼","_id":"cj9fnih4y004jsv1f7gm1lwo8"}]}}